
eeprom.c,1358
void eep_readUSBHidReportDescriptor()eep_readUSBHidReportDescriptor24,970
void eep_saveUSBHidReportDescriptor()eep_saveUSBHidReportDescriptor35,1435
void eep_readUSBDataSequence()eep_readUSBDataSequence49,1938
void eep_saveUSBDataSequence()eep_saveUSBDataSequence79,2710
void eep_readUSBDescriptorStringVendor()eep_readUSBDescriptorStringVendor91,3032
void eep_saveUSBDescriptorStringVendor()eep_saveUSBDescriptorStringVendor98,3263
void eep_readUSBDescriptorStringDevice()eep_readUSBDescriptorStringDevice108,3577
void eep_saveUSBDescriptorStringDevice()eep_saveUSBDescriptorStringDevice115,3808
void eep_readUSBDescriptorStringSerialNumber()eep_readUSBDescriptorStringSerialNumber125,4122
void eep_saveUSBDescriptorStringSerialNumber()eep_saveUSBDescriptorStringSerialNumber132,4365
void eep_readUSBReceiveData()eep_readUSBReceiveData142,4691
void eep_saveUSBReceiveData()eep_saveUSBReceiveData149,4878
void eep_readUSBCfgVendorID()eep_readUSBCfgVendorID159,5148
void eep_saveUSBCfgVendorID()eep_saveUSBCfgVendorID168,5417
void eep_readUSBCfgDeviceID()eep_readUSBCfgDeviceID177,5713
void eep_saveUSBCfgDeviceID()eep_saveUSBCfgDeviceID186,5984
void eep_toggleUSBConfigBit(uint8_t bit)eep_toggleUSBConfigBit195,6282
void eep_deleteUSBConfigBits()eep_deleteUSBConfigBits207,6571
void eep_getConfig()eep_getConfig215,6776

main.c,536
int __attribute__((noreturn)) main(void)main21,891
void init(void)init72,2299
void _loadEEPROMConfig()_loadEEPROMConfig114,3480
void interpretUSBDataSequence()interpretUSBDataSequence246,8704
void usbReset( void )usbReset329,11274
uchar usbFunctionRead(uchar *data, uchar len)usbFunctionRead356,12034
uchar usbFunctionWrite(uchar *data, uchar len)usbFunctionWrite396,13515
uchar usbFunctionDescriptor(usbRequest_t *rq)usbFunctionDescriptor451,15282
usbMsgLen_t usbFunctionSetup(uchar data[8])usbFunctionSetup554,18581

tty.c,2234
void tty_init()tty_init21,885
static int _uart_putc(char c, FILE *stream)_uart_putc44,1355
void tty_pollTerminal(void)tty_pollTerminal56,1595
int tty_executeCmd(const char *buffer)tty_executeCmd236,8624
void tty_ledRedOn()tty_ledRedOn299,10586
void tty_ledRedOff()tty_ledRedOff304,10667
void tty_ledGreenOn()tty_ledGreenOn309,10748
void tty_ledGreenOff()tty_ledGreenOff314,10837
void tty_ledYellowOn()tty_ledYellowOn319,10926
void tty_ledYellowOff()tty_ledYellowOff324,11019
void tty_setInterrupt()tty_setInterrupt330,11192
void tty_setInterrupt3()tty_setInterrupt3346,11531
void tty_getUSBReportData()tty_getUSBReportData362,11838
void tty_getUSBDataSequence()tty_getUSBDataSequence374,12155
void tty_getUSBReceiveData()tty_getUSBReceiveData387,12565
void tty_getUSBHidDeviceDescriptor()tty_getUSBHidDeviceDescriptor402,12821
void tty_getVendorName()tty_getVendorName413,13163
void tty_getDeviceName()tty_getDeviceName427,13539
void tty_getSerialNumber()tty_getSerialNumber441,13917
void tty_getUSBConfigVendorID()tty_getUSBConfigVendorID456,14367
void tty_getUSBConfigDeviceID()tty_getUSBConfigDeviceID464,14590
void tty_setUSBReportData()tty_setUSBReportData472,14817
void tty_setUSBDataSequence()tty_setUSBDataSequence478,14925
void tty_setUSBReceiveData(char* t)tty_setUSBReceiveData483,15015
void tty_setUSBHidDeviceDescriptor()tty_setUSBHidDeviceDescriptor503,15433
void tty_setVendorName(char* t)tty_setVendorName508,15532
void tty_setDeviceName(char* t)tty_setDeviceName525,16130
void tty_setSerialNumber(char* t)tty_setSerialNumber540,16581
void tty_setVendorHeader(char *t)tty_setVendorHeader555,17046
void tty_setSerialNumberHeader(char *t)tty_setSerialNumberHeader565,17277
void tty_setDeviceNameHeader(char *t)tty_setDeviceNameHeader575,17522
void tty_setUSBConfigVendorID(char* t)tty_setUSBConfigVendorID584,17736
void tty_setUSBConfigDeviceID(char* t)tty_setUSBConfigDeviceID594,17978
void tty_Help()tty_Help606,18303
void tty_startBootloader()tty_startBootloader611,18348
void tty_usbActive(char* t)tty_usbActive618,18439
void tty_setEcho(char* t)tty_setEcho640,18880
void tty_toggleProveReceiveData(void)tty_toggleProveReceiveData652,19114

uart.c,8058
#define UART_RX_BUFFER_MASK UART_RX_BUFFER_MASK51,1881
#define UART_TX_BUFFER_MASK UART_TX_BUFFER_MASK52,1937
 #define AT90_UARTAT90_UART66,2446
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT67,2466
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT68,2516
 #define UART0_STATUS UART0_STATUS69,2566
 #define UART0_CONTROL UART0_CONTROL70,2595
 #define UART0_DATA UART0_DATA71,2624
 #define UART0_UDRIE UART0_UDRIE72,2655
 #define AT90_UARTAT90_UART75,2788
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT76,2808
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT77,2858
 #define UART0_STATUS UART0_STATUS78,2908
 #define UART0_CONTROL UART0_CONTROL79,2939
 #define UART0_DATA UART0_DATA80,2970
 #define UART0_UDRIE UART0_UDRIE81,3000
 #define ATMEGA_USARTATMEGA_USART86,3256
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT87,3279
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT88,3329
 #define UART0_STATUS UART0_STATUS89,3379
 #define UART0_CONTROL UART0_CONTROL90,3410
 #define UART0_DATA UART0_DATA91,3441
 #define UART0_UDRIE UART0_UDRIE92,3470
 #define ATMEGA_UARTATMEGA_UART95,3569
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT96,3591
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT97,3641
 #define UART0_STATUS UART0_STATUS98,3691
 #define UART0_CONTROL UART0_CONTROL99,3722
 #define UART0_DATA UART0_DATA100,3753
 #define UART0_UDRIE UART0_UDRIE101,3782
 #define ATMEGA_USART0ATMEGA_USART0104,3878
 #define ATMEGA_USART1ATMEGA_USART1105,3902
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT106,3926
 #define UART1_RECEIVE_INTERRUPT UART1_RECEIVE_INTERRUPT107,3978
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT108,4030
 #define UART1_TRANSMIT_INTERRUPT UART1_TRANSMIT_INTERRUPT109,4082
 #define UART0_STATUS UART0_STATUS110,4134
 #define UART0_CONTROL UART0_CONTROL111,4166
 #define UART0_DATA UART0_DATA112,4198
 #define UART0_UDRIE UART0_UDRIE113,4228
 #define UART1_STATUS UART1_STATUS114,4260
 #define UART1_CONTROL UART1_CONTROL115,4292
 #define UART1_DATA UART1_DATA116,4324
 #define UART1_UDRIE UART1_UDRIE117,4354
 #define ATMEGA_USART0ATMEGA_USART0120,4480
 #define ATMEGA_USART1ATMEGA_USART1121,4504
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT122,4528
 #define UART1_RECEIVE_INTERRUPT UART1_RECEIVE_INTERRUPT123,4579
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT124,4630
 #define UART1_TRANSMIT_INTERRUPT UART1_TRANSMIT_INTERRUPT125,4681
 #define UART0_STATUS UART0_STATUS126,4732
 #define UART0_CONTROL UART0_CONTROL127,4764
 #define UART0_DATA UART0_DATA128,4796
 #define UART0_UDRIE UART0_UDRIE129,4826
 #define UART1_STATUS UART1_STATUS130,4858
 #define UART1_CONTROL UART1_CONTROL131,4890
 #define UART1_DATA UART1_DATA132,4922
 #define UART1_UDRIE UART1_UDRIE133,4952
 #define ATMEGA_USARTATMEGA_USART139,5175
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT140,5198
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT141,5249
 #define UART0_STATUS UART0_STATUS142,5300
 #define UART0_CONTROL UART0_CONTROL143,5331
 #define UART0_DATA UART0_DATA144,5362
 #define UART0_UDRIE UART0_UDRIE145,5391
 #define ATMEGA_USART0ATMEGA_USART0151,5697
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT153,5754
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT154,5804
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT156,5863
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT157,5914
 #define UART0_STATUS UART0_STATUS159,5973
 #define UART0_CONTROL UART0_CONTROL160,6005
 #define UART0_DATA UART0_DATA161,6037
 #define UART0_UDRIE UART0_UDRIE162,6067
 #define ATMEGA_USARTATMEGA_USART164,6134
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT165,6157
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT166,6208
 #define UART0_STATUS UART0_STATUS167,6260
 #define UART0_CONTROL UART0_CONTROL168,6291
 #define UART0_DATA UART0_DATA169,6322
 #define UART0_UDRIE UART0_UDRIE170,6351
  #define ATMEGA_USART0ATMEGA_USART0176,6681
  #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT177,6706
  #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT178,6757
  #define UART0_STATUS UART0_STATUS179,6808
  #define UART0_CONTROL UART0_CONTROL180,6841
  #define UART0_DATA UART0_DATA181,6874
  #define UART0_UDRIE UART0_UDRIE182,6905
  #define ATMEGA_USART0ATMEGA_USART0187,7143
  #define ATMEGA_USART1ATMEGA_USART1188,7168
  #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT189,7193
  #define UART1_RECEIVE_INTERRUPT UART1_RECEIVE_INTERRUPT190,7246
  #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT191,7299
  #define UART1_TRANSMIT_INTERRUPT UART1_TRANSMIT_INTERRUPT192,7352
  #define UART0_STATUS UART0_STATUS193,7405
  #define UART0_CONTROL UART0_CONTROL194,7438
  #define UART0_DATA UART0_DATA195,7471
  #define UART0_UDRIE UART0_UDRIE196,7502
  #define UART1_STATUS UART1_STATUS197,7535
  #define UART1_CONTROL UART1_CONTROL198,7568
  #define UART1_DATA UART1_DATA199,7601
  #define UART1_UDRIE UART1_UDRIE200,7632
 #define ATMEGA_USART0ATMEGA_USART0203,7731
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT204,7755
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT205,7806
 #define UART0_STATUS UART0_STATUS206,7857
 #define UART0_CONTROL UART0_CONTROL207,7889
 #define UART0_DATA UART0_DATA208,7921
 #define UART0_UDRIE UART0_UDRIE209,7951
 #define ATMEGA_USART0ATMEGA_USART0212,8110
 #define ATMEGA_USART1ATMEGA_USART1213,8134
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT214,8158
 #define UART1_RECEIVE_INTERRUPT UART1_RECEIVE_INTERRUPT215,8209
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT216,8261
 #define UART1_TRANSMIT_INTERRUPT UART1_TRANSMIT_INTERRUPT217,8312
 #define UART0_STATUS UART0_STATUS218,8364
 #define UART0_CONTROL UART0_CONTROL219,8396
 #define UART0_DATA UART0_DATA220,8428
 #define UART0_UDRIE UART0_UDRIE221,8458
 #define UART1_STATUS UART1_STATUS222,8490
 #define UART1_CONTROL UART1_CONTROL223,8522
 #define UART1_DATA UART1_DATA224,8554
 #define UART1_UDRIE UART1_UDRIE225,8584
static volatile unsigned char UART_TxBuf[UART_TX_BUFFER_SIZE];UART_TxBuf234,8721
static volatile unsigned char UART_RxBuf[UART_RX_BUFFER_SIZE];UART_RxBuf235,8785
static volatile unsigned char UART_TxHead;UART_TxHead236,8849
static volatile unsigned char UART_TxTail;UART_TxTail237,8893
static volatile unsigned char UART_RxHead;UART_RxHead238,8937
static volatile unsigned char UART_RxTail;UART_RxTail239,8981
static volatile unsigned char UART_LastRxError;UART_LastRxError240,9025
static volatile unsigned char UART1_TxBuf[UART_TX_BUFFER_SIZE];UART1_TxBuf243,9106
static volatile unsigned char UART1_RxBuf[UART_RX_BUFFER_SIZE];UART1_RxBuf244,9171
static volatile unsigned char UART1_TxHead;UART1_TxHead245,9236
static volatile unsigned char UART1_TxTail;UART1_TxTail246,9281
static volatile unsigned char UART1_RxHead;UART1_RxHead247,9326
static volatile unsigned char UART1_RxTail;UART1_RxTail248,9371
static volatile unsigned char UART1_LastRxError;UART1_LastRxError249,9416
ISR(UART0_RECEIVE_INTERRUPT)ISR255,9513
ISR(UART0_TRANSMIT_INTERRUPT)ISR302,10895
void uart_init(unsigned int baudrate)uart_init335,12069
unsigned int uart_getc(void)uart_getc420,14536
void uart_putc(unsigned char data)uart_putc448,15317
void uart_puts(const char *s )uart_puts479,16072
void uart_puts_p(const char *progmem_s )uart_puts_p493,16472
SIGNAL(UART1_RECEIVE_INTERRUPT)SIGNAL508,16738
SIGNAL(UART1_TRANSMIT_INTERRUPT)SIGNAL543,17779
void uart1_init(unsigned int baudrate)uart1_init570,18848
unsigned int uart1_getc(void)uart1_getc605,19889
void uart1_putc(unsigned char data)uart1_putc633,20679
void uart1_puts(const char *s )uart1_puts659,21359
void uart1_puts_p(const char *progmem_s )uart1_puts_p673,21764

eeprom.h,896
#define EEPROM_HEEPROM_H19,804
#define EEMEM EEMEM39,1259
const prog_char _str_cfg[] = "eCfg = 0x%04x";_str_cfg44,1402
uint16_t eep_usbConfig EEMEM;EEMEM67,2048
uint8_t  eep_maxUSBHidReportDescriptorBytes EEMEM;EEMEM68,2078
char     eep_usbHidReportDescriptor[USB_CFG_HID_REPORT_DESCRIPTOR_LEN] EEMEM;EEMEM69,2129
int      eep_usbDescriptorStringVendor[USB_DEVICE_STRING_DESCRIPTION_LEN] EEMEM;EEMEM71,2208
int      eep_usbDescriptorStringDevice[USB_DEVICE_STRING_DESCRIPTION_LEN] EEMEM;EEMEM72,2289
int      eep_usbDescriptorSerialNumber[USB_DEVICE_STRING_DESCRIPTION_LEN] EEMEM;EEMEM73,2370
uint8_t  eep_usbCfgVendorID[USB_CFG_ID_BYTE_CNT] EEMEM;EEMEM75,2452
uint8_t  eep_usbCfgDeviceID[USB_CFG_ID_BYTE_CNT] EEMEM;EEMEM76,2508
uint8_t  eep_usbReceiveData[USB_RECEIVE_DATA_SIZE] EEMEM;EEMEM78,2565
uint8_t  eep_usbDataSequence[USB_MAX_DATA_SEQ_SIZE] EEMEM;EEMEM80,2624

globals.h,2979
#define __GLOBAL_H____GLOBAL_H__19,812
#define F_CPU F_CPU27,1028
#define WITH_INTERPRETERWITH_INTERPRETER33,1212
#define USB_CFG_HID_REPORT_DESCRIPTOR_LEN USB_CFG_HID_REPORT_DESCRIPTOR_LEN37,1320
#define USB_DEVICE_STRING_DESCRIPTION_LEN USB_DEVICE_STRING_DESCRIPTION_LEN40,1422
#define USB_MAX_DATA_BYTES USB_MAX_DATA_BYTES43,1530
#define USB_CFG_ID_BYTE_CNT USB_CFG_ID_BYTE_CNT46,1620
#define USB_RECEIVE_DATA_SIZE USB_RECEIVE_DATA_SIZE53,2013
#define USB_MAX_DATA_SEQ_SIZE USB_MAX_DATA_SEQ_SIZE56,2128
#define LED_RED_PORT LED_RED_PORT60,2300
#define LED_YELLOW_PORT LED_YELLOW_PORT61,2330
#define LED_GREEN_PORT LED_GREEN_PORT62,2360
#define LED_RED_PIN LED_RED_PIN63,2390
#define LED_YELLOW_PIN LED_YELLOW_PIN64,2418
#define LED_GREEN_PIN LED_GREEN_PIN65,2446
#define EEP_CFG_USB_HID_REPORT_DESCRIPTOR EEP_CFG_USB_HID_REPORT_DESCRIPTOR71,2736
#define EEP_CFG_USB_DESCRIPTOR_STRING_VENDOR EEP_CFG_USB_DESCRIPTOR_STRING_VENDOR72,2790
#define EEP_CFG_USB_DESCRIPTOR_STRING_DEVICE EEP_CFG_USB_DESCRIPTOR_STRING_DEVICE73,2844
#define EEP_CFG_USB_DESCRIPTOR_STRING_SERIAL_NUMBER EEP_CFG_USB_DESCRIPTOR_STRING_SERIAL_NUMBER74,2898
#define EEP_CFG_USB_CONFIG_VENDOR_ID EEP_CFG_USB_CONFIG_VENDOR_ID75,2952
#define EEP_CFG_USB_CONFIG_DEVICE_ID EEP_CFG_USB_CONFIG_DEVICE_ID76,3006
#define EEP_CFG_USB_DATA_SEQ EEP_CFG_USB_DATA_SEQ77,3060
#define EEP_CFG_USB_CONFIG_INTERPRET_SD EEP_CFG_USB_CONFIG_INTERPRET_SD78,3114
#define EEP_CFG_USB_RECEIVE_DATA EEP_CFG_USB_RECEIVE_DATA79,3168
#define EEP_CFG_USB_RECEIVE_DATA_ACTIVE EEP_CFG_USB_RECEIVE_DATA_ACTIVE80,3222
#define EEP_CFG_USB_ACTIVE EEP_CFG_USB_ACTIVE81,3353
#define EEP_CFG_USB_TYPES EEP_CFG_USB_TYPES83,3408
#define EEP_CFG_USB_STARTS_WITH EEP_CFG_USB_STARTS_WITH84,3510
#define EEP_CFG_VALUE_ON EEP_CFG_VALUE_ON86,3546
#define EEP_CFG_VALUE_OFF EEP_CFG_VALUE_OFF87,3574
#define UART_RX_BUFFER_SIZE UART_RX_BUFFER_SIZE92,3716
#define UART_TX_BUFFER_SIZE UART_TX_BUFFER_SIZE93,3748
#define USB_HID_DESCRIPTOR_DONE USB_HID_DESCRIPTOR_DONE98,3890
#define USB_CONFIG_DESCRIPTOR_DONE USB_CONFIG_DESCRIPTOR_DONE99,3957
#define USB_DEVICE_DESCRIPTOR_DONE USB_DEVICE_DESCRIPTOR_DONE100,4024
#define USB_HID_REPORT_DESCRIPTOR_DONE USB_HID_REPORT_DESCRIPTOR_DONE101,4091
#define USB_STRING_DEVICE_DESCRIPTOR_DONE USB_STRING_DEVICE_DESCRIPTOR_DONE102,4158
#define USB_STRING_VENDOR_DESCRIPTOR_DONE USB_STRING_VENDOR_DESCRIPTOR_DONE103,4225
#define USB_STRING_SERIAL_NUMBER_DESCRIPTOR_DONE USB_STRING_SERIAL_NUMBER_DESCRIPTOR_DONE104,4292
#define USB_LINUX_CONNECTED USB_LINUX_CONNECTED109,4556
#define USB_WIN7_CONNECTED USB_WIN7_CONNECTED115,4864
typedef struct USB_StatusUSB_Status121,5122
    uint16_t isd        : 1;isd125,5309
    uint16_t prd        : 1;prd128,5474
    uint16_t connected  : 1;connected131,5629
	uint16_t descr_sent : 7;descr_sent133,5691
	uint16_t sub_status : 6;sub_status134,5717
} USB_Status_t;USB_Status_t135,5743

help.h,67
#define _HELP_H__HELP_H_3,18
#define _MSG_HELP_ _MSG_HELP_5,36

main.h,1715
#define MAIN_HMAIN_H19,806
static uchar idleRate; // in 4 ms unitsidleRate102,2876
static uchar protocolVer = 1;protocolVer103,2916
static uchar bytesRemaining;bytesRemaining106,3002
uint8_t maxUSBDataBytes;maxUSBDataBytes108,3093
uint8_t dataBytes[USB_MAX_DATA_BYTES];dataBytes110,3160
uint8_t usbDataSequenceBytes;usbDataSequenceBytes114,3262
uint8_t usbDataSequence[USB_MAX_DATA_SEQ_SIZE];usbDataSequence116,3354
uint8_t usbReceiveData[USB_RECEIVE_DATA_SIZE];usbReceiveData117,3402
volatile USB_Status_t usb_status;usb_status122,3539
typedef struct USB_DescrUSB_Descr127,3684
    uint8_t USBCfgDeviceClass;USBCfgDeviceClass130,3742
    uint8_t USBCfgDeviceSubClass;USBCfgDeviceSubClass131,3773
    uint8_t USBCfgInterfaceClass; // 3USBCfgInterfaceClass133,3855
    uint8_t USBCfgInterfaceSubClass;USBCfgInterfaceSubClass134,3894
    uint8_t USBCfgInterfaceProtocol;USBCfgInterfaceProtocol135,3931
} USB_Descr_t;USB_Descr_t136,3968
USB_Descr_t usb_descr;usb_descr138,3984
uint8_t maxUSBHidReportDescriptorBytes = 22;maxUSBHidReportDescriptorBytes142,4090
char usbHidReportDescriptor[USB_CFG_HID_REPORT_DESCRIPTOR_LEN] = {usbHidReportDescriptor145,4198
int usbDescriptorStringVendor[USB_DEVICE_STRING_DESCRIPTION_LEN+1];usbDescriptorStringVendor161,4890
int usbDescriptorStringDevice[USB_DEVICE_STRING_DESCRIPTION_LEN+1];usbDescriptorStringDevice163,4959
int usbDescriptorStringSerialNumber[USB_DEVICE_STRING_DESCRIPTION_LEN+1];usbDescriptorStringSerialNumber165,5028
char usbDescriptorDevice[] = {    /* USB device descriptor */usbDescriptorDevice167,5103
char usbDescriptorConfiguration[] = {    // USB configuration descriptorusbDescriptorConfiguration188,6216

tty.h,6653
#define TTY_HTTY_H19,801
#define TTY_MAX_CMD_LINE_LEN TTY_MAX_CMD_LINE_LEN41,1307
#define TTY_CMD_WITHOUT_PARAMETER TTY_CMD_WITHOUT_PARAMETER43,1349
#define TTY_CMD_WITH_STRING_PARAMETER TTY_CMD_WITH_STRING_PARAMETER44,1390
#define TTY_READ_MODE_COMMAND TTY_READ_MODE_COMMAND46,1432
#define TTY_READ_MODE_HID_DESCRIPTOR TTY_READ_MODE_HID_DESCRIPTOR47,1473
#define TTY_READ_MODE_USB_DATA_SEQ TTY_READ_MODE_USB_DATA_SEQ48,1514
#define TTY_READ_MODE_HID_DATA TTY_READ_MODE_HID_DATA49,1555
#define TTY_ECHO_ON TTY_ECHO_ON51,1597
#define TTY_ECHO_OFF TTY_ECHO_OFF52,1638
#define TTY_EEP_CFG_USB_OFFSET TTY_EEP_CFG_USB_OFFSET55,1718
const char WELCOME_MSG[] PROGMEM = "\r\n\r\nklaute's HackStick\r\nv0.6.1 (by klaute)\r\n";PROGMEM59,1842
const char HELP_MSG[] PROGMEM = _MSG_HELP_;PROGMEM61,1934
struct tty_config_t {tty_config_t131,3885
    uint8_t read_mode:2;read_mode135,4091
    uint8_t echo:1; // Eingaben werden nicht zurück gesendetecho138,4205
    uint8_t bin:1; // TODO Diesen Modus implementierenbin139,4267
    uint8_t empty:4; // Frei für weiter Konfigurationszwecke.empty140,4322
} tty_config;tty_config141,4385
unsigned char tty_cb_pos; // Position im Kommando Buffertty_cb_pos143,4400
unsigned char tty_ud_pos; // Position in den zu verändernden Datentty_ud_pos144,4457
char tty_buff[TTY_MAX_CMD_LINE_LEN];tty_buff147,4582
   void (*func)(int); // Zeiger auf die auszuführende Funktionfunc153,4737
   int type;         // Das Argument, dass mit übergeben wird TTY_CMD_* oder EEP_CFG_USB_* + TTY_EEP_CFG_USB_OFFSETtype154,4801
   char *command;    // Fn-Zeiger auf das Kommando im FLASHcommand155,4918
} tty_command_t;tty_command_t156,4978
static FILE _stdout = FDEV_SETUP_STREAM(_uart_putc, NULL, _FDEV_SETUP_WRITE);_stdout230,6901
const prog_char _str_gt[]          = ">";_str_gt235,7092
const prog_char _str_minus[]       = " -";_str_minus236,7134
const prog_char _str_plus[]        = " +";_str_plus237,7177
const prog_char _str_char[]        = "%c";_str_char238,7220
const prog_char _str_decimal[]     = "%d";_str_decimal239,7263
const prog_char _str_end[]         = "E";_str_end240,7306
const prog_char _str_error[]       = "ERR";_str_error241,7348
const prog_char _str_on[]          = "on";_str_on242,7392
const prog_char _str_off[]         = "off";_str_off243,7435
const prog_char _str_bb[]          = "\b \b";_str_bb244,7479
const prog_char _str_ret[]         = "\r\n";_str_ret245,7525
const prog_char _str_ret_gt[]      = "\r\n>";_str_ret_gt246,7570
const prog_char _str_2hex[]        = "0x%02X ";_str_2hex247,7616
const prog_char _str_4hex[]        = "0x%04x";_str_4hex248,7664
const prog_char _str_3_2hex[]      = "0x%02x 0x%02x 0x%02x";_str_3_2hex249,7711
const prog_char _str_header[]      = "H=0x%02x\r\n";_str_header250,7772
const prog_char _str_vid[]         = "VID=0x%04x";_str_vid251,7825
const prog_char _str_did[]         = "DID=0x%04x";_str_did252,7876
const prog_char _str_rcv_dta[]     = "data[%d] = 0x%02x\r\n";_str_rcv_dta253,7927
const prog_char _str_rcv_dta_msg[] = "\r\nReceiving data:\r\n";_str_rcv_dta_msg254,7989
const prog_char _str_bl[]          = "Starting bootloader...\r\n\r\n";_str_bl255,8053
const prog_char _str_udr[]         = "len=0x%02x; idx=0x%02x; data=0x%02x\r\n";_str_udr256,8124
const prog_char _rledon[]  = "rledon";_rledon261,8330
const prog_char _rledoff[] = "rledoff";_rledoff262,8369
const prog_char _yledon[]  = "yledon";_yledon263,8409
const prog_char _yledoff[] = "yledoff";_yledoff264,8448
const prog_char _gledon[]  = "gledon";_gledon265,8488
const prog_char _gledoff[] = "gledoff";_gledoff266,8527
const prog_char _ua[]   = "ua";_ua268,8568
const prog_char _urst[] = "urst";_urst269,8600
const prog_char _sint[]  = "sint";_sint271,8635
const prog_char _sint3[] = "sint3";_sint3273,8711
const prog_char _isd[] = "isd";_isd277,8779
const prog_char _gdsc[] = "gdsc";_gdsc280,8819
const prog_char _gsd[]  = "gsd";_gsd282,8877
const prog_char _grd[]  = "grd";_grd283,8910
const prog_char _gdta[] = "gdta";_gdta285,8950
const prog_char _sdsc[] = "sdsc";_sdsc287,8985
const prog_char _ssd[]  = "ssd";_ssd289,9043
const prog_char _srd[]  = "srd";_srd290,9076
const prog_char _prd[]  = "prd";_prd291,9109
const prog_char _sdta[] = "sdta";_sdta293,9149
const prog_char _ersd[]  = "ersd";_ersd296,9208
const prog_char _essd[]  = "essd";_essd297,9243
const prog_char _errd[]  = "errd";_errd298,9278
const prog_char _esrd[]  = "esrd";_esrd299,9313
const prog_char _erdsc[] = "erdsc";_erdsc302,9356
const prog_char _esdsc[] = "esdsc";_esdsc303,9392
const prog_char _ervn[]  = "ervn";_ervn305,9429
const prog_char _esvn[]  = "esvn";_esvn306,9464
const prog_char _ern[]   = "ern";_ern307,9499
const prog_char _esn[]   = "esn";_esn308,9533
const prog_char _ersn[]  = "ersn";_ersn309,9567
const prog_char _essn[]  = "essn";_essn310,9602
const prog_char _ervid[] = "ervid";_ervid312,9638
const prog_char _esvid[] = "esvid";_esvid313,9674
const prog_char _erdid[] = "erdid";_erdid314,9710
const prog_char _esdid[] = "esdid";_esdid315,9746
const prog_char _tlsdsc[] = "tlsdsc";_tlsdsc317,9783
const prog_char _tlssd[]  = "tlssd";_tlssd319,9845
const prog_char _tlsrd[]  = "tlsrd";_tlsrd320,9882
const prog_char _tlsvn[]  = "tlsvn";_tlsvn322,9926
const prog_char _tlsn[]   = "tlsn";_tlsn323,9963
const prog_char _tlssn[]  = "tlssn";_tlssn324,9999
const prog_char _tlsvid[] = "tlsvid";_tlsvid325,10036
const prog_char _tlsdid[] = "tlsdid";_tlsdid326,10074
const prog_char _tissd[]  = "tissd";_tissd328,10136
const prog_char _tprd[]   = "tprd";_tprd329,10173
const prog_char _edcfg[] = "edcfg";_edcfg332,10217
const prog_char _gvn[]  = "gvn";_gvn334,10254
const prog_char _gn[]   = "gn";_gn335,10287
const prog_char _gsn[]  = "gsn";_gsn336,10319
const prog_char _gvid[] = "gvid";_gvid337,10352
const prog_char _gdid[] = "gdid";_gdid338,10386
const prog_char _svn[]  = "svn";_svn339,10420
const prog_char _sn[]   = "sn";_sn340,10453
const prog_char _ssn[]  = "ssn";_ssn341,10485
const prog_char _svnh[] = "svnh";_svnh343,10519
const prog_char _snh[]  = "snh";_snh344,10553
const prog_char _ssnh[] = "ssnh";_ssnh345,10586
const prog_char _svid[] = "svid";_svid347,10621
const prog_char _sdid[] = "sdid";_sdid348,10655
const prog_char _help[] = "help";_help350,10690
const prog_char _ttye[] = "ttye";_ttye352,10725
const prog_char _btldr[] = "btldr";_btldr354,10760
const prog_char _egcfg[] = "egcfg";_egcfg356,10797
const tty_command_t tty_commands[] PROGMEM = {PROGMEM360,10922

uart.h,563
#define UART_HUART_H2,16
#define UART_BAUD_SELECT(UART_BAUD_SELECT66,2486
#define UART_BAUD_SELECT_DOUBLE_SPEED(UART_BAUD_SELECT_DOUBLE_SPEED72,2778
#define UART_RX_BUFFER_SIZE UART_RX_BUFFER_SIZE77,2971
#define UART_TX_BUFFER_SIZE UART_TX_BUFFER_SIZE81,3105
#define UART_FRAME_ERROR UART_FRAME_ERROR92,3430
#define UART_OVERRUN_ERROR UART_OVERRUN_ERROR93,3515
#define UART_BUFFER_OVERFLOW UART_BUFFER_OVERFLOW94,3600
#define UART_NO_DATA UART_NO_DATA95,3685
#define uart_puts_P(uart_puts_P175,6318
#define uart1_puts_P(uart1_puts_P190,7254

usbconfig.h,3032
#define __usbconfig_h_included____usbconfig_h_included__12,391
#define USB_CFG_IOPORTNAME USB_CFG_IOPORTNAME29,1115
#define USB_CFG_DMINUS_BIT USB_CFG_DMINUS_BIT33,1287
#define USB_CFG_DPLUS_BIT USB_CFG_DPLUS_BIT37,1441
#define USB_CFG_CLOCK_KHZ USB_CFG_CLOCK_KHZ46,1974
#define USB_CFG_CHECK_CRC USB_CFG_CHECK_CRC55,2445
#define USB_CFG_HAVE_INTRIN_ENDPOINT USB_CFG_HAVE_INTRIN_ENDPOINT77,3493
#define USB_CFG_HAVE_INTRIN_ENDPOINT3 USB_CFG_HAVE_INTRIN_ENDPOINT382,3707
#define USB_CFG_EP3_NUMBER USB_CFG_EP3_NUMBER88,4058
#define USB_CFG_IMPLEMENT_HALT USB_CFG_IMPLEMENT_HALT98,4585
#define USB_CFG_SUPPRESS_INTR_CODE USB_CFG_SUPPRESS_INTR_CODE104,4898
#define USB_CFG_INTR_POLL_INTERVAL USB_CFG_INTR_POLL_INTERVAL112,5383
#define USB_CFG_IS_SELF_POWERED USB_CFG_IS_SELF_POWERED117,5607
#define USB_CFG_MAX_BUS_POWER USB_CFG_MAX_BUS_POWER121,5771
#define USB_CFG_IMPLEMENT_FN_WRITE USB_CFG_IMPLEMENT_FN_WRITE126,6021
#define USB_CFG_IMPLEMENT_FN_READ USB_CFG_IMPLEMENT_FN_READ131,6230
#define USB_CFG_IMPLEMENT_FN_WRITEOUT USB_CFG_IMPLEMENT_FN_WRITEOUT137,6544
#define USB_CFG_HAVE_FLOWCONTROL USB_CFG_HAVE_FLOWCONTROL143,6855
#define USB_CFG_DRIVER_FLASH_PAGE USB_CFG_DRIVER_FLASH_PAGE148,7063
#define USB_CFG_LONG_TRANSFERS USB_CFG_LONG_TRANSFERS153,7322
#define USB_COUNT_SOF USB_COUNT_SOF174,8439
#define USB_CFG_CHECK_DATA_TOGGLING USB_CFG_CHECK_DATA_TOGGLING198,9669
#define USB_CFG_HAVE_MEASURE_FRAME_LENGTH USB_CFG_HAVE_MEASURE_FRAME_LENGTH206,10161
#define USB_USE_FAST_CRC USB_USE_FAST_CRC210,10366
#define  USB_CFG_VENDOR_ID USB_CFG_VENDOR_ID221,10918
#define  USB_CFG_DEVICE_ID USB_CFG_DEVICE_ID227,11283
#define USB_CFG_DEVICE_VERSION USB_CFG_DEVICE_VERSION239,11967
#define USB_CFG_DEVICE_CLASS USB_CFG_DEVICE_CLASS267,13385
#define USB_CFG_DEVICE_SUBCLASS USB_CFG_DEVICE_SUBCLASS268,13423
#define USB_CFG_INTERFACE_CLASS USB_CFG_INTERFACE_CLASS272,13578
#define USB_CFG_INTERFACE_SUBCLASS USB_CFG_INTERFACE_SUBCLASS273,13616
#define USB_CFG_INTERFACE_PROTOCOL USB_CFG_INTERFACE_PROTOCOL274,13654
#define USB_CFG_HID_REPORT_DESCRIPTOR_LENGTH	USB_CFG_HID_REPORT_DESCRIPTOR_LENGTH280,13973
#define USB_CFG_DESCR_PROPS_DEVICE USB_CFG_DESCR_PROPS_DEVICE345,17072
#define USB_CFG_DESCR_PROPS_CONFIGURATION USB_CFG_DESCR_PROPS_CONFIGURATION346,17166
#define USB_CFG_DESCR_PROPS_STRINGS USB_CFG_DESCR_PROPS_STRINGS347,17260
#define USB_CFG_DESCR_PROPS_STRING_0 USB_CFG_DESCR_PROPS_STRING_0348,17314
#define USB_CFG_DESCR_PROPS_STRING_VENDOR USB_CFG_DESCR_PROPS_STRING_VENDOR349,17368
#define USB_CFG_DESCR_PROPS_STRING_PRODUCT USB_CFG_DESCR_PROPS_STRING_PRODUCT350,17462
#define USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER351,17556
#define USB_CFG_DESCR_PROPS_HID USB_CFG_DESCR_PROPS_HID352,17650
#define USB_CFG_DESCR_PROPS_HID_REPORT USB_CFG_DESCR_PROPS_HID_REPORT353,17704
#define USB_CFG_DESCR_PROPS_UNKNOWN USB_CFG_DESCR_PROPS_UNKNOWN354,17798
#define USB_INTR_VECTOR USB_INTR_VECTOR372,18665

usbdrv/oddebug.c,210
static void uartPutc(char c)uartPutc17,452
static uchar    hexAscii(uchar h)hexAscii23,588
static void printHex(uchar c)printHex32,721
void    odDebug(uchar prefix, uchar *data, uchar len)odDebug38,815

usbdrv/usbdrv.c,5332
uchar usbRxBuf[2*USB_BUFSIZE];  /* raw RX buffer: PID, 8 bytes data, 2 bytes CRC */usbRxBuf24,732
uchar       usbInputBufOffset;  /* offset in usbRxBuf used for low level receiving */usbInputBufOffset25,816
uchar       usbDeviceAddr;      /* assigned during enumeration, defaults to 0 */usbDeviceAddr26,902
uchar       usbNewDeviceAddr;   /* device ID which should be set after status phase */usbNewDeviceAddr27,983
uchar       usbConfiguration;   /* currently selected configuration. Administered by driver, but not used */usbConfiguration28,1070
volatile schar usbRxLen;        /* = 0; number of bytes in usbRxBuf; 0 means free, -1 for flow control */usbRxLen29,1179
uchar       usbCurrentTok;      /* last token received or endpoint number for last OUT token if != 0 */usbCurrentTok30,1285
uchar       usbRxToken;         /* token for data we received; or endpont number for last OUT */usbRxToken31,1389
volatile uchar usbTxLen = USBPID_NAK;   /* number of bytes to transmit with next IN token or handshake token */usbTxLen32,1486
uchar       usbTxBuf[USB_BUFSIZE];/* data to transmit with next IN, free if usbTxLen contains handshake token */usbTxBuf33,1598
volatile uchar  usbSofCount;    /* incremented by assembler module every SOF */usbSofCount35,1729
usbTxStatus_t  usbTxStatus1;usbTxStatus138,1880
usbTxStatus_t  usbTxStatus3;usbTxStatus340,1946
uchar       usbCurrentDataToken;/* when we check data toggling to ignore duplicate packets */usbCurrentDataToken44,2024
uchar               *usbMsgPtr;     /* data to transmit next -- ROM or RAM address */usbMsgPtr48,2180
static usbMsgLen_t  usbMsgLen = USB_NO_MSG; /* remaining number of bytes */usbMsgLen49,2266
static uchar        usbMsgFlags;    /* flag values see below */usbMsgFlags50,2342
#define USB_FLG_MSGPTR_IS_ROM USB_FLG_MSGPTR_IS_ROM52,2407
#define USB_FLG_USE_USER_RW USB_FLG_USE_USER_RW53,2446
#undef USB_CFG_DESCR_PROPS_STRING_0USB_CFG_DESCR_PROPS_STRING_068,2953
#define USB_CFG_DESCR_PROPS_STRING_0 USB_CFG_DESCR_PROPS_STRING_069,2989
PROGMEM char usbDescriptorString0[] = { /* language descriptor */usbDescriptorString070,3058
#undef USB_CFG_DESCR_PROPS_STRING_VENDORUSB_CFG_DESCR_PROPS_STRING_VENDOR78,3384
#define USB_CFG_DESCR_PROPS_STRING_VENDOR USB_CFG_DESCR_PROPS_STRING_VENDOR79,3425
PROGMEM int  usbDescriptorStringVendor[] = {usbDescriptorStringVendor80,3503
#undef USB_CFG_DESCR_PROPS_STRING_PRODUCTUSB_CFG_DESCR_PROPS_STRING_PRODUCT87,3713
#define USB_CFG_DESCR_PROPS_STRING_PRODUCT USB_CFG_DESCR_PROPS_STRING_PRODUCT88,3755
PROGMEM int  usbDescriptorStringDevice[] = {usbDescriptorStringDevice89,3834
#undef USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBERUSB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER96,4052
#define USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER97,4100
PROGMEM int usbDescriptorStringSerialNumber[] = {usbDescriptorStringSerialNumber98,4192
#undef USB_CFG_DESCR_PROPS_DEVICEUSB_CFG_DESCR_PROPS_DEVICE109,4505
#define USB_CFG_DESCR_PROPS_DEVICE USB_CFG_DESCR_PROPS_DEVICE110,4539
PROGMEM char usbDescriptorDevice[] = {    /* USB device descriptor */usbDescriptorDevice111,4603
#undef USB_CFG_DESCR_PROPS_HIDUSB_CFG_DESCR_PROPS_HID135,5773
#define USB_CFG_DESCR_PROPS_HID USB_CFG_DESCR_PROPS_HID136,5804
#undef USB_CFG_DESCR_PROPS_CONFIGURATIONUSB_CFG_DESCR_PROPS_CONFIGURATION140,5953
#define USB_CFG_DESCR_PROPS_CONFIGURATION USB_CFG_DESCR_PROPS_CONFIGURATION141,5994
PROGMEM char usbDescriptorConfiguration[] = {    /* USB configuration descriptor */usbDescriptorConfiguration142,6073
static inline void  usbResetDataToggling(void)usbResetDataToggling197,8809
static inline void  usbResetStall(void)usbResetStall207,9173
static void usbGenericSetInterrupt(uchar *data, uchar len, usbTxStatus_t *txStatus)usbGenericSetInterrupt221,9535
USB_PUBLIC void usbSetInterrupt(uchar *data, uchar len)usbSetInterrupt245,10440
USB_PUBLIC void usbSetInterrupt3(uchar *data, uchar len)usbSetInterrupt3252,10596
#   define SWITCH_START(SWITCH_START267,11114
#   define SWITCH_CASE(SWITCH_CASE268,11163
#   define SWITCH_CASE2(SWITCH_CASE2269,11221
#   define SWITCH_CASE3(SWITCH_CASE3270,11286
#   define SWITCH_DEFAULT SWITCH_DEFAULT271,11361
#   define SWITCH_END SWITCH_END272,11414
#   define SWITCH_START(SWITCH_START274,11458
#   define SWITCH_CASE(SWITCH_CASE275,11519
#   define SWITCH_CASE2(SWITCH_CASE2276,11581
#   define SWITCH_CASE3(SWITCH_CASE3277,11656
#   define SWITCH_DEFAULT SWITCH_DEFAULT278,11747
#   define SWITCH_END SWITCH_END279,11789
#define USB_RX_USER_HOOK(USB_RX_USER_HOOK283,11860
#define USB_SET_ADDRESS_HOOK(USB_SET_ADDRESS_HOOK286,11932
#define GET_DESCRIPTOR(GET_DESCRIPTOR296,12284
static inline usbMsgLen_t usbDriverDescriptor(usbRequest_t *rq)usbDriverDescriptor311,12952
static inline usbMsgLen_t usbDriverSetup(usbRequest_t *rq)usbDriverSetup362,15136
static inline void usbProcessRx(uchar *data, uchar len)usbProcessRx422,17597
static uchar usbDeviceRead(uchar *data, uchar len)usbDeviceRead492,20667
static inline void usbBuildTxBlock(void)usbBuildTxBlock524,21663
static inline void usbHandleResetHook(uchar notResetState)usbHandleResetHook550,22464
USB_PUBLIC void usbPoll(void)usbPoll565,22803
USB_PUBLIC void usbInit(void)usbInit607,24134

usbdrv/oddebug.h,1119
#define __oddebug_h_included____oddebug_h_included__12,372
#   define  F_CPU F_CPU28,922
#   define  uchar uchar35,1060
#   undef   DEBUG_LEVELDEBUG_LEVEL40,1242
#   define  DEBUG_LEVEL DEBUG_LEVEL44,1294
#   define  DBG1(DBG150,1429
#   define  DBG1(DBG152,1498
#   define  DBG2(DBG256,1562
#   define  DBG2(DBG258,1631
#   define  ODDBG_UBRR ODDBG_UBRR69,1923
#   define  ODDBG_UBRR ODDBG_UBRR71,1972
#   define  ODDBG_UBRR ODDBG_UBRR73,2022
#   define  ODDBG_UBRR ODDBG_UBRR75,2073
#   define  ODDBG_UCR ODDBG_UCR79,2128
#   define  ODDBG_UCR ODDBG_UCR81,2176
#   define  ODDBG_UCR ODDBG_UCR83,2227
#   define  ODDBG_TXEN ODDBG_TXEN87,2283
#   define  ODDBG_TXEN ODDBG_TXEN89,2318
#   define  ODDBG_USR ODDBG_USR93,2372
#   define  ODDBG_USR ODDBG_USR95,2420
#   define  ODDBG_USR ODDBG_USR97,2471
#   define  ODDBG_UDRE ODDBG_UDRE101,2527
#   define  ODDBG_UDRE ODDBG_UDRE103,2562
#   define  ODDBG_UDR ODDBG_UDR107,2616
#   define  ODDBG_UDR ODDBG_UDR109,2663
static inline void  odDebugInit(void)odDebugInit112,2700
#   define odDebugInit(odDebugInit118,2826

usbdrv/usbconfig-prototype.h,3140
#define __usbconfig_h_included____usbconfig_h_included__12,439
#define USB_CFG_IOPORTNAME USB_CFG_IOPORTNAME29,1163
#define USB_CFG_DMINUS_BIT USB_CFG_DMINUS_BIT33,1335
#define USB_CFG_DPLUS_BIT USB_CFG_DPLUS_BIT37,1489
#define USB_CFG_CLOCK_KHZ USB_CFG_CLOCK_KHZ46,2022
#define USB_CFG_CHECK_CRC USB_CFG_CHECK_CRC55,2493
#define USB_CFG_HAVE_INTRIN_ENDPOINT USB_CFG_HAVE_INTRIN_ENDPOINT78,3542
#define USB_CFG_HAVE_INTRIN_ENDPOINT3 USB_CFG_HAVE_INTRIN_ENDPOINT383,3756
#define USB_CFG_EP3_NUMBER USB_CFG_EP3_NUMBER89,4107
#define USB_CFG_IMPLEMENT_HALT USB_CFG_IMPLEMENT_HALT99,4634
#define USB_CFG_SUPPRESS_INTR_CODE USB_CFG_SUPPRESS_INTR_CODE105,4947
#define USB_CFG_INTR_POLL_INTERVAL USB_CFG_INTR_POLL_INTERVAL113,5432
#define USB_CFG_IS_SELF_POWERED USB_CFG_IS_SELF_POWERED118,5656
#define USB_CFG_MAX_BUS_POWER USB_CFG_MAX_BUS_POWER122,5820
#define USB_CFG_IMPLEMENT_FN_WRITE USB_CFG_IMPLEMENT_FN_WRITE127,6070
#define USB_CFG_IMPLEMENT_FN_READ USB_CFG_IMPLEMENT_FN_READ132,6279
#define USB_CFG_IMPLEMENT_FN_WRITEOUT USB_CFG_IMPLEMENT_FN_WRITEOUT138,6593
#define USB_CFG_HAVE_FLOWCONTROL USB_CFG_HAVE_FLOWCONTROL144,6904
#define USB_CFG_DRIVER_FLASH_PAGE USB_CFG_DRIVER_FLASH_PAGE149,7112
#define USB_CFG_LONG_TRANSFERS USB_CFG_LONG_TRANSFERS154,7371
#define USB_COUNT_SOF USB_COUNT_SOF175,8488
#define USB_CFG_CHECK_DATA_TOGGLING USB_CFG_CHECK_DATA_TOGGLING199,9718
#define USB_CFG_HAVE_MEASURE_FRAME_LENGTH USB_CFG_HAVE_MEASURE_FRAME_LENGTH207,10210
#define USB_USE_FAST_CRC USB_USE_FAST_CRC211,10415
#define  USB_CFG_VENDOR_ID USB_CFG_VENDOR_ID222,10967
#define  USB_CFG_DEVICE_ID USB_CFG_DEVICE_ID231,11471
#define USB_CFG_DEVICE_VERSION USB_CFG_DEVICE_VERSION242,12076
#define USB_CFG_VENDOR_NAME USB_CFG_VENDOR_NAME245,12195
#define USB_CFG_VENDOR_NAME_LEN USB_CFG_VENDOR_NAME_LEN246,12266
#define USB_CFG_DEVICE_NAME USB_CFG_DEVICE_NAME255,12742
#define USB_CFG_DEVICE_NAME_LEN USB_CFG_DEVICE_NAME_LEN256,12813
#define USB_CFG_DEVICE_CLASS USB_CFG_DEVICE_CLASS270,13492
#define USB_CFG_DEVICE_SUBCLASS USB_CFG_DEVICE_SUBCLASS271,13576
#define USB_CFG_INTERFACE_CLASS USB_CFG_INTERFACE_CLASS275,13731
#define USB_CFG_INTERFACE_SUBCLASS USB_CFG_INTERFACE_SUBCLASS276,13818
#define USB_CFG_INTERFACE_PROTOCOL USB_CFG_INTERFACE_PROTOCOL277,13856
#define USB_CFG_DESCR_PROPS_DEVICE USB_CFG_DESCR_PROPS_DEVICE348,17283
#define USB_CFG_DESCR_PROPS_CONFIGURATION USB_CFG_DESCR_PROPS_CONFIGURATION349,17337
#define USB_CFG_DESCR_PROPS_STRINGS USB_CFG_DESCR_PROPS_STRINGS350,17391
#define USB_CFG_DESCR_PROPS_STRING_0 USB_CFG_DESCR_PROPS_STRING_0351,17445
#define USB_CFG_DESCR_PROPS_STRING_VENDOR USB_CFG_DESCR_PROPS_STRING_VENDOR352,17499
#define USB_CFG_DESCR_PROPS_STRING_PRODUCT USB_CFG_DESCR_PROPS_STRING_PRODUCT353,17553
#define USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER354,17607
#define USB_CFG_DESCR_PROPS_HID USB_CFG_DESCR_PROPS_HID355,17661
#define USB_CFG_DESCR_PROPS_HID_REPORT USB_CFG_DESCR_PROPS_HID_REPORT356,17715
#define USB_CFG_DESCR_PROPS_UNKNOWN USB_CFG_DESCR_PROPS_UNKNOWN357,17769

usbdrv/usbdrv.h,7555
#define __usbdrv_h_included____usbdrv_h_included__12,420
#define USBDRV_VERSION USBDRV_VERSION125,6285
#define USB_PUBLICUSB_PUBLIC135,6668
#define uchar uchar146,7111
#define schar schar149,7162
#   define usbMsgLen_t usbMsgLen_t154,7331
#   define usbMsgLen_t usbMsgLen_t156,7369
#define USB_NO_MSG USB_NO_MSG164,7761
#define usbInterruptIsReady(usbInterruptIsReady227,11245
#define usbInterruptIsReady3(usbInterruptIsReady3234,11583
#define usbHidReportDescriptor usbHidReportDescriptor239,11817
#define usbDeviceConnect(usbDeviceConnect289,14690
#define usbDeviceDisconnect(usbDeviceDisconnect291,14849
#define usbDeviceConnect(usbDeviceConnect294,15048
#define usbDeviceDisconnect(usbDeviceDisconnect295,15107
#define usbCrc16(usbCrc16310,15998
#define usbCrc16Append(usbCrc16Append318,16440
#define USB_STRING_DESCRIPTOR_HEADER(USB_STRING_DESCRIPTOR_HEADER353,17968
#define usbDisableAllRequests(usbDisableAllRequests359,18256
#define usbEnableAllRequests(usbEnableAllRequests364,18490
#define usbAllRequestsAreDisabled(usbAllRequestsAreDisabled368,18699
#define USB_SET_DATATOKEN1(USB_SET_DATATOKEN1375,18927
#define USB_SET_DATATOKEN3(USB_SET_DATATOKEN3376,18984
#define USB_PROP_IS_DYNAMIC USB_PROP_IS_DYNAMIC393,19752
#define USB_PROP_IS_RAM USB_PROP_IS_RAM399,20044
#define USB_PROP_LENGTH(USB_PROP_LENGTH404,20262
#define USB_CFG_DESCR_PROPS_DEVICE USB_CFG_DESCR_PROPS_DEVICE411,20500
#define USB_CFG_DESCR_PROPS_CONFIGURATION USB_CFG_DESCR_PROPS_CONFIGURATION414,20603
#define USB_CFG_DESCR_PROPS_STRINGS USB_CFG_DESCR_PROPS_STRINGS417,20700
#define USB_CFG_DESCR_PROPS_STRING_0 USB_CFG_DESCR_PROPS_STRING_0420,20798
#define USB_CFG_DESCR_PROPS_STRING_VENDOR USB_CFG_DESCR_PROPS_STRING_VENDOR423,20901
#define USB_CFG_DESCR_PROPS_STRING_PRODUCT USB_CFG_DESCR_PROPS_STRING_PRODUCT426,21005
#define USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER429,21115
#define USB_CFG_DESCR_PROPS_HID USB_CFG_DESCR_PROPS_HID432,21208
#   undef USB_CFG_DESCR_PROPS_HID_REPORTUSB_CFG_DESCR_PROPS_HID_REPORT435,21307
#       define USB_CFG_DESCR_PROPS_HID_REPORT USB_CFG_DESCR_PROPS_HID_REPORT437,21436
#       define USB_CFG_DESCR_PROPS_HID_REPORT USB_CFG_DESCR_PROPS_HID_REPORT439,21534
#define USB_CFG_DESCR_PROPS_UNKNOWN USB_CFG_DESCR_PROPS_UNKNOWN443,21641
#define USB_CONCAT(USB_CONCAT499,22975
#define USB_CONCAT_EXPANDED(USB_CONCAT_EXPANDED500,23018
#define USB_OUTPORT(USB_OUTPORT502,23072
#define USB_INPORT(USB_INPORT503,23131
#define USB_DDRPORT(USB_DDRPORT504,23189
#   define  USB_CFG_VENDOR_ID USB_CFG_VENDOR_ID522,23985
#       define USB_CFG_DEVICE_ID USB_CFG_DEVICE_ID527,24139
#       define USB_CFG_DEVICE_ID USB_CFG_DEVICE_ID529,24267
#       define USB_CFG_DEVICE_ID USB_CFG_DEVICE_ID531,24372
#define USBOUT USBOUT540,24665
#define USB_PULLUP_OUT USB_PULLUP_OUT541,24721
#define USBIN USBIN542,24784
#define USBDDR USBDDR543,24839
#define USB_PULLUP_DDR USB_PULLUP_DDR544,24895
#define USBMINUS USBMINUS546,24959
#define USBPLUS USBPLUS547,24998
#define USBIDLE USBIDLE548,25036
#define USBMASK USBMASK549,25113
#define USB_CFG_IOPORT USB_CFG_IOPORT552,25283
#define USB_CFG_PULLUP_IOPORT USB_CFG_PULLUP_IOPORT554,25380
#define USB_CFG_EP3_NUMBER USB_CFG_EP3_NUMBER558,25523
#define USB_CFG_HAVE_INTRIN_ENDPOINT3 USB_CFG_HAVE_INTRIN_ENDPOINT3562,25599
#define USB_BUFSIZE USB_BUFSIZE565,25649
#       define USB_INTR_CFG USB_INTR_CFG571,25884
#       define USB_INTR_CFG USB_INTR_CFG573,25927
#       define USB_INTR_CFG_SET USB_INTR_CFG_SET578,26102
#       define USB_INTR_CFG_SET USB_INTR_CFG_SET583,26336
#   define USB_INTR_CFG_CLR USB_INTR_CFG_CLR587,26512
#       define USB_INTR_ENABLE USB_INTR_ENABLE592,26666
#       define USB_INTR_ENABLE USB_INTR_ENABLE594,26727
#       define USB_INTR_ENABLE USB_INTR_ENABLE596,26774
#   define USB_INTR_ENABLE_BIT USB_INTR_ENABLE_BIT600,26897
#       define USB_INTR_PENDING USB_INTR_PENDING605,27032
#       define USB_INTR_PENDING USB_INTR_PENDING607,27078
#   define USB_INTR_PENDING_BIT USB_INTR_PENDING_BIT611,27205
#define USBPID_SETUP USBPID_SETUP631,27928
#define USBPID_OUT USBPID_OUT632,27957
#define USBPID_IN USBPID_IN633,27986
#define USBPID_DATA0 USBPID_DATA0634,28015
#define USBPID_DATA1 USBPID_DATA1635,28044
#define USBPID_ACK USBPID_ACK637,28074
#define USBPID_NAK USBPID_NAK638,28103
#define USBPID_STALL USBPID_STALL639,28132
#define USB_INITIAL_DATATOKEN USB_INITIAL_DATATOKEN642,28192
typedef struct usbTxStatus{usbTxStatus647,28268
    volatile uchar   len;len648,28296
    uchar   buffer[USB_BUFSIZE];buffer649,28322
}usbTxStatus_t;usbTxStatus_t650,28355
#define usbTxLen1 usbTxLen1653,28423
#define usbTxBuf1 usbTxBuf1654,28460
#define usbTxLen3 usbTxLen3655,28500
#define usbTxBuf3 usbTxBuf3656,28537
typedef union usbWord{usbWord659,28579
    unsigned    word;word660,28602
    uchar       bytes[2];bytes661,28624
}usbWord_t;usbWord_t662,28650
typedef struct usbRequest{usbRequest664,28663
    uchar       bmRequestType;bmRequestType665,28690
    uchar       bRequest;bRequest666,28721
    usbWord_t   wValue;wValue667,28747
    usbWord_t   wIndex;wIndex668,28771
    usbWord_t   wLength;wLength669,28795
}usbRequest_t;usbRequest_t670,28820
#define USBRQ_RCPT_MASK USBRQ_RCPT_MASK682,29175
#define USBRQ_RCPT_DEVICE USBRQ_RCPT_DEVICE683,29212
#define USBRQ_RCPT_INTERFACE USBRQ_RCPT_INTERFACE684,29246
#define USBRQ_RCPT_ENDPOINT USBRQ_RCPT_ENDPOINT685,29280
#define USBRQ_TYPE_MASK USBRQ_TYPE_MASK688,29345
#define USBRQ_TYPE_STANDARD USBRQ_TYPE_STANDARD689,29382
#define USBRQ_TYPE_CLASS USBRQ_TYPE_CLASS690,29421
#define USBRQ_TYPE_VENDOR USBRQ_TYPE_VENDOR691,29460
#define USBRQ_DIR_MASK USBRQ_DIR_MASK694,29528
#define USBRQ_DIR_HOST_TO_DEVICE USBRQ_DIR_HOST_TO_DEVICE695,29569
#define USBRQ_DIR_DEVICE_TO_HOST USBRQ_DIR_DEVICE_TO_HOST696,29612
#define USBRQ_GET_STATUS USBRQ_GET_STATUS699,29684
#define USBRQ_CLEAR_FEATURE USBRQ_CLEAR_FEATURE700,29718
#define USBRQ_SET_FEATURE USBRQ_SET_FEATURE701,29752
#define USBRQ_SET_ADDRESS USBRQ_SET_ADDRESS702,29786
#define USBRQ_GET_DESCRIPTOR USBRQ_GET_DESCRIPTOR703,29820
#define USBRQ_SET_DESCRIPTOR USBRQ_SET_DESCRIPTOR704,29854
#define USBRQ_GET_CONFIGURATION USBRQ_GET_CONFIGURATION705,29888
#define USBRQ_SET_CONFIGURATION USBRQ_SET_CONFIGURATION706,29922
#define USBRQ_GET_INTERFACE USBRQ_GET_INTERFACE707,29956
#define USBRQ_SET_INTERFACE USBRQ_SET_INTERFACE708,29991
#define USBRQ_SYNCH_FRAME USBRQ_SYNCH_FRAME709,30026
#define USBDESCR_DEVICE USBDESCR_DEVICE712,30093
#define USBDESCR_CONFIG USBDESCR_CONFIG713,30127
#define USBDESCR_STRING USBDESCR_STRING714,30161
#define USBDESCR_INTERFACE USBDESCR_INTERFACE715,30195
#define USBDESCR_ENDPOINT USBDESCR_ENDPOINT716,30229
#define USBDESCR_HID USBDESCR_HID717,30263
#define USBDESCR_HID_REPORT USBDESCR_HID_REPORT718,30300
#define USBDESCR_HID_PHYS USBDESCR_HID_PHYS719,30337
#define USBATTR_SELFPOWER USBATTR_SELFPOWER722,30462
#define USBATTR_REMOTEWAKE USBATTR_REMOTEWAKE723,30499
#define USBRQ_HID_GET_REPORT USBRQ_HID_GET_REPORT726,30560
#define USBRQ_HID_GET_IDLE USBRQ_HID_GET_IDLE727,30597
#define USBRQ_HID_GET_PROTOCOL USBRQ_HID_GET_PROTOCOL728,30634
#define USBRQ_HID_SET_REPORT USBRQ_HID_SET_REPORT729,30671
#define USBRQ_HID_SET_IDLE USBRQ_HID_SET_IDLE730,30708
#define USBRQ_HID_SET_PROTOCOL USBRQ_HID_SET_PROTOCOL731,30745

usbdrv/usbportability.h,1379
#define __usbportability_h_INCLUDED____usbportability_h_INCLUDED__25,887
#   define ENABLE_BIT_DEFINITIONS	ENABLE_BIT_DEFINITIONS34,1282
#define __attribute__(__attribute__43,1460
#   define __ASSEMBLER__ __ASSEMBLER__46,1543
#   define PROGMEM PROGMEM50,1648
#   define PROGMEM PROGMEM52,1684
#define USB_READ_FLASH(USB_READ_FLASH55,1719
#define cli(cli60,1908
#define sei(sei61,1950
#define wdt_reset(wdt_reset62,1991
#define _BV(_BV63,2030
#define nop2 nop266,2099
#define XL XL67,2158
#define XH XH68,2178
#define YL YL69,2198
#define YH YH70,2218
#define ZL ZL71,2238
#define ZH ZH72,2258
#define lo8(lo873,2278
#define hi8(hi874,2301
#define __attribute__(__attribute__94,3199
#define PROGMEM PROGMEM96,3255
#define USB_READ_FLASH(USB_READ_FLASH97,3295
static inline void  cli(void)cli100,3376
static inline void  sei(void)sei104,3427
#define _delay_ms(_delay_ms109,3485
#define _BV(_BV110,3521
#define USB_CFG_USE_SWITCH_STATEMENT USB_CFG_USE_SWITCH_STATEMENT111,3556
#define macro macro113,3651
#define endm endm114,3674
#define nop2 nop2115,3700
#   define _VECTOR(_VECTOR123,4028
#   define USB_READ_FLASH(USB_READ_FLASH129,4182
#   define USB_READ_FLASH(USB_READ_FLASH131,4297
#define macro macro134,4360
#define endm endm135,4383
#define nop2 nop2136,4405
#   define PRG_RDB(PRG_RDB142,4570
