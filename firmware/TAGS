
eeprom.c,1190
void eep_readUSBHidReportDescriptor()eep_readUSBHidReportDescriptor24,970
void eep_saveUSBHidReportDescriptor()eep_saveUSBHidReportDescriptor35,1435
void eep_readUSBDataSequence()eep_readUSBDataSequence49,1938
void eep_saveUSBDataSequence()eep_saveUSBDataSequence76,2704
void eep_readUSBDescriptorStringVendor()eep_readUSBDescriptorStringVendor88,3026
void eep_saveUSBDescriptorStringVendor()eep_saveUSBDescriptorStringVendor95,3257
void eep_readUSBDescriptorStringDevice()eep_readUSBDescriptorStringDevice105,3571
void eep_saveUSBDescriptorStringDevice()eep_saveUSBDescriptorStringDevice112,3802
void eep_readUSBDescriptorStringSerialNumber()eep_readUSBDescriptorStringSerialNumber122,4116
void eep_saveUSBDescriptorStringSerialNumber()eep_saveUSBDescriptorStringSerialNumber129,4359
void eep_readUSBCfgVendorID()eep_readUSBCfgVendorID139,4685
void eep_saveUSBCfgVendorID()eep_saveUSBCfgVendorID148,4954
void eep_readUSBCfgDeviceID()eep_readUSBCfgDeviceID157,5250
void eep_saveUSBCfgDeviceID()eep_saveUSBCfgDeviceID166,5521
void eep_toggleUSBConfigBit(uint8_t bit)eep_toggleUSBConfigBit175,5819
void eep_deleteUSBConfigBits()eep_deleteUSBConfigBits187,6107

main.c,459
int __attribute__((noreturn)) main(void)main21,891
void init(void)init41,1202
void _loadEEPROMConfig()_loadEEPROMConfig93,2890
void interpretUSBDataSequence()interpretUSBDataSequence187,6647
void usbReset( void )usbReset244,8400
uchar usbFunctionRead(uchar *data, uchar len)usbFunctionRead267,9069
uchar usbFunctionDescriptor(usbRequest_t *rq)usbFunctionDescriptor341,11772
usbMsgLen_t usbFunctionSetup(uchar data[8])usbFunctionSetup386,13536

tty.c,1978
void tty_init()tty_init21,885
static int _uart_putc(char c, FILE *stream)_uart_putc46,1395
void tty_pollTerminal(void)tty_pollTerminal58,1614
int tty_executeCmd(const char *buffer)tty_executeCmd240,8378
void tty_ledRedOn()tty_ledRedOn303,10340
void tty_ledRedOff()tty_ledRedOff308,10421
void tty_ledGreenOn()tty_ledGreenOn313,10502
void tty_ledGreenOff()tty_ledGreenOff318,10591
void tty_ledYellowOn()tty_ledYellowOn323,10680
void tty_ledYellowOff()tty_ledYellowOff328,10773
void tty_setInterrupt()tty_setInterrupt334,10946
void tty_setInterrupt3()tty_setInterrupt3343,11137
void tty_getUSBReportData()tty_getUSBReportData352,11296
void tty_getUSBDataSequence()tty_getUSBDataSequence364,11613
void tty_getUSBHidDeviceDescriptor()tty_getUSBHidDeviceDescriptor378,12030
void tty_getVendorName()tty_getVendorName389,12372
void tty_getDeviceName()tty_getDeviceName403,12748
void tty_getSerialNumber()tty_getSerialNumber417,13126
void tty_getUSBConfigVendorID()tty_getUSBConfigVendorID432,13576
void tty_getUSBConfigDeviceID()tty_getUSBConfigDeviceID437,13685
void tty_setUSBReportData()tty_setUSBReportData442,13796
void tty_setUSBDataSequence()tty_setUSBDataSequence448,13904
void tty_setUSBHidDeviceDescriptor()tty_setUSBHidDeviceDescriptor454,14001
void tty_setVendorName(char* t)tty_setVendorName459,14100
void tty_setDeviceName(char* t)tty_setDeviceName477,14745
void tty_setSerialNumber(char* t)tty_setSerialNumber493,15243
void tty_setVendorHeader(char *t)tty_setVendorHeader509,15761
void tty_setSerialNumberHeader(char *t)tty_setSerialNumberHeader519,15992
void tty_setDeviceNameHeader(char *t)tty_setDeviceNameHeader529,16237
void tty_setUSBConfigVendorID(char* t)tty_setUSBConfigVendorID538,16451
void tty_setUSBConfigDeviceID(char* t)tty_setUSBConfigDeviceID548,16693
void tty_Help()tty_Help560,17018
void tty_startBootloader()tty_startBootloader565,17063
void tty_setEcho(char* t)tty_setEcho572,17154

uart.c,8057
#define UART_RX_BUFFER_MASK UART_RX_BUFFER_MASK50,1808
#define UART_TX_BUFFER_MASK UART_TX_BUFFER_MASK51,1864
 #define AT90_UARTAT90_UART65,2373
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT66,2393
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT67,2443
 #define UART0_STATUS UART0_STATUS68,2493
 #define UART0_CONTROL UART0_CONTROL69,2522
 #define UART0_DATA UART0_DATA70,2551
 #define UART0_UDRIE UART0_UDRIE71,2582
 #define AT90_UARTAT90_UART74,2715
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT75,2735
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT76,2785
 #define UART0_STATUS UART0_STATUS77,2835
 #define UART0_CONTROL UART0_CONTROL78,2866
 #define UART0_DATA UART0_DATA79,2897
 #define UART0_UDRIE UART0_UDRIE80,2927
 #define ATMEGA_USARTATMEGA_USART85,3183
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT86,3206
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT87,3256
 #define UART0_STATUS UART0_STATUS88,3306
 #define UART0_CONTROL UART0_CONTROL89,3337
 #define UART0_DATA UART0_DATA90,3368
 #define UART0_UDRIE UART0_UDRIE91,3397
 #define ATMEGA_UARTATMEGA_UART94,3496
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT95,3518
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT96,3568
 #define UART0_STATUS UART0_STATUS97,3618
 #define UART0_CONTROL UART0_CONTROL98,3649
 #define UART0_DATA UART0_DATA99,3680
 #define UART0_UDRIE UART0_UDRIE100,3709
 #define ATMEGA_USART0ATMEGA_USART0103,3805
 #define ATMEGA_USART1ATMEGA_USART1104,3829
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT105,3853
 #define UART1_RECEIVE_INTERRUPT UART1_RECEIVE_INTERRUPT106,3905
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT107,3957
 #define UART1_TRANSMIT_INTERRUPT UART1_TRANSMIT_INTERRUPT108,4009
 #define UART0_STATUS UART0_STATUS109,4061
 #define UART0_CONTROL UART0_CONTROL110,4093
 #define UART0_DATA UART0_DATA111,4125
 #define UART0_UDRIE UART0_UDRIE112,4155
 #define UART1_STATUS UART1_STATUS113,4187
 #define UART1_CONTROL UART1_CONTROL114,4219
 #define UART1_DATA UART1_DATA115,4251
 #define UART1_UDRIE UART1_UDRIE116,4281
 #define ATMEGA_USART0ATMEGA_USART0119,4407
 #define ATMEGA_USART1ATMEGA_USART1120,4431
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT121,4455
 #define UART1_RECEIVE_INTERRUPT UART1_RECEIVE_INTERRUPT122,4506
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT123,4557
 #define UART1_TRANSMIT_INTERRUPT UART1_TRANSMIT_INTERRUPT124,4608
 #define UART0_STATUS UART0_STATUS125,4659
 #define UART0_CONTROL UART0_CONTROL126,4691
 #define UART0_DATA UART0_DATA127,4723
 #define UART0_UDRIE UART0_UDRIE128,4753
 #define UART1_STATUS UART1_STATUS129,4785
 #define UART1_CONTROL UART1_CONTROL130,4817
 #define UART1_DATA UART1_DATA131,4849
 #define UART1_UDRIE UART1_UDRIE132,4879
 #define ATMEGA_USARTATMEGA_USART138,5102
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT139,5125
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT140,5176
 #define UART0_STATUS UART0_STATUS141,5227
 #define UART0_CONTROL UART0_CONTROL142,5258
 #define UART0_DATA UART0_DATA143,5289
 #define UART0_UDRIE UART0_UDRIE144,5318
 #define ATMEGA_USART0ATMEGA_USART0150,5624
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT152,5681
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT153,5731
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT155,5790
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT156,5841
 #define UART0_STATUS UART0_STATUS158,5900
 #define UART0_CONTROL UART0_CONTROL159,5932
 #define UART0_DATA UART0_DATA160,5964
 #define UART0_UDRIE UART0_UDRIE161,5994
 #define ATMEGA_USARTATMEGA_USART163,6061
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT164,6084
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT165,6135
 #define UART0_STATUS UART0_STATUS166,6187
 #define UART0_CONTROL UART0_CONTROL167,6218
 #define UART0_DATA UART0_DATA168,6249
 #define UART0_UDRIE UART0_UDRIE169,6278
  #define ATMEGA_USART0ATMEGA_USART0175,6608
  #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT176,6633
  #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT177,6684
  #define UART0_STATUS UART0_STATUS178,6735
  #define UART0_CONTROL UART0_CONTROL179,6768
  #define UART0_DATA UART0_DATA180,6801
  #define UART0_UDRIE UART0_UDRIE181,6832
  #define ATMEGA_USART0ATMEGA_USART0186,7070
  #define ATMEGA_USART1ATMEGA_USART1187,7095
  #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT188,7120
  #define UART1_RECEIVE_INTERRUPT UART1_RECEIVE_INTERRUPT189,7173
  #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT190,7226
  #define UART1_TRANSMIT_INTERRUPT UART1_TRANSMIT_INTERRUPT191,7279
  #define UART0_STATUS UART0_STATUS192,7332
  #define UART0_CONTROL UART0_CONTROL193,7365
  #define UART0_DATA UART0_DATA194,7398
  #define UART0_UDRIE UART0_UDRIE195,7429
  #define UART1_STATUS UART1_STATUS196,7462
  #define UART1_CONTROL UART1_CONTROL197,7495
  #define UART1_DATA UART1_DATA198,7528
  #define UART1_UDRIE UART1_UDRIE199,7559
 #define ATMEGA_USART0ATMEGA_USART0202,7658
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT203,7682
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT204,7733
 #define UART0_STATUS UART0_STATUS205,7784
 #define UART0_CONTROL UART0_CONTROL206,7816
 #define UART0_DATA UART0_DATA207,7848
 #define UART0_UDRIE UART0_UDRIE208,7878
 #define ATMEGA_USART0ATMEGA_USART0211,8037
 #define ATMEGA_USART1ATMEGA_USART1212,8061
 #define UART0_RECEIVE_INTERRUPT UART0_RECEIVE_INTERRUPT213,8085
 #define UART1_RECEIVE_INTERRUPT UART1_RECEIVE_INTERRUPT214,8136
 #define UART0_TRANSMIT_INTERRUPT UART0_TRANSMIT_INTERRUPT215,8188
 #define UART1_TRANSMIT_INTERRUPT UART1_TRANSMIT_INTERRUPT216,8239
 #define UART0_STATUS UART0_STATUS217,8291
 #define UART0_CONTROL UART0_CONTROL218,8323
 #define UART0_DATA UART0_DATA219,8355
 #define UART0_UDRIE UART0_UDRIE220,8385
 #define UART1_STATUS UART1_STATUS221,8417
 #define UART1_CONTROL UART1_CONTROL222,8449
 #define UART1_DATA UART1_DATA223,8481
 #define UART1_UDRIE UART1_UDRIE224,8511
static volatile unsigned char UART_TxBuf[UART_TX_BUFFER_SIZE];UART_TxBuf233,8648
static volatile unsigned char UART_RxBuf[UART_RX_BUFFER_SIZE];UART_RxBuf234,8712
static volatile unsigned char UART_TxHead;UART_TxHead235,8776
static volatile unsigned char UART_TxTail;UART_TxTail236,8820
static volatile unsigned char UART_RxHead;UART_RxHead237,8864
static volatile unsigned char UART_RxTail;UART_RxTail238,8908
static volatile unsigned char UART_LastRxError;UART_LastRxError239,8952
static volatile unsigned char UART1_TxBuf[UART_TX_BUFFER_SIZE];UART1_TxBuf242,9033
static volatile unsigned char UART1_RxBuf[UART_RX_BUFFER_SIZE];UART1_RxBuf243,9098
static volatile unsigned char UART1_TxHead;UART1_TxHead244,9163
static volatile unsigned char UART1_TxTail;UART1_TxTail245,9208
static volatile unsigned char UART1_RxHead;UART1_RxHead246,9253
static volatile unsigned char UART1_RxTail;UART1_RxTail247,9298
static volatile unsigned char UART1_LastRxError;UART1_LastRxError248,9343
ISR(UART0_RECEIVE_INTERRUPT)ISR254,9440
ISR(UART0_TRANSMIT_INTERRUPT)ISR301,10822
void uart_init(unsigned int baudrate)uart_init334,11996
unsigned int uart_getc(void)uart_getc419,14463
void uart_putc(unsigned char data)uart_putc447,15244
void uart_puts(const char *s )uart_puts478,15999
void uart_puts_p(const char *progmem_s )uart_puts_p492,16399
SIGNAL(UART1_RECEIVE_INTERRUPT)SIGNAL507,16665
SIGNAL(UART1_TRANSMIT_INTERRUPT)SIGNAL542,17706
void uart1_init(unsigned int baudrate)uart1_init569,18775
unsigned int uart1_getc(void)uart1_getc604,19816
void uart1_putc(unsigned char data)uart1_putc632,20606
void uart1_puts(const char *s )uart1_puts658,21286
void uart1_puts_p(const char *progmem_s )uart1_puts_p672,21691

eeprom.h,817
#define EEPROM_HEEPROM_H19,804
#define EEMEM EEMEM39,1259
const prog_char _str_cfg[] = "\r\nCfg: 0x%02x";_str_cfg44,1402
uint8_t eep_usbConfig EEMEM;EEMEM66,2022
uint8_t eep_maxUSBHidReportDescriptorBytes EEMEM;EEMEM67,2051
char    eep_usbHidReportDescriptor[USB_CFG_HID_REPORT_DESCRIPTOR_LEN] EEMEM;EEMEM68,2101
int     eep_usbDescriptorStringVendor[USB_DEVICE_STRING_DESCRIPTION_LEN] EEMEM;EEMEM70,2179
int     eep_usbDescriptorStringDevice[USB_DEVICE_STRING_DESCRIPTION_LEN] EEMEM;EEMEM71,2259
int     eep_usbDescriptorSerialNumber[USB_DEVICE_STRING_DESCRIPTION_LEN] EEMEM;EEMEM72,2339
uint8_t eep_usbCfgVendorID[USB_CFG_ID_BYTE_CNT] EEMEM;EEMEM73,2419
uint8_t eep_usbCfgDeviceID[USB_CFG_ID_BYTE_CNT] EEMEM;EEMEM74,2474
uint8_t eep_usbDataSequence[USB_MAX_DATA_SEQ_SIZE] EEMEM;EEMEM75,2529

globals.h,1618
#define __GLOBAL_H____GLOBAL_H__19,812
#define F_CPU F_CPU23,929
#define WITH_INTERPRETERWITH_INTERPRETER29,1113
#define USB_CFG_HID_REPORT_DESCRIPTOR_LEN USB_CFG_HID_REPORT_DESCRIPTOR_LEN33,1221
#define USB_DEVICE_STRING_DESCRIPTION_LEN USB_DEVICE_STRING_DESCRIPTION_LEN36,1323
#define USB_MAX_DATA_BYTES USB_MAX_DATA_BYTES39,1431
#define USB_CFG_ID_BYTE_CNT USB_CFG_ID_BYTE_CNT42,1521
#define USB_MAX_DATA_SEQ_SIZE USB_MAX_DATA_SEQ_SIZE46,1752
#define LED_RED_PORT LED_RED_PORT51,2067
#define LED_YELLOW_PORT LED_YELLOW_PORT52,2097
#define LED_GREEN_PORT LED_GREEN_PORT53,2127
#define LED_RED_PIN LED_RED_PIN54,2157
#define LED_YELLOW_PIN LED_YELLOW_PIN55,2185
#define LED_GREEN_PIN LED_GREEN_PIN56,2213
#define EEP_CFG_USB_HID_REPORT_DESCRIPTOR EEP_CFG_USB_HID_REPORT_DESCRIPTOR60,2382
#define EEP_CFG_USB_DESCRIPTOR_STRING_VENDOR EEP_CFG_USB_DESCRIPTOR_STRING_VENDOR61,2436
#define EEP_CFG_USB_DESCRIPTOR_STRING_DEVICE EEP_CFG_USB_DESCRIPTOR_STRING_DEVICE62,2490
#define EEP_CFG_USB_DESCRIPTOR_STRING_SERIAL_NUMBER EEP_CFG_USB_DESCRIPTOR_STRING_SERIAL_NUMBER63,2544
#define EEP_CFG_USB_CONFIG_VENDOR_ID EEP_CFG_USB_CONFIG_VENDOR_ID64,2598
#define EEP_CFG_USB_CONFIG_DEVICE_ID EEP_CFG_USB_CONFIG_DEVICE_ID65,2652
#define EEP_CFG_USB_DATA_SEQ EEP_CFG_USB_DATA_SEQ66,2706
#define EEP_CFG_USB_CONFIG_INTERPRET_ID EEP_CFG_USB_CONFIG_INTERPRET_ID67,2760
#define EEP_CFG_USB_TYPES EEP_CFG_USB_TYPES69,2815
#define EEP_CFG_USB_STARTS_WITH EEP_CFG_USB_STARTS_WITH70,2916
#define EEP_CFG_VALUE_ON EEP_CFG_VALUE_ON72,2951
#define EEP_CFG_VALUE_OFF EEP_CFG_VALUE_OFF73,2979

help.h,67
#define _HELP_H__HELP_H_3,18
#define _MSG_HELP_ _MSG_HELP_5,36

main.h,1540
#define MAIN_HMAIN_H19,806
uint8_t maxUSBDataBytes;maxUSBDataBytes90,2570
uint8_t usbDataSequenceBytes;usbDataSequenceBytes93,2657
static uchar bytesRemaining;bytesRemaining97,2750
static uchar idleRate; // in 4 ms unitsidleRate99,2780
uint8_t dataBytes[USB_MAX_DATA_BYTES];dataBytes102,2863
uint8_t *usbDataSequence; //[USB_MAX_DATA_SEQ_SIZE];usbDataSequence105,2988
typedef struct USB_DescrUSB_Descr111,3159
    uint8_t USBCfgDeviceClass;USBCfgDeviceClass115,3286
    uint8_t USBCfgDeviceSubClass;USBCfgDeviceSubClass116,3317
    uint8_t USBCfgInterfaceClass; // 3USBCfgInterfaceClass118,3388
    uint8_t USBCfgInterfaceSubClass;USBCfgInterfaceSubClass119,3427
    uint8_t USBCfgInterfaceProtocol;USBCfgInterfaceProtocol120,3464
} USB_Descr_t;USB_Descr_t121,3501
USB_Descr_t usb_descr;usb_descr123,3517
uint8_t maxUSBHidReportDescriptorBytes = 22;maxUSBHidReportDescriptorBytes127,3623
char usbHidReportDescriptor[USB_CFG_HID_REPORT_DESCRIPTOR_LEN] = {usbHidReportDescriptor130,3731
int usbDescriptorStringVendor[USB_DEVICE_STRING_DESCRIPTION_LEN+1];usbDescriptorStringVendor146,4423
int usbDescriptorStringDevice[USB_DEVICE_STRING_DESCRIPTION_LEN+1];usbDescriptorStringDevice148,4492
int usbDescriptorStringSerialNumber[USB_DEVICE_STRING_DESCRIPTION_LEN+1];usbDescriptorStringSerialNumber150,4561
char usbDescriptorDevice[] = {    /* USB device descriptor */usbDescriptorDevice152,4636
char usbDescriptorConfiguration[] = {    // USB configuration descriptorusbDescriptorConfiguration173,5749

tty.h,5550
#define TTY_HTTY_H19,801
#define TTY_MAX_CMD_LINE_LEN TTY_MAX_CMD_LINE_LEN41,1307
#define TTY_CMD_WITHOUT_PARAMETER TTY_CMD_WITHOUT_PARAMETER43,1349
#define TTY_CMD_WITH_STRING_PARAMETER TTY_CMD_WITH_STRING_PARAMETER44,1390
#define TTY_READ_MODE_COMMAND TTY_READ_MODE_COMMAND46,1432
#define TTY_READ_MODE_HID_DESCRIPTOR TTY_READ_MODE_HID_DESCRIPTOR47,1473
#define TTY_READ_MODE_USB_DATA_SEQ TTY_READ_MODE_USB_DATA_SEQ48,1514
#define TTY_READ_MODE_HID_DATA TTY_READ_MODE_HID_DATA49,1555
#define TTY_ECHO_ON TTY_ECHO_ON51,1597
#define TTY_ECHO_OFF TTY_ECHO_OFF52,1638
#define TTY_EEP_CFG_USB_OFFSET TTY_EEP_CFG_USB_OFFSET55,1718
const char WELCOME_MSG[] PROGMEM = "\r\n\r\nklaute's HackStick\r\nv0.6.1 (by klaute)\r\n>";PROGMEM59,1842
const char HELP_MSG[] PROGMEM = _MSG_HELP_;PROGMEM61,1935
struct tty_config_t {tty_config_t122,3699
    uint8_t read_mode:2;read_mode126,3905
    uint8_t echo:1;echo129,4019
    uint8_t empty:5; // Frei für weiter Konfigurationszwecke.empty130,4039
} tty_config;tty_config131,4102
unsigned char tty_cb_pos; // Position im Kommando Buffertty_cb_pos133,4117
unsigned char tty_ud_pos; // Position in den zu verändernden Datentty_ud_pos134,4174
char *tty_buff; //[TTY_MAX_CMD_LINE_LEN];tty_buff137,4299
   void (*func)(int); // Zeiger auf die auszuführende Funktionfunc143,4459
   int type;         // das Argument, das mitübergeben wirdtype144,4523
   char *command;    // Zeiger auf das Kommando im FLASHcommand145,4584
} tty_command_t;tty_command_t146,4641
static FILE _stdout = FDEV_SETUP_STREAM(_uart_putc, NULL, _FDEV_SETUP_WRITE);_stdout211,6330
const prog_char _str_gt[]      = ">";_str_gt216,6521
const prog_char _str_minus[]   = " -";_str_minus217,6559
const prog_char _str_plus[]    = " +";_str_plus218,6598
const prog_char _str_char[]    = "%c";_str_char219,6637
const prog_char _str_decimal[] = "%d";_str_decimal220,6676
const prog_char _str_end[]     = "E";_str_end221,6715
const prog_char _str_error[]   = "ERR";_str_error222,6753
const prog_char _str_bb[]      = "\b \b";_str_bb223,6793
const prog_char _str_ret[]     = "\r\n";_str_ret224,6835
const prog_char _str_ret_gt[]  = "\r\n>";_str_ret_gt225,6876
const prog_char _str_2hex[]    = "0x%02X ";_str_2hex226,6918
const prog_char _str_4hex[]    = "0x%04x";_str_4hex227,6962
const prog_char _str_header[]  = "H=0x%02X\r\n";_str_header228,7005
const prog_char _str_vid[]     = "VID=0x%02x%02x";_str_vid229,7054
const prog_char _str_did[]     = "DID=0x%02x%02x";_str_did230,7105
const prog_char _str_bl[]      = "Starting bootloader...\r\n\r\n";_str_bl231,7156
const prog_char _rledon[]  = "rledon";_rledon236,7349
const prog_char _rledoff[] = "rledoff";_rledoff237,7388
const prog_char _yledon[]  = "yledon";_yledon238,7428
const prog_char _yledoff[] = "yledoff";_yledoff239,7467
const prog_char _gledon[]  = "gledon";_gledon240,7507
const prog_char _gledoff[] = "gledoff";_gledoff241,7546
const prog_char _urst[] = "urst";_urst243,7587
const prog_char _sint[]  = "sint";_sint245,7622
const prog_char _sint3[] = "sint3";_sint3247,7698
const prog_char _isd[] = "isd";_isd251,7766
const prog_char _gdsc[] = "gdsc";_gdsc254,7806
const prog_char _gsd[]  = "gsd";_gsd256,7864
const prog_char _gdta[] = "gdta";_gdta258,7904
const prog_char _sdsc[] = "sdsc";_sdsc260,7939
const prog_char _ssd[]  = "ssd";_ssd262,7997
const prog_char _sdta[] = "sdta";_sdta264,8037
const prog_char _ersd[]  = "ersd";_ersd266,8072
const prog_char _essd[]  = "essd";_essd267,8107
const prog_char _erdsc[] = "erdsc";_erdsc268,8142
const prog_char _esdsc[] = "esdsc";_esdsc269,8178
const prog_char _ervn[]  = "ervn";_ervn271,8215
const prog_char _esvn[]  = "esvn";_esvn272,8250
const prog_char _ern[]   = "ern";_ern273,8285
const prog_char _esn[]   = "esn";_esn274,8319
const prog_char _ersn[]  = "ersn";_ersn275,8353
const prog_char _essn[]  = "essn";_essn276,8388
const prog_char _ercvid[] = "ercvid";_ercvid278,8424
const prog_char _escvid[] = "escvid";_escvid279,8462
const prog_char _ercdid[] = "ercdid";_ercdid280,8500
const prog_char _escdid[] = "escdid";_escdid281,8538
const prog_char _tlsdsc[]  = "tlsdsc";_tlsdsc283,8577
const prog_char _tlssd[]   = "tlssd";_tlssd285,8640
const prog_char _tlsvn[]   = "tlsvn";_tlsvn287,8685
const prog_char _tlsn[]    = "tlsn";_tlsn288,8723
const prog_char _tlssn[]   = "tlssn";_tlssn289,8760
const prog_char _tlscvid[] = "tlscvid";_tlscvid290,8798
const prog_char _tlscdid[] = "tlscdid";_tlscdid291,8838
const prog_char _tissd[]   = "tissd";_tissd293,8902
const prog_char _edcfg[] = "edcfg";_edcfg296,8948
const prog_char _gvn[]   = "gvn";_gvn298,8985
const prog_char _gn[]    = "gn";_gn299,9019
const prog_char _gsn[]   = "gsn";_gsn300,9052
const prog_char _gcvid[] = "gcvid";_gcvid301,9086
const prog_char _gcdid[] = "gcdid";_gcdid302,9122
const prog_char _svn[]   = "svn";_svn303,9158
const prog_char _sn[]    = "sn";_sn304,9192
const prog_char _ssn[]   = "ssn";_ssn305,9225
const prog_char _svnh[] = "svnh";_svnh307,9260
const prog_char _snh[]  = "snh";_snh308,9294
const prog_char _ssnh[] = "ssnh";_ssnh309,9327
const prog_char _scvid[] = "scvid";_scvid311,9362
const prog_char _scdid[] = "scdid";_scdid312,9398
const prog_char _help[] = "help";_help314,9435
const prog_char _ttye[] = "ttye";_ttye316,9470
const prog_char _bootloader[] = "bootloader";_bootloader318,9505
const tty_command_t tty_commands[] PROGMEM = {PROGMEM322,9640

uart.h,563
#define UART_HUART_H2,16
#define UART_BAUD_SELECT(UART_BAUD_SELECT64,2462
#define UART_BAUD_SELECT_DOUBLE_SPEED(UART_BAUD_SELECT_DOUBLE_SPEED70,2754
#define UART_RX_BUFFER_SIZE UART_RX_BUFFER_SIZE75,2947
#define UART_TX_BUFFER_SIZE UART_TX_BUFFER_SIZE79,3081
#define UART_FRAME_ERROR UART_FRAME_ERROR90,3406
#define UART_OVERRUN_ERROR UART_OVERRUN_ERROR91,3491
#define UART_BUFFER_OVERFLOW UART_BUFFER_OVERFLOW92,3576
#define UART_NO_DATA UART_NO_DATA93,3661
#define uart_puts_P(uart_puts_P173,6294
#define uart1_puts_P(uart1_puts_P188,7230

usbconfig.h,3032
#define __usbconfig_h_included____usbconfig_h_included__12,391
#define USB_CFG_IOPORTNAME USB_CFG_IOPORTNAME29,1115
#define USB_CFG_DMINUS_BIT USB_CFG_DMINUS_BIT33,1287
#define USB_CFG_DPLUS_BIT USB_CFG_DPLUS_BIT37,1441
#define USB_CFG_CLOCK_KHZ USB_CFG_CLOCK_KHZ46,1974
#define USB_CFG_CHECK_CRC USB_CFG_CHECK_CRC55,2445
#define USB_CFG_HAVE_INTRIN_ENDPOINT USB_CFG_HAVE_INTRIN_ENDPOINT77,3493
#define USB_CFG_HAVE_INTRIN_ENDPOINT3 USB_CFG_HAVE_INTRIN_ENDPOINT382,3707
#define USB_CFG_EP3_NUMBER USB_CFG_EP3_NUMBER88,4058
#define USB_CFG_IMPLEMENT_HALT USB_CFG_IMPLEMENT_HALT98,4585
#define USB_CFG_SUPPRESS_INTR_CODE USB_CFG_SUPPRESS_INTR_CODE104,4898
#define USB_CFG_INTR_POLL_INTERVAL USB_CFG_INTR_POLL_INTERVAL112,5383
#define USB_CFG_IS_SELF_POWERED USB_CFG_IS_SELF_POWERED117,5608
#define USB_CFG_MAX_BUS_POWER USB_CFG_MAX_BUS_POWER121,5772
#define USB_CFG_IMPLEMENT_FN_WRITE USB_CFG_IMPLEMENT_FN_WRITE126,6022
#define USB_CFG_IMPLEMENT_FN_READ USB_CFG_IMPLEMENT_FN_READ131,6231
#define USB_CFG_IMPLEMENT_FN_WRITEOUT USB_CFG_IMPLEMENT_FN_WRITEOUT137,6545
#define USB_CFG_HAVE_FLOWCONTROL USB_CFG_HAVE_FLOWCONTROL143,6856
#define USB_CFG_DRIVER_FLASH_PAGE USB_CFG_DRIVER_FLASH_PAGE148,7064
#define USB_CFG_LONG_TRANSFERS USB_CFG_LONG_TRANSFERS153,7323
#define USB_COUNT_SOF USB_COUNT_SOF174,8440
#define USB_CFG_CHECK_DATA_TOGGLING USB_CFG_CHECK_DATA_TOGGLING198,9670
#define USB_CFG_HAVE_MEASURE_FRAME_LENGTH USB_CFG_HAVE_MEASURE_FRAME_LENGTH206,10162
#define USB_USE_FAST_CRC USB_USE_FAST_CRC210,10367
#define  USB_CFG_VENDOR_ID USB_CFG_VENDOR_ID221,10919
#define  USB_CFG_DEVICE_ID USB_CFG_DEVICE_ID227,11284
#define USB_CFG_DEVICE_VERSION USB_CFG_DEVICE_VERSION239,11968
#define USB_CFG_DEVICE_CLASS USB_CFG_DEVICE_CLASS267,13386
#define USB_CFG_DEVICE_SUBCLASS USB_CFG_DEVICE_SUBCLASS268,13424
#define USB_CFG_INTERFACE_CLASS USB_CFG_INTERFACE_CLASS272,13579
#define USB_CFG_INTERFACE_SUBCLASS USB_CFG_INTERFACE_SUBCLASS273,13617
#define USB_CFG_INTERFACE_PROTOCOL USB_CFG_INTERFACE_PROTOCOL274,13655
#define USB_CFG_HID_REPORT_DESCRIPTOR_LENGTH	USB_CFG_HID_REPORT_DESCRIPTOR_LENGTH280,13974
#define USB_CFG_DESCR_PROPS_DEVICE USB_CFG_DESCR_PROPS_DEVICE345,17073
#define USB_CFG_DESCR_PROPS_CONFIGURATION USB_CFG_DESCR_PROPS_CONFIGURATION346,17167
#define USB_CFG_DESCR_PROPS_STRINGS USB_CFG_DESCR_PROPS_STRINGS347,17261
#define USB_CFG_DESCR_PROPS_STRING_0 USB_CFG_DESCR_PROPS_STRING_0348,17315
#define USB_CFG_DESCR_PROPS_STRING_VENDOR USB_CFG_DESCR_PROPS_STRING_VENDOR349,17369
#define USB_CFG_DESCR_PROPS_STRING_PRODUCT USB_CFG_DESCR_PROPS_STRING_PRODUCT350,17463
#define USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER351,17557
#define USB_CFG_DESCR_PROPS_HID USB_CFG_DESCR_PROPS_HID352,17651
#define USB_CFG_DESCR_PROPS_HID_REPORT USB_CFG_DESCR_PROPS_HID_REPORT353,17705
#define USB_CFG_DESCR_PROPS_UNKNOWN USB_CFG_DESCR_PROPS_UNKNOWN354,17799
#define USB_INTR_VECTOR USB_INTR_VECTOR372,18666

usbdrv/oddebug.c,210
static void uartPutc(char c)uartPutc17,452
static uchar    hexAscii(uchar h)hexAscii23,588
static void printHex(uchar c)printHex32,721
void    odDebug(uchar prefix, uchar *data, uchar len)odDebug38,815

usbdrv/usbdrv.c,5332
uchar usbRxBuf[2*USB_BUFSIZE];  /* raw RX buffer: PID, 8 bytes data, 2 bytes CRC */usbRxBuf24,732
uchar       usbInputBufOffset;  /* offset in usbRxBuf used for low level receiving */usbInputBufOffset25,816
uchar       usbDeviceAddr;      /* assigned during enumeration, defaults to 0 */usbDeviceAddr26,902
uchar       usbNewDeviceAddr;   /* device ID which should be set after status phase */usbNewDeviceAddr27,983
uchar       usbConfiguration;   /* currently selected configuration. Administered by driver, but not used */usbConfiguration28,1070
volatile schar usbRxLen;        /* = 0; number of bytes in usbRxBuf; 0 means free, -1 for flow control */usbRxLen29,1179
uchar       usbCurrentTok;      /* last token received or endpoint number for last OUT token if != 0 */usbCurrentTok30,1285
uchar       usbRxToken;         /* token for data we received; or endpont number for last OUT */usbRxToken31,1389
volatile uchar usbTxLen = USBPID_NAK;   /* number of bytes to transmit with next IN token or handshake token */usbTxLen32,1486
uchar       usbTxBuf[USB_BUFSIZE];/* data to transmit with next IN, free if usbTxLen contains handshake token */usbTxBuf33,1598
volatile uchar  usbSofCount;    /* incremented by assembler module every SOF */usbSofCount35,1729
usbTxStatus_t  usbTxStatus1;usbTxStatus138,1880
usbTxStatus_t  usbTxStatus3;usbTxStatus340,1946
uchar       usbCurrentDataToken;/* when we check data toggling to ignore duplicate packets */usbCurrentDataToken44,2024
uchar               *usbMsgPtr;     /* data to transmit next -- ROM or RAM address */usbMsgPtr48,2180
static usbMsgLen_t  usbMsgLen = USB_NO_MSG; /* remaining number of bytes */usbMsgLen49,2266
static uchar        usbMsgFlags;    /* flag values see below */usbMsgFlags50,2342
#define USB_FLG_MSGPTR_IS_ROM USB_FLG_MSGPTR_IS_ROM52,2407
#define USB_FLG_USE_USER_RW USB_FLG_USE_USER_RW53,2446
#undef USB_CFG_DESCR_PROPS_STRING_0USB_CFG_DESCR_PROPS_STRING_068,2953
#define USB_CFG_DESCR_PROPS_STRING_0 USB_CFG_DESCR_PROPS_STRING_069,2989
PROGMEM char usbDescriptorString0[] = { /* language descriptor */usbDescriptorString070,3058
#undef USB_CFG_DESCR_PROPS_STRING_VENDORUSB_CFG_DESCR_PROPS_STRING_VENDOR78,3384
#define USB_CFG_DESCR_PROPS_STRING_VENDOR USB_CFG_DESCR_PROPS_STRING_VENDOR79,3425
PROGMEM int  usbDescriptorStringVendor[] = {usbDescriptorStringVendor80,3503
#undef USB_CFG_DESCR_PROPS_STRING_PRODUCTUSB_CFG_DESCR_PROPS_STRING_PRODUCT87,3713
#define USB_CFG_DESCR_PROPS_STRING_PRODUCT USB_CFG_DESCR_PROPS_STRING_PRODUCT88,3755
PROGMEM int  usbDescriptorStringDevice[] = {usbDescriptorStringDevice89,3834
#undef USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBERUSB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER96,4052
#define USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER97,4100
PROGMEM int usbDescriptorStringSerialNumber[] = {usbDescriptorStringSerialNumber98,4192
#undef USB_CFG_DESCR_PROPS_DEVICEUSB_CFG_DESCR_PROPS_DEVICE109,4505
#define USB_CFG_DESCR_PROPS_DEVICE USB_CFG_DESCR_PROPS_DEVICE110,4539
PROGMEM char usbDescriptorDevice[] = {    /* USB device descriptor */usbDescriptorDevice111,4603
#undef USB_CFG_DESCR_PROPS_HIDUSB_CFG_DESCR_PROPS_HID135,5773
#define USB_CFG_DESCR_PROPS_HID USB_CFG_DESCR_PROPS_HID136,5804
#undef USB_CFG_DESCR_PROPS_CONFIGURATIONUSB_CFG_DESCR_PROPS_CONFIGURATION140,5953
#define USB_CFG_DESCR_PROPS_CONFIGURATION USB_CFG_DESCR_PROPS_CONFIGURATION141,5994
PROGMEM char usbDescriptorConfiguration[] = {    /* USB configuration descriptor */usbDescriptorConfiguration142,6073
static inline void  usbResetDataToggling(void)usbResetDataToggling197,8809
static inline void  usbResetStall(void)usbResetStall207,9173
static void usbGenericSetInterrupt(uchar *data, uchar len, usbTxStatus_t *txStatus)usbGenericSetInterrupt221,9535
USB_PUBLIC void usbSetInterrupt(uchar *data, uchar len)usbSetInterrupt245,10440
USB_PUBLIC void usbSetInterrupt3(uchar *data, uchar len)usbSetInterrupt3252,10596
#   define SWITCH_START(SWITCH_START267,11114
#   define SWITCH_CASE(SWITCH_CASE268,11163
#   define SWITCH_CASE2(SWITCH_CASE2269,11221
#   define SWITCH_CASE3(SWITCH_CASE3270,11286
#   define SWITCH_DEFAULT SWITCH_DEFAULT271,11361
#   define SWITCH_END SWITCH_END272,11414
#   define SWITCH_START(SWITCH_START274,11458
#   define SWITCH_CASE(SWITCH_CASE275,11519
#   define SWITCH_CASE2(SWITCH_CASE2276,11581
#   define SWITCH_CASE3(SWITCH_CASE3277,11656
#   define SWITCH_DEFAULT SWITCH_DEFAULT278,11747
#   define SWITCH_END SWITCH_END279,11789
#define USB_RX_USER_HOOK(USB_RX_USER_HOOK283,11860
#define USB_SET_ADDRESS_HOOK(USB_SET_ADDRESS_HOOK286,11932
#define GET_DESCRIPTOR(GET_DESCRIPTOR296,12284
static inline usbMsgLen_t usbDriverDescriptor(usbRequest_t *rq)usbDriverDescriptor311,12952
static inline usbMsgLen_t usbDriverSetup(usbRequest_t *rq)usbDriverSetup362,15136
static inline void usbProcessRx(uchar *data, uchar len)usbProcessRx422,17597
static uchar usbDeviceRead(uchar *data, uchar len)usbDeviceRead492,20667
static inline void usbBuildTxBlock(void)usbBuildTxBlock524,21663
static inline void usbHandleResetHook(uchar notResetState)usbHandleResetHook550,22464
USB_PUBLIC void usbPoll(void)usbPoll565,22803
USB_PUBLIC void usbInit(void)usbInit607,24134

usbdrv/oddebug.h,1119
#define __oddebug_h_included____oddebug_h_included__12,372
#   define  F_CPU F_CPU28,922
#   define  uchar uchar35,1060
#   undef   DEBUG_LEVELDEBUG_LEVEL40,1242
#   define  DEBUG_LEVEL DEBUG_LEVEL44,1294
#   define  DBG1(DBG150,1429
#   define  DBG1(DBG152,1498
#   define  DBG2(DBG256,1562
#   define  DBG2(DBG258,1631
#   define  ODDBG_UBRR ODDBG_UBRR69,1923
#   define  ODDBG_UBRR ODDBG_UBRR71,1972
#   define  ODDBG_UBRR ODDBG_UBRR73,2022
#   define  ODDBG_UBRR ODDBG_UBRR75,2073
#   define  ODDBG_UCR ODDBG_UCR79,2128
#   define  ODDBG_UCR ODDBG_UCR81,2176
#   define  ODDBG_UCR ODDBG_UCR83,2227
#   define  ODDBG_TXEN ODDBG_TXEN87,2283
#   define  ODDBG_TXEN ODDBG_TXEN89,2318
#   define  ODDBG_USR ODDBG_USR93,2372
#   define  ODDBG_USR ODDBG_USR95,2420
#   define  ODDBG_USR ODDBG_USR97,2471
#   define  ODDBG_UDRE ODDBG_UDRE101,2527
#   define  ODDBG_UDRE ODDBG_UDRE103,2562
#   define  ODDBG_UDR ODDBG_UDR107,2616
#   define  ODDBG_UDR ODDBG_UDR109,2663
static inline void  odDebugInit(void)odDebugInit112,2700
#   define odDebugInit(odDebugInit118,2826

usbdrv/usbconfig-prototype.h,3140
#define __usbconfig_h_included____usbconfig_h_included__12,439
#define USB_CFG_IOPORTNAME USB_CFG_IOPORTNAME29,1163
#define USB_CFG_DMINUS_BIT USB_CFG_DMINUS_BIT33,1335
#define USB_CFG_DPLUS_BIT USB_CFG_DPLUS_BIT37,1489
#define USB_CFG_CLOCK_KHZ USB_CFG_CLOCK_KHZ46,2022
#define USB_CFG_CHECK_CRC USB_CFG_CHECK_CRC55,2493
#define USB_CFG_HAVE_INTRIN_ENDPOINT USB_CFG_HAVE_INTRIN_ENDPOINT78,3542
#define USB_CFG_HAVE_INTRIN_ENDPOINT3 USB_CFG_HAVE_INTRIN_ENDPOINT383,3756
#define USB_CFG_EP3_NUMBER USB_CFG_EP3_NUMBER89,4107
#define USB_CFG_IMPLEMENT_HALT USB_CFG_IMPLEMENT_HALT99,4634
#define USB_CFG_SUPPRESS_INTR_CODE USB_CFG_SUPPRESS_INTR_CODE105,4947
#define USB_CFG_INTR_POLL_INTERVAL USB_CFG_INTR_POLL_INTERVAL113,5432
#define USB_CFG_IS_SELF_POWERED USB_CFG_IS_SELF_POWERED118,5656
#define USB_CFG_MAX_BUS_POWER USB_CFG_MAX_BUS_POWER122,5820
#define USB_CFG_IMPLEMENT_FN_WRITE USB_CFG_IMPLEMENT_FN_WRITE127,6070
#define USB_CFG_IMPLEMENT_FN_READ USB_CFG_IMPLEMENT_FN_READ132,6279
#define USB_CFG_IMPLEMENT_FN_WRITEOUT USB_CFG_IMPLEMENT_FN_WRITEOUT138,6593
#define USB_CFG_HAVE_FLOWCONTROL USB_CFG_HAVE_FLOWCONTROL144,6904
#define USB_CFG_DRIVER_FLASH_PAGE USB_CFG_DRIVER_FLASH_PAGE149,7112
#define USB_CFG_LONG_TRANSFERS USB_CFG_LONG_TRANSFERS154,7371
#define USB_COUNT_SOF USB_COUNT_SOF175,8488
#define USB_CFG_CHECK_DATA_TOGGLING USB_CFG_CHECK_DATA_TOGGLING199,9718
#define USB_CFG_HAVE_MEASURE_FRAME_LENGTH USB_CFG_HAVE_MEASURE_FRAME_LENGTH207,10210
#define USB_USE_FAST_CRC USB_USE_FAST_CRC211,10415
#define  USB_CFG_VENDOR_ID USB_CFG_VENDOR_ID222,10967
#define  USB_CFG_DEVICE_ID USB_CFG_DEVICE_ID231,11471
#define USB_CFG_DEVICE_VERSION USB_CFG_DEVICE_VERSION242,12076
#define USB_CFG_VENDOR_NAME USB_CFG_VENDOR_NAME245,12195
#define USB_CFG_VENDOR_NAME_LEN USB_CFG_VENDOR_NAME_LEN246,12266
#define USB_CFG_DEVICE_NAME USB_CFG_DEVICE_NAME255,12742
#define USB_CFG_DEVICE_NAME_LEN USB_CFG_DEVICE_NAME_LEN256,12813
#define USB_CFG_DEVICE_CLASS USB_CFG_DEVICE_CLASS270,13492
#define USB_CFG_DEVICE_SUBCLASS USB_CFG_DEVICE_SUBCLASS271,13576
#define USB_CFG_INTERFACE_CLASS USB_CFG_INTERFACE_CLASS275,13731
#define USB_CFG_INTERFACE_SUBCLASS USB_CFG_INTERFACE_SUBCLASS276,13818
#define USB_CFG_INTERFACE_PROTOCOL USB_CFG_INTERFACE_PROTOCOL277,13856
#define USB_CFG_DESCR_PROPS_DEVICE USB_CFG_DESCR_PROPS_DEVICE348,17283
#define USB_CFG_DESCR_PROPS_CONFIGURATION USB_CFG_DESCR_PROPS_CONFIGURATION349,17337
#define USB_CFG_DESCR_PROPS_STRINGS USB_CFG_DESCR_PROPS_STRINGS350,17391
#define USB_CFG_DESCR_PROPS_STRING_0 USB_CFG_DESCR_PROPS_STRING_0351,17445
#define USB_CFG_DESCR_PROPS_STRING_VENDOR USB_CFG_DESCR_PROPS_STRING_VENDOR352,17499
#define USB_CFG_DESCR_PROPS_STRING_PRODUCT USB_CFG_DESCR_PROPS_STRING_PRODUCT353,17553
#define USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER354,17607
#define USB_CFG_DESCR_PROPS_HID USB_CFG_DESCR_PROPS_HID355,17661
#define USB_CFG_DESCR_PROPS_HID_REPORT USB_CFG_DESCR_PROPS_HID_REPORT356,17715
#define USB_CFG_DESCR_PROPS_UNKNOWN USB_CFG_DESCR_PROPS_UNKNOWN357,17769

usbdrv/usbdrv.h,7555
#define __usbdrv_h_included____usbdrv_h_included__12,420
#define USBDRV_VERSION USBDRV_VERSION125,6285
#define USB_PUBLICUSB_PUBLIC135,6668
#define uchar uchar146,7111
#define schar schar149,7162
#   define usbMsgLen_t usbMsgLen_t154,7331
#   define usbMsgLen_t usbMsgLen_t156,7369
#define USB_NO_MSG USB_NO_MSG164,7761
#define usbInterruptIsReady(usbInterruptIsReady227,11245
#define usbInterruptIsReady3(usbInterruptIsReady3234,11583
#define usbHidReportDescriptor usbHidReportDescriptor239,11817
#define usbDeviceConnect(usbDeviceConnect289,14690
#define usbDeviceDisconnect(usbDeviceDisconnect291,14849
#define usbDeviceConnect(usbDeviceConnect294,15048
#define usbDeviceDisconnect(usbDeviceDisconnect295,15107
#define usbCrc16(usbCrc16310,15998
#define usbCrc16Append(usbCrc16Append318,16440
#define USB_STRING_DESCRIPTOR_HEADER(USB_STRING_DESCRIPTOR_HEADER353,17968
#define usbDisableAllRequests(usbDisableAllRequests359,18256
#define usbEnableAllRequests(usbEnableAllRequests364,18490
#define usbAllRequestsAreDisabled(usbAllRequestsAreDisabled368,18699
#define USB_SET_DATATOKEN1(USB_SET_DATATOKEN1375,18927
#define USB_SET_DATATOKEN3(USB_SET_DATATOKEN3376,18984
#define USB_PROP_IS_DYNAMIC USB_PROP_IS_DYNAMIC393,19752
#define USB_PROP_IS_RAM USB_PROP_IS_RAM399,20044
#define USB_PROP_LENGTH(USB_PROP_LENGTH404,20262
#define USB_CFG_DESCR_PROPS_DEVICE USB_CFG_DESCR_PROPS_DEVICE411,20500
#define USB_CFG_DESCR_PROPS_CONFIGURATION USB_CFG_DESCR_PROPS_CONFIGURATION414,20603
#define USB_CFG_DESCR_PROPS_STRINGS USB_CFG_DESCR_PROPS_STRINGS417,20700
#define USB_CFG_DESCR_PROPS_STRING_0 USB_CFG_DESCR_PROPS_STRING_0420,20798
#define USB_CFG_DESCR_PROPS_STRING_VENDOR USB_CFG_DESCR_PROPS_STRING_VENDOR423,20901
#define USB_CFG_DESCR_PROPS_STRING_PRODUCT USB_CFG_DESCR_PROPS_STRING_PRODUCT426,21005
#define USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER429,21115
#define USB_CFG_DESCR_PROPS_HID USB_CFG_DESCR_PROPS_HID432,21208
#   undef USB_CFG_DESCR_PROPS_HID_REPORTUSB_CFG_DESCR_PROPS_HID_REPORT435,21307
#       define USB_CFG_DESCR_PROPS_HID_REPORT USB_CFG_DESCR_PROPS_HID_REPORT437,21436
#       define USB_CFG_DESCR_PROPS_HID_REPORT USB_CFG_DESCR_PROPS_HID_REPORT439,21534
#define USB_CFG_DESCR_PROPS_UNKNOWN USB_CFG_DESCR_PROPS_UNKNOWN443,21641
#define USB_CONCAT(USB_CONCAT499,22975
#define USB_CONCAT_EXPANDED(USB_CONCAT_EXPANDED500,23018
#define USB_OUTPORT(USB_OUTPORT502,23072
#define USB_INPORT(USB_INPORT503,23131
#define USB_DDRPORT(USB_DDRPORT504,23189
#   define  USB_CFG_VENDOR_ID USB_CFG_VENDOR_ID522,23985
#       define USB_CFG_DEVICE_ID USB_CFG_DEVICE_ID527,24139
#       define USB_CFG_DEVICE_ID USB_CFG_DEVICE_ID529,24267
#       define USB_CFG_DEVICE_ID USB_CFG_DEVICE_ID531,24372
#define USBOUT USBOUT540,24665
#define USB_PULLUP_OUT USB_PULLUP_OUT541,24721
#define USBIN USBIN542,24784
#define USBDDR USBDDR543,24839
#define USB_PULLUP_DDR USB_PULLUP_DDR544,24895
#define USBMINUS USBMINUS546,24959
#define USBPLUS USBPLUS547,24998
#define USBIDLE USBIDLE548,25036
#define USBMASK USBMASK549,25113
#define USB_CFG_IOPORT USB_CFG_IOPORT552,25283
#define USB_CFG_PULLUP_IOPORT USB_CFG_PULLUP_IOPORT554,25380
#define USB_CFG_EP3_NUMBER USB_CFG_EP3_NUMBER558,25523
#define USB_CFG_HAVE_INTRIN_ENDPOINT3 USB_CFG_HAVE_INTRIN_ENDPOINT3562,25599
#define USB_BUFSIZE USB_BUFSIZE565,25649
#       define USB_INTR_CFG USB_INTR_CFG571,25884
#       define USB_INTR_CFG USB_INTR_CFG573,25927
#       define USB_INTR_CFG_SET USB_INTR_CFG_SET578,26102
#       define USB_INTR_CFG_SET USB_INTR_CFG_SET583,26336
#   define USB_INTR_CFG_CLR USB_INTR_CFG_CLR587,26512
#       define USB_INTR_ENABLE USB_INTR_ENABLE592,26666
#       define USB_INTR_ENABLE USB_INTR_ENABLE594,26727
#       define USB_INTR_ENABLE USB_INTR_ENABLE596,26774
#   define USB_INTR_ENABLE_BIT USB_INTR_ENABLE_BIT600,26897
#       define USB_INTR_PENDING USB_INTR_PENDING605,27032
#       define USB_INTR_PENDING USB_INTR_PENDING607,27078
#   define USB_INTR_PENDING_BIT USB_INTR_PENDING_BIT611,27205
#define USBPID_SETUP USBPID_SETUP631,27928
#define USBPID_OUT USBPID_OUT632,27957
#define USBPID_IN USBPID_IN633,27986
#define USBPID_DATA0 USBPID_DATA0634,28015
#define USBPID_DATA1 USBPID_DATA1635,28044
#define USBPID_ACK USBPID_ACK637,28074
#define USBPID_NAK USBPID_NAK638,28103
#define USBPID_STALL USBPID_STALL639,28132
#define USB_INITIAL_DATATOKEN USB_INITIAL_DATATOKEN642,28192
typedef struct usbTxStatus{usbTxStatus647,28268
    volatile uchar   len;len648,28296
    uchar   buffer[USB_BUFSIZE];buffer649,28322
}usbTxStatus_t;usbTxStatus_t650,28355
#define usbTxLen1 usbTxLen1653,28423
#define usbTxBuf1 usbTxBuf1654,28460
#define usbTxLen3 usbTxLen3655,28500
#define usbTxBuf3 usbTxBuf3656,28537
typedef union usbWord{usbWord659,28579
    unsigned    word;word660,28602
    uchar       bytes[2];bytes661,28624
}usbWord_t;usbWord_t662,28650
typedef struct usbRequest{usbRequest664,28663
    uchar       bmRequestType;bmRequestType665,28690
    uchar       bRequest;bRequest666,28721
    usbWord_t   wValue;wValue667,28747
    usbWord_t   wIndex;wIndex668,28771
    usbWord_t   wLength;wLength669,28795
}usbRequest_t;usbRequest_t670,28820
#define USBRQ_RCPT_MASK USBRQ_RCPT_MASK682,29175
#define USBRQ_RCPT_DEVICE USBRQ_RCPT_DEVICE683,29212
#define USBRQ_RCPT_INTERFACE USBRQ_RCPT_INTERFACE684,29246
#define USBRQ_RCPT_ENDPOINT USBRQ_RCPT_ENDPOINT685,29280
#define USBRQ_TYPE_MASK USBRQ_TYPE_MASK688,29345
#define USBRQ_TYPE_STANDARD USBRQ_TYPE_STANDARD689,29382
#define USBRQ_TYPE_CLASS USBRQ_TYPE_CLASS690,29421
#define USBRQ_TYPE_VENDOR USBRQ_TYPE_VENDOR691,29460
#define USBRQ_DIR_MASK USBRQ_DIR_MASK694,29528
#define USBRQ_DIR_HOST_TO_DEVICE USBRQ_DIR_HOST_TO_DEVICE695,29569
#define USBRQ_DIR_DEVICE_TO_HOST USBRQ_DIR_DEVICE_TO_HOST696,29612
#define USBRQ_GET_STATUS USBRQ_GET_STATUS699,29684
#define USBRQ_CLEAR_FEATURE USBRQ_CLEAR_FEATURE700,29718
#define USBRQ_SET_FEATURE USBRQ_SET_FEATURE701,29752
#define USBRQ_SET_ADDRESS USBRQ_SET_ADDRESS702,29786
#define USBRQ_GET_DESCRIPTOR USBRQ_GET_DESCRIPTOR703,29820
#define USBRQ_SET_DESCRIPTOR USBRQ_SET_DESCRIPTOR704,29854
#define USBRQ_GET_CONFIGURATION USBRQ_GET_CONFIGURATION705,29888
#define USBRQ_SET_CONFIGURATION USBRQ_SET_CONFIGURATION706,29922
#define USBRQ_GET_INTERFACE USBRQ_GET_INTERFACE707,29956
#define USBRQ_SET_INTERFACE USBRQ_SET_INTERFACE708,29991
#define USBRQ_SYNCH_FRAME USBRQ_SYNCH_FRAME709,30026
#define USBDESCR_DEVICE USBDESCR_DEVICE712,30093
#define USBDESCR_CONFIG USBDESCR_CONFIG713,30127
#define USBDESCR_STRING USBDESCR_STRING714,30161
#define USBDESCR_INTERFACE USBDESCR_INTERFACE715,30195
#define USBDESCR_ENDPOINT USBDESCR_ENDPOINT716,30229
#define USBDESCR_HID USBDESCR_HID717,30263
#define USBDESCR_HID_REPORT USBDESCR_HID_REPORT718,30300
#define USBDESCR_HID_PHYS USBDESCR_HID_PHYS719,30337
#define USBATTR_SELFPOWER USBATTR_SELFPOWER722,30462
#define USBATTR_REMOTEWAKE USBATTR_REMOTEWAKE723,30499
#define USBRQ_HID_GET_REPORT USBRQ_HID_GET_REPORT726,30560
#define USBRQ_HID_GET_IDLE USBRQ_HID_GET_IDLE727,30597
#define USBRQ_HID_GET_PROTOCOL USBRQ_HID_GET_PROTOCOL728,30634
#define USBRQ_HID_SET_REPORT USBRQ_HID_SET_REPORT729,30671
#define USBRQ_HID_SET_IDLE USBRQ_HID_SET_IDLE730,30708
#define USBRQ_HID_SET_PROTOCOL USBRQ_HID_SET_PROTOCOL731,30745

usbdrv/usbportability.h,1379
#define __usbportability_h_INCLUDED____usbportability_h_INCLUDED__25,887
#   define ENABLE_BIT_DEFINITIONS	ENABLE_BIT_DEFINITIONS34,1282
#define __attribute__(__attribute__43,1460
#   define __ASSEMBLER__ __ASSEMBLER__46,1543
#   define PROGMEM PROGMEM50,1648
#   define PROGMEM PROGMEM52,1684
#define USB_READ_FLASH(USB_READ_FLASH55,1719
#define cli(cli60,1908
#define sei(sei61,1950
#define wdt_reset(wdt_reset62,1991
#define _BV(_BV63,2030
#define nop2 nop266,2099
#define XL XL67,2158
#define XH XH68,2178
#define YL YL69,2198
#define YH YH70,2218
#define ZL ZL71,2238
#define ZH ZH72,2258
#define lo8(lo873,2278
#define hi8(hi874,2301
#define __attribute__(__attribute__94,3199
#define PROGMEM PROGMEM96,3255
#define USB_READ_FLASH(USB_READ_FLASH97,3295
static inline void  cli(void)cli100,3376
static inline void  sei(void)sei104,3427
#define _delay_ms(_delay_ms109,3485
#define _BV(_BV110,3521
#define USB_CFG_USE_SWITCH_STATEMENT USB_CFG_USE_SWITCH_STATEMENT111,3556
#define macro macro113,3651
#define endm endm114,3674
#define nop2 nop2115,3700
#   define _VECTOR(_VECTOR123,4028
#   define USB_READ_FLASH(USB_READ_FLASH129,4182
#   define USB_READ_FLASH(USB_READ_FLASH131,4297
#define macro macro134,4360
#define endm endm135,4383
#define nop2 nop2136,4405
#   define PRG_RDB(PRG_RDB142,4570

usbdrv/usbdrvasm.S,1367
#define __SFR_OFFSET 0      /* used by avr-libc's register definitions */__SFR_OFFSET18,615
#define x1      r16x123,789
#define x2      r17x224,809
#define shift   r18shift25,829
#define cnt     r19cnt26,849
#define x3      r20x327,869
#define x4      r21x428,889
#define x5		r22x529,909
#define bitcnt  x5bitcnt30,925
#define phase   x4phase31,944
#define leap    x4leap32,963
#define usbTxLen1   usbTxStatus1usbTxLen182,2530
#define usbTxBuf1   (usbTxStatus1 + 1)usbTxBuf183,2563
#define usbTxLen3   usbTxStatus3usbTxLen384,2602
#define usbTxBuf3   (usbTxStatus3 + 1)usbTxBuf385,2635
RTMODEL "__rt_version", "3"RTMODEL101,3264
usbCrc16:usbCrc16178,5263
usbCrc16ByteLoop:usbCrc16ByteLoop184,5406
usbCrc16LoopTest:usbCrc16LoopTest212,6220
usbCrc16:usbCrc16233,6692
usbCrcByteLoop:usbCrcByteLoop243,7057
usbCrcBitLoop:usbCrcBitLoop246,7122
usbCrcNoXor:usbCrcNoXor252,7311
usbCrcLoopEntry:usbCrcLoopEntry255,7424
usbCrcReady:usbCrcReady258,7491
usbCrc16Append:usbCrc16Append265,7681
usbMeasureFrameLength:usbMeasureFrameLength320,9108
usbMFTime16:usbMFTime16324,9224
usbMFWaitStrobe:            ; first wait for D- == 0 (idle strobe)usbMFWaitStrobe327,9279
usbMFWaitIdle:              ; then wait until idle againusbMFWaitIdle332,9482
usbMFWaitLoop:usbMFWaitLoop337,9705
usbMFTimeout:usbMFTimeout343,9889
