
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b8  00800100  00002346  000023fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002346  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001a9  008001b8  008001b8  000024b2  2**0
                  ALLOC
  3 .eeprom       00000163  00810000  00810000  000024b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .stab         00000d68  00000000  00000000  00002618  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      0000006e  00000000  00000000  00003380  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bb 01 	jmp	0x376	; 0x376 <__ctors_end>
       4:	0c 94 6a 0b 	jmp	0x16d4	; 0x16d4 <__vector_1>
       8:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
       c:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      10:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      14:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      18:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      1c:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      20:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      24:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      28:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      2c:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      30:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      34:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      38:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      3c:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      40:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      44:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      48:	0c 94 63 04 	jmp	0x8c6	; 0x8c6 <__vector_18>
      4c:	0c 94 8f 04 	jmp	0x91e	; 0x91e <__vector_19>
      50:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      54:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      58:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      5c:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      60:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>
      64:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__bad_interrupt>

00000068 <usbDescriptorString0>:
      68:	04 03 09 04                                         ....

0000006c <__c.2048>:
      6c:	0d 0a 43 66 67 3a 20 30 78 25 30 32 78 00           ..Cfg: 0x%02x.

0000007a <__c.2027>:
      7a:	0d 0a 43 66 67 3a 20 30 78 25 30 32 78 00           ..Cfg: 0x%02x.

00000088 <WELCOME_MSG>:
      88:	0d 0a 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ..--------------
      98:	2d 2d 2d 2d 0d 0a 0d 0a 6b 6c 61 75 74 65 27 73     ----....klaute's
      a8:	20 48 61 63 6b 53 74 69 63 6b 0d 0a 76 30 2e 30      HackStick..v0.0
      b8:	36 20 28 62 79 20 6b 6c 61 75 74 65 29 0d 0a 3e     6 (by klaute)..>
	...

000000c9 <_rledon>:
      c9:	72 6c 65 64 6f 6e 00                                rledon.

000000d0 <_rledoff>:
      d0:	72 6c 65 64 6f 66 66 00                             rledoff.

000000d8 <_yledon>:
      d8:	79 6c 65 64 6f 6e 00                                yledon.

000000df <_yledoff>:
      df:	79 6c 65 64 6f 66 66 00                             yledoff.

000000e7 <_gledon>:
      e7:	67 6c 65 64 6f 6e 00                                gledon.

000000ee <_gledoff>:
      ee:	67 6c 65 64 6f 66 66 00                             gledoff.

000000f6 <_urst>:
      f6:	75 72 73 74 00                                      urst.

000000fb <_sint>:
      fb:	73 69 6e 74 00                                      sint.

00000100 <_gdsc>:
     100:	67 64 73 63 00                                      gdsc.

00000105 <_gdta>:
     105:	67 64 74 61 00                                      gdta.

0000010a <_sdsc>:
     10a:	73 64 73 63 00                                      sdsc.

0000010f <_sdta>:
     10f:	73 64 74 61 00                                      sdta.

00000114 <_erdta>:
     114:	65 72 64 74 61 00                                   erdta.

0000011a <_esdta>:
     11a:	65 73 64 74 61 00                                   esdta.

00000120 <_erdsc>:
     120:	65 72 64 73 63 00                                   erdsc.

00000126 <_esdsc>:
     126:	65 73 64 73 63 00                                   esdsc.

0000012c <_ervn>:
     12c:	65 72 76 6e 00                                      ervn.

00000131 <_esvn>:
     131:	65 73 76 6e 00                                      esvn.

00000136 <_ern>:
     136:	65 72 6e 00                                         ern.

0000013a <_esn>:
     13a:	65 73 6e 00                                         esn.

0000013e <_ersn>:
     13e:	65 72 73 6e 00                                      ersn.

00000143 <_essn>:
     143:	65 73 73 6e 00                                      essn.

00000148 <_ercvid>:
     148:	65 72 63 76 69 64 00                                ercvid.

0000014f <_escvid>:
     14f:	65 73 63 76 69 64 00                                escvid.

00000156 <_ercdid>:
     156:	65 72 63 64 69 64 00                                ercdid.

0000015d <_escdid>:
     15d:	65 73 63 64 69 64 00                                escdid.

00000164 <_tlosdsc>:
     164:	74 6c 6f 73 64 73 63 00                             tlosdsc.

0000016c <_tlosdta>:
     16c:	74 6c 6f 73 64 74 61 00                             tlosdta.

00000174 <_tlosvn>:
     174:	74 6c 6f 73 76 6e 00                                tlosvn.

0000017b <_tlosn>:
     17b:	74 6c 6f 73 6e 00                                   tlosn.

00000181 <_tlossn>:
     181:	74 6c 6f 73 73 6e 00                                tlossn.

00000188 <_tloscvid>:
     188:	74 6c 6f 73 63 76 69 64 00                          tloscvid.

00000191 <_tloscdid>:
     191:	74 6c 6f 73 63 64 69 64 00                          tloscdid.

0000019a <_edcfg>:
     19a:	65 64 63 66 67 00                                   edcfg.

000001a0 <_gvn>:
     1a0:	67 76 6e 00                                         gvn.

000001a4 <_gn>:
     1a4:	67 6e 00                                            gn.

000001a7 <_gsn>:
     1a7:	67 73 6e 00                                         gsn.

000001ab <_gcvid>:
     1ab:	67 63 76 69 64 00                                   gcvid.

000001b1 <_gcdid>:
     1b1:	67 63 64 69 64 00                                   gcdid.

000001b7 <_svn>:
     1b7:	73 76 6e 00                                         svn.

000001bb <_sn>:
     1bb:	73 6e 00                                            sn.

000001be <_ssn>:
     1be:	73 73 6e 00                                         ssn.

000001c2 <_scvid>:
     1c2:	73 63 76 69 64 00                                   scvid.

000001c8 <_scdid>:
     1c8:	73 63 64 69 64 00                                   scdid.

000001ce <_ttye>:
     1ce:	74 74 79 65 00                                      ttye.

000001d3 <tty_commands>:
     1d3:	36 05 00 00 c9 00 38 05 00 00 d0 00 3e 05 00 00     6.....8.....>...
     1e3:	d8 00 40 05 00 00 df 00 3a 05 00 00 e7 00 3c 05     ..@.....:.....<.
     1f3:	00 00 ee 00 93 09 00 00 f6 00 c2 07 00 00 fb 00     ................
     203:	34 07 00 00 00 01 7b 07 00 00 05 01 49 05 00 00     4.....{.....I...
     213:	0a 01 42 05 00 00 0f 01 39 04 00 00 14 01 be 03     ..B.....9.......
     223:	00 00 1a 01 4c 04 00 00 20 01 d1 03 00 00 26 01     ....L... .....&.
     233:	2e 04 00 00 2c 01 b3 03 00 00 31 01 23 04 00 00     ....,.....1.#...
     243:	36 01 a8 03 00 00 3a 01 18 04 00 00 3e 01 9d 03     6.....:.....>...
     253:	00 00 43 01 fe 03 00 00 48 01 83 03 00 00 4f 01     ..C.....H.....O.
     263:	e4 03 00 00 56 01 69 03 00 00 5d 01 3a 03 10 00     ....V.i...].:...
     273:	64 01 3a 03 16 00 6c 01 3a 03 11 00 74 01 3a 03     d.:...l.:...t.:.
     283:	12 00 7b 01 3a 03 13 00 81 01 3a 03 14 00 88 01     ..{.:.....:.....
     293:	3a 03 15 00 91 01 19 03 00 00 9a 01 fa 06 00 00     :...............
     2a3:	a0 01 c7 06 00 00 a4 01 94 06 00 00 a7 01 77 06     ..............w.
     2b3:	00 00 ab 01 5a 06 00 00 b1 01 32 06 01 00 b7 01     ....Z.....2.....
     2c3:	0a 06 01 00 bb 01 e2 05 01 00 be 01 b3 05 01 00     ................
     2d3:	c2 01 84 05 01 00 c8 01 50 05 01 00 ce 01           ........P.....

000002e1 <__c.2357>:
     2e1:	30 78 25 30 34 78 00                                0x%04x.

000002e8 <__c.2346>:
     2e8:	30 78 25 30 34 78 00                                0x%04x.

000002ef <__c.2272>:
     2ef:	44 49 44 3d 30 78 25 30 32 78 25 30 32 78 00        DID=0x%02x%02x.

000002fe <__c.2264>:
     2fe:	56 49 44 3d 30 78 25 30 32 78 25 30 32 78 00        VID=0x%02x%02x.

0000030d <__c.2250>:
     30d:	25 63 00                                            %c.

00000310 <__c.2235>:
     310:	25 63 00                                            %c.

00000313 <__c.2220>:
     313:	25 63 00                                            %c.

00000316 <__c.2205>:
     316:	0d 0a 00                                            ...

00000319 <__c.2203>:
     319:	30 78 25 30 32 58 20 00                             0x%02X .

00000321 <__c.2189>:
     321:	0d 0a 00                                            ...

00000324 <__c.2187>:
     324:	30 78 25 30 32 58 20 00                             0x%02X .

0000032c <__c.2075>:
     32c:	0d 0a 00                                            ...

0000032f <__c.2073>:
     32f:	20 2d 00                                             -.

00000332 <__c.2071>:
     332:	20 2b 00                                             +.

00000335 <__c.2068>:
     335:	3e 00                                               >.

00000337 <__c.2066>:
     337:	0d 0a 00                                            ...

0000033a <__c.2064>:
     33a:	45 00                                               E.

0000033c <__c.2062>:
     33c:	3e 00                                               >.

0000033e <__c.2060>:
     33e:	0d 0a 00                                            ...

00000341 <__c.2058>:
     341:	45 52 52 00                                         ERR.

00000345 <__c.2056>:
     345:	0d 0a 00                                            ...

00000348 <__c.2054>:
     348:	0d 0a 3e 00                                         ..>.

0000034c <__c.2051>:
     34c:	08 20 08 00                                         . ..

00000350 <__c.2046>:
     350:	25 63 00                                            %c.

00000353 <__c.1776>:
     353:	45 46 47 65 66 67 00                                EFGefg.

0000035a <__c.1770>:
     35a:	20 2b 2d 2e 30 31 32 33 34 35 36 37 38 39 68 00      +-.0123456789h.

0000036a <__c.1935>:
     36a:	63 64 69 6e 6f 70 73 75 78 58 00 00                 cdinopsuxX..

00000376 <__ctors_end>:
     376:	11 24       	eor	r1, r1
     378:	1f be       	out	0x3f, r1	; 63
     37a:	cf ef       	ldi	r28, 0xFF	; 255
     37c:	d4 e0       	ldi	r29, 0x04	; 4
     37e:	de bf       	out	0x3e, r29	; 62
     380:	cd bf       	out	0x3d, r28	; 61

00000382 <__do_copy_data>:
     382:	11 e0       	ldi	r17, 0x01	; 1
     384:	a0 e0       	ldi	r26, 0x00	; 0
     386:	b1 e0       	ldi	r27, 0x01	; 1
     388:	e6 e4       	ldi	r30, 0x46	; 70
     38a:	f3 e2       	ldi	r31, 0x23	; 35
     38c:	02 c0       	rjmp	.+4      	; 0x392 <.do_copy_data_start>

0000038e <.do_copy_data_loop>:
     38e:	05 90       	lpm	r0, Z+
     390:	0d 92       	st	X+, r0

00000392 <.do_copy_data_start>:
     392:	a8 3b       	cpi	r26, 0xB8	; 184
     394:	b1 07       	cpc	r27, r17
     396:	d9 f7       	brne	.-10     	; 0x38e <.do_copy_data_loop>

00000398 <__do_clear_bss>:
     398:	13 e0       	ldi	r17, 0x03	; 3
     39a:	a8 eb       	ldi	r26, 0xB8	; 184
     39c:	b1 e0       	ldi	r27, 0x01	; 1
     39e:	01 c0       	rjmp	.+2      	; 0x3a2 <.do_clear_bss_start>

000003a0 <.do_clear_bss_loop>:
     3a0:	1d 92       	st	X+, r1

000003a2 <.do_clear_bss_start>:
     3a2:	a1 36       	cpi	r26, 0x61	; 97
     3a4:	b1 07       	cpc	r27, r17
     3a6:	e1 f7       	brne	.-8      	; 0x3a0 <.do_clear_bss_loop>
     3a8:	0e 94 45 0b 	call	0x168a	; 0x168a <main>
     3ac:	0c 94 a1 11 	jmp	0x2342	; 0x2342 <_exit>

000003b0 <__bad_interrupt>:
     3b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003b4 <usbInit>:
     3b4:	e9 e6       	ldi	r30, 0x69	; 105
     3b6:	f0 e0       	ldi	r31, 0x00	; 0
     3b8:	80 81       	ld	r24, Z
     3ba:	82 60       	ori	r24, 0x02	; 2
     3bc:	80 83       	st	Z, r24
     3be:	e8 9a       	sbi	0x1d, 0	; 29
     3c0:	8b e4       	ldi	r24, 0x4B	; 75
     3c2:	80 93 12 02 	sts	0x0212, r24
     3c6:	8a e5       	ldi	r24, 0x5A	; 90
     3c8:	80 93 11 02 	sts	0x0211, r24
     3cc:	08 95       	ret

000003ce <usbSetInterrupt>:
     3ce:	1f 93       	push	r17
     3d0:	dc 01       	movw	r26, r24
     3d2:	16 2f       	mov	r17, r22
     3d4:	80 91 11 02 	lds	r24, 0x0211
     3d8:	84 ff       	sbrs	r24, 4
     3da:	07 c0       	rjmp	.+14     	; 0x3ea <usbSetInterrupt+0x1c>
     3dc:	80 91 12 02 	lds	r24, 0x0212
     3e0:	98 e8       	ldi	r25, 0x88	; 136
     3e2:	89 27       	eor	r24, r25
     3e4:	80 93 12 02 	sts	0x0212, r24
     3e8:	03 c0       	rjmp	.+6      	; 0x3f0 <usbSetInterrupt+0x22>
     3ea:	8a e5       	ldi	r24, 0x5A	; 90
     3ec:	80 93 11 02 	sts	0x0211, r24
     3f0:	91 2f       	mov	r25, r17
     3f2:	e3 e1       	ldi	r30, 0x13	; 19
     3f4:	f2 e0       	ldi	r31, 0x02	; 2
     3f6:	8d 91       	ld	r24, X+
     3f8:	81 93       	st	Z+, r24
     3fa:	91 50       	subi	r25, 0x01	; 1
     3fc:	e1 f7       	brne	.-8      	; 0x3f6 <usbSetInterrupt+0x28>
     3fe:	83 e1       	ldi	r24, 0x13	; 19
     400:	92 e0       	ldi	r25, 0x02	; 2
     402:	61 2f       	mov	r22, r17
     404:	0e 94 66 0b 	call	0x16cc	; 0x16cc <usbCrc16Append>
     408:	1c 5f       	subi	r17, 0xFC	; 252
     40a:	10 93 11 02 	sts	0x0211, r17
     40e:	1f 91       	pop	r17
     410:	08 95       	ret

00000412 <usbPoll>:
     412:	1f 93       	push	r17
     414:	cf 93       	push	r28
     416:	df 93       	push	r29
     418:	90 91 22 02 	lds	r25, 0x0222
     41c:	93 50       	subi	r25, 0x03	; 3
     41e:	97 fd       	sbrc	r25, 7
     420:	9c c0       	rjmp	.+312    	; 0x55a <__stack+0x5b>
     422:	20 91 1f 02 	lds	r18, 0x021F
     426:	80 91 1e 02 	lds	r24, 0x021E
     42a:	8d 32       	cpi	r24, 0x2D	; 45
     42c:	09 f0       	breq	.+2      	; 0x430 <usbPoll+0x1e>
     42e:	93 c0       	rjmp	.+294    	; 0x556 <__stack+0x57>
     430:	98 30       	cpi	r25, 0x08	; 8
     432:	09 f0       	breq	.+2      	; 0x436 <usbPoll+0x24>
     434:	90 c0       	rjmp	.+288    	; 0x556 <__stack+0x57>
     436:	cc e0       	ldi	r28, 0x0C	; 12
     438:	d0 e0       	ldi	r29, 0x00	; 0
     43a:	c2 1b       	sub	r28, r18
     43c:	d1 09       	sbc	r29, r1
     43e:	ca 5d       	subi	r28, 0xDA	; 218
     440:	dd 4f       	sbci	r29, 0xFD	; 253
     442:	83 ec       	ldi	r24, 0xC3	; 195
     444:	80 93 06 02 	sts	0x0206, r24
     448:	8a e5       	ldi	r24, 0x5A	; 90
     44a:	80 93 00 01 	sts	0x0100, r24
     44e:	10 92 b8 01 	sts	0x01B8, r1
     452:	88 81       	ld	r24, Y
     454:	80 76       	andi	r24, 0x60	; 96
     456:	29 f0       	breq	.+10     	; 0x462 <usbPoll+0x50>
     458:	ce 01       	movw	r24, r28
     45a:	0e 94 37 0a 	call	0x146e	; 0x146e <usbFunctionSetup>
     45e:	28 2f       	mov	r18, r24
     460:	68 c0       	rjmp	.+208    	; 0x532 <__stack+0x33>
     462:	9a 81       	ldd	r25, Y+2	; 0x02
     464:	10 92 0f 02 	sts	0x020F, r1
     468:	89 81       	ldd	r24, Y+1	; 0x01
     46a:	88 23       	and	r24, r24
     46c:	21 f4       	brne	.+8      	; 0x476 <usbPoll+0x64>
     46e:	10 92 10 02 	sts	0x0210, r1
     472:	22 e0       	ldi	r18, 0x02	; 2
     474:	57 c0       	rjmp	.+174    	; 0x524 <__stack+0x25>
     476:	85 30       	cpi	r24, 0x05	; 5
     478:	19 f4       	brne	.+6      	; 0x480 <usbPoll+0x6e>
     47a:	90 93 23 02 	sts	0x0223, r25
     47e:	51 c0       	rjmp	.+162    	; 0x522 <__stack+0x23>
     480:	86 30       	cpi	r24, 0x06	; 6
     482:	d9 f5       	brne	.+118    	; 0x4fa <usbPoll+0xe8>
     484:	8b 81       	ldd	r24, Y+3	; 0x03
     486:	81 30       	cpi	r24, 0x01	; 1
     488:	49 f4       	brne	.+18     	; 0x49c <usbPoll+0x8a>
     48a:	83 e8       	ldi	r24, 0x83	; 131
     48c:	91 e0       	ldi	r25, 0x01	; 1
     48e:	90 93 21 02 	sts	0x0221, r25
     492:	80 93 20 02 	sts	0x0220, r24
     496:	80 e0       	ldi	r24, 0x00	; 0
     498:	22 e1       	ldi	r18, 0x12	; 18
     49a:	2c c0       	rjmp	.+88     	; 0x4f4 <usbPoll+0xe2>
     49c:	82 30       	cpi	r24, 0x02	; 2
     49e:	11 f1       	breq	.+68     	; 0x4e4 <usbPoll+0xd2>
     4a0:	83 30       	cpi	r24, 0x03	; 3
     4a2:	99 f4       	brne	.+38     	; 0x4ca <usbPoll+0xb8>
     4a4:	8a 81       	ldd	r24, Y+2	; 0x02
     4a6:	88 23       	and	r24, r24
     4a8:	49 f4       	brne	.+18     	; 0x4bc <usbPoll+0xaa>
     4aa:	88 e6       	ldi	r24, 0x68	; 104
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	90 93 21 02 	sts	0x0221, r25
     4b2:	80 93 20 02 	sts	0x0220, r24
     4b6:	80 e4       	ldi	r24, 0x40	; 64
     4b8:	24 e0       	ldi	r18, 0x04	; 4
     4ba:	1c c0       	rjmp	.+56     	; 0x4f4 <usbPoll+0xe2>
     4bc:	81 30       	cpi	r24, 0x01	; 1
     4be:	91 f0       	breq	.+36     	; 0x4e4 <usbPoll+0xd2>
     4c0:	82 30       	cpi	r24, 0x02	; 2
     4c2:	81 f0       	breq	.+32     	; 0x4e4 <usbPoll+0xd2>
     4c4:	83 30       	cpi	r24, 0x03	; 3
     4c6:	a1 f4       	brne	.+40     	; 0x4f0 <usbPoll+0xde>
     4c8:	0d c0       	rjmp	.+26     	; 0x4e4 <usbPoll+0xd2>
     4ca:	81 32       	cpi	r24, 0x21	; 33
     4cc:	49 f4       	brne	.+18     	; 0x4e0 <usbPoll+0xce>
     4ce:	87 ea       	ldi	r24, 0xA7	; 167
     4d0:	91 e0       	ldi	r25, 0x01	; 1
     4d2:	90 93 21 02 	sts	0x0221, r25
     4d6:	80 93 20 02 	sts	0x0220, r24
     4da:	80 e4       	ldi	r24, 0x40	; 64
     4dc:	29 e0       	ldi	r18, 0x09	; 9
     4de:	0a c0       	rjmp	.+20     	; 0x4f4 <usbPoll+0xe2>
     4e0:	82 32       	cpi	r24, 0x22	; 34
     4e2:	31 f4       	brne	.+12     	; 0x4f0 <usbPoll+0xde>
     4e4:	ce 01       	movw	r24, r28
     4e6:	0e 94 e6 09 	call	0x13cc	; 0x13cc <usbFunctionDescriptor>
     4ea:	28 2f       	mov	r18, r24
     4ec:	80 e0       	ldi	r24, 0x00	; 0
     4ee:	02 c0       	rjmp	.+4      	; 0x4f4 <usbPoll+0xe2>
     4f0:	80 e4       	ldi	r24, 0x40	; 64
     4f2:	20 e0       	ldi	r18, 0x00	; 0
     4f4:	80 93 b8 01 	sts	0x01B8, r24
     4f8:	1c c0       	rjmp	.+56     	; 0x532 <__stack+0x33>
     4fa:	88 30       	cpi	r24, 0x08	; 8
     4fc:	21 f4       	brne	.+8      	; 0x506 <__stack+0x7>
     4fe:	21 e0       	ldi	r18, 0x01	; 1
     500:	85 e2       	ldi	r24, 0x25	; 37
     502:	92 e0       	ldi	r25, 0x02	; 2
     504:	11 c0       	rjmp	.+34     	; 0x528 <__stack+0x29>
     506:	89 30       	cpi	r24, 0x09	; 9
     508:	19 f4       	brne	.+6      	; 0x510 <__stack+0x11>
     50a:	90 93 25 02 	sts	0x0225, r25
     50e:	09 c0       	rjmp	.+18     	; 0x522 <__stack+0x23>
     510:	8a 30       	cpi	r24, 0x0A	; 10
     512:	11 f4       	brne	.+4      	; 0x518 <__stack+0x19>
     514:	21 e0       	ldi	r18, 0x01	; 1
     516:	06 c0       	rjmp	.+12     	; 0x524 <__stack+0x25>
     518:	8b 30       	cpi	r24, 0x0B	; 11
     51a:	19 f4       	brne	.+6      	; 0x522 <__stack+0x23>
     51c:	8b e4       	ldi	r24, 0x4B	; 75
     51e:	80 93 12 02 	sts	0x0212, r24
     522:	20 e0       	ldi	r18, 0x00	; 0
     524:	8f e0       	ldi	r24, 0x0F	; 15
     526:	92 e0       	ldi	r25, 0x02	; 2
     528:	90 93 21 02 	sts	0x0221, r25
     52c:	80 93 20 02 	sts	0x0220, r24
     530:	09 c0       	rjmp	.+18     	; 0x544 <__stack+0x45>
     532:	2f 3f       	cpi	r18, 0xFF	; 255
     534:	39 f4       	brne	.+14     	; 0x544 <__stack+0x45>
     536:	88 81       	ld	r24, Y
     538:	87 fd       	sbrc	r24, 7
     53a:	2e 81       	ldd	r18, Y+6	; 0x06
     53c:	80 e8       	ldi	r24, 0x80	; 128
     53e:	80 93 b8 01 	sts	0x01B8, r24
     542:	06 c0       	rjmp	.+12     	; 0x550 <__stack+0x51>
     544:	8f 81       	ldd	r24, Y+7	; 0x07
     546:	88 23       	and	r24, r24
     548:	19 f4       	brne	.+6      	; 0x550 <__stack+0x51>
     54a:	8e 81       	ldd	r24, Y+6	; 0x06
     54c:	82 17       	cp	r24, r18
     54e:	08 f0       	brcs	.+2      	; 0x552 <__stack+0x53>
     550:	82 2f       	mov	r24, r18
     552:	80 93 01 01 	sts	0x0101, r24
     556:	10 92 22 02 	sts	0x0222, r1
     55a:	80 91 00 01 	lds	r24, 0x0100
     55e:	84 ff       	sbrs	r24, 4
     560:	5a c0       	rjmp	.+180    	; 0x616 <__stack+0x117>
     562:	80 91 01 01 	lds	r24, 0x0101
     566:	8f 3f       	cpi	r24, 0xFF	; 255
     568:	09 f4       	brne	.+2      	; 0x56c <__stack+0x6d>
     56a:	55 c0       	rjmp	.+170    	; 0x616 <__stack+0x117>
     56c:	18 2f       	mov	r17, r24
     56e:	89 30       	cpi	r24, 0x09	; 9
     570:	08 f0       	brcs	.+2      	; 0x574 <__stack+0x75>
     572:	18 e0       	ldi	r17, 0x08	; 8
     574:	81 1b       	sub	r24, r17
     576:	80 93 01 01 	sts	0x0101, r24
     57a:	80 91 06 02 	lds	r24, 0x0206
     57e:	98 e8       	ldi	r25, 0x88	; 136
     580:	89 27       	eor	r24, r25
     582:	80 93 06 02 	sts	0x0206, r24
     586:	11 23       	and	r17, r17
     588:	99 f1       	breq	.+102    	; 0x5f0 <__stack+0xf1>
     58a:	80 91 b8 01 	lds	r24, 0x01B8
     58e:	87 ff       	sbrs	r24, 7
     590:	09 c0       	rjmp	.+18     	; 0x5a4 <__stack+0xa5>
     592:	87 e0       	ldi	r24, 0x07	; 7
     594:	92 e0       	ldi	r25, 0x02	; 2
     596:	61 2f       	mov	r22, r17
     598:	0e 94 a8 09 	call	0x1350	; 0x1350 <usbFunctionRead>
     59c:	18 2f       	mov	r17, r24
     59e:	89 30       	cpi	r24, 0x09	; 9
     5a0:	a0 f5       	brcc	.+104    	; 0x60a <__stack+0x10b>
     5a2:	26 c0       	rjmp	.+76     	; 0x5f0 <__stack+0xf1>
     5a4:	20 91 20 02 	lds	r18, 0x0220
     5a8:	30 91 21 02 	lds	r19, 0x0221
     5ac:	86 ff       	sbrs	r24, 6
     5ae:	0d c0       	rjmp	.+26     	; 0x5ca <__stack+0xcb>
     5b0:	a7 e0       	ldi	r26, 0x07	; 7
     5b2:	b2 e0       	ldi	r27, 0x02	; 2
     5b4:	80 e0       	ldi	r24, 0x00	; 0
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	f9 01       	movw	r30, r18
     5ba:	e8 0f       	add	r30, r24
     5bc:	f9 1f       	adc	r31, r25
     5be:	e4 91       	lpm	r30, Z+
     5c0:	ed 93       	st	X+, r30
     5c2:	01 96       	adiw	r24, 0x01	; 1
     5c4:	18 17       	cp	r17, r24
     5c6:	c1 f7       	brne	.-16     	; 0x5b8 <__stack+0xb9>
     5c8:	08 c0       	rjmp	.+16     	; 0x5da <__stack+0xdb>
     5ca:	91 2f       	mov	r25, r17
     5cc:	d9 01       	movw	r26, r18
     5ce:	e7 e0       	ldi	r30, 0x07	; 7
     5d0:	f2 e0       	ldi	r31, 0x02	; 2
     5d2:	8d 91       	ld	r24, X+
     5d4:	81 93       	st	Z+, r24
     5d6:	91 50       	subi	r25, 0x01	; 1
     5d8:	e1 f7       	brne	.-8      	; 0x5d2 <__stack+0xd3>
     5da:	11 50       	subi	r17, 0x01	; 1
     5dc:	81 2f       	mov	r24, r17
     5de:	90 e0       	ldi	r25, 0x00	; 0
     5e0:	1f 5f       	subi	r17, 0xFF	; 255
     5e2:	01 96       	adiw	r24, 0x01	; 1
     5e4:	82 0f       	add	r24, r18
     5e6:	93 1f       	adc	r25, r19
     5e8:	90 93 21 02 	sts	0x0221, r25
     5ec:	80 93 20 02 	sts	0x0220, r24
     5f0:	87 e0       	ldi	r24, 0x07	; 7
     5f2:	92 e0       	ldi	r25, 0x02	; 2
     5f4:	61 2f       	mov	r22, r17
     5f6:	0e 94 66 0b 	call	0x16cc	; 0x16cc <usbCrc16Append>
     5fa:	61 2f       	mov	r22, r17
     5fc:	6c 5f       	subi	r22, 0xFC	; 252
     5fe:	6c 30       	cpi	r22, 0x0C	; 12
     600:	41 f0       	breq	.+16     	; 0x612 <__stack+0x113>
     602:	8f ef       	ldi	r24, 0xFF	; 255
     604:	80 93 01 01 	sts	0x0101, r24
     608:	04 c0       	rjmp	.+8      	; 0x612 <__stack+0x113>
     60a:	8f ef       	ldi	r24, 0xFF	; 255
     60c:	80 93 01 01 	sts	0x0101, r24
     610:	6e e1       	ldi	r22, 0x1E	; 30
     612:	60 93 00 01 	sts	0x0100, r22
     616:	94 e1       	ldi	r25, 0x14	; 20
     618:	89 b1       	in	r24, 0x09	; 9
     61a:	8c 70       	andi	r24, 0x0C	; 12
     61c:	31 f4       	brne	.+12     	; 0x62a <__stack+0x12b>
     61e:	91 50       	subi	r25, 0x01	; 1
     620:	d9 f7       	brne	.-10     	; 0x618 <__stack+0x119>
     622:	10 92 23 02 	sts	0x0223, r1
     626:	10 92 1d 02 	sts	0x021D, r1
     62a:	df 91       	pop	r29
     62c:	cf 91       	pop	r28
     62e:	1f 91       	pop	r17
     630:	08 95       	ret

00000632 <eep_deleteUSBConfigBits>:
     632:	f9 99       	sbic	0x1f, 1	; 31
     634:	fe cf       	rjmp	.-4      	; 0x632 <eep_deleteUSBConfigBits>
     636:	80 e0       	ldi	r24, 0x00	; 0
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	60 e0       	ldi	r22, 0x00	; 0
     63c:	0e 94 90 11 	call	0x2320	; 0x2320 <__eewr_byte_m168>
     640:	80 e0       	ldi	r24, 0x00	; 0
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	0e 94 7e 11 	call	0x22fc	; 0x22fc <__eerd_byte_m168>
     648:	00 d0       	rcall	.+0      	; 0x64a <eep_deleteUSBConfigBits+0x18>
     64a:	00 d0       	rcall	.+0      	; 0x64c <eep_deleteUSBConfigBits+0x1a>
     64c:	ed b7       	in	r30, 0x3d	; 61
     64e:	fe b7       	in	r31, 0x3e	; 62
     650:	31 96       	adiw	r30, 0x01	; 1
     652:	2c e6       	ldi	r18, 0x6C	; 108
     654:	30 e0       	ldi	r19, 0x00	; 0
     656:	ad b7       	in	r26, 0x3d	; 61
     658:	be b7       	in	r27, 0x3e	; 62
     65a:	12 96       	adiw	r26, 0x02	; 2
     65c:	3c 93       	st	X, r19
     65e:	2e 93       	st	-X, r18
     660:	11 97       	sbiw	r26, 0x01	; 1
     662:	82 83       	std	Z+2, r24	; 0x02
     664:	13 82       	std	Z+3, r1	; 0x03
     666:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
     66a:	0f 90       	pop	r0
     66c:	0f 90       	pop	r0
     66e:	0f 90       	pop	r0
     670:	0f 90       	pop	r0
     672:	08 95       	ret

00000674 <eep_toggleUSBConfigBit>:
     674:	1f 93       	push	r17
     676:	18 2f       	mov	r17, r24
     678:	f9 99       	sbic	0x1f, 1	; 31
     67a:	fe cf       	rjmp	.-4      	; 0x678 <eep_toggleUSBConfigBit+0x4>
     67c:	80 e0       	ldi	r24, 0x00	; 0
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	0e 94 7e 11 	call	0x22fc	; 0x22fc <__eerd_byte_m168>
     684:	21 e0       	ldi	r18, 0x01	; 1
     686:	30 e0       	ldi	r19, 0x00	; 0
     688:	02 c0       	rjmp	.+4      	; 0x68e <eep_toggleUSBConfigBit+0x1a>
     68a:	22 0f       	add	r18, r18
     68c:	33 1f       	adc	r19, r19
     68e:	1a 95       	dec	r17
     690:	e2 f7       	brpl	.-8      	; 0x68a <eep_toggleUSBConfigBit+0x16>
     692:	18 2f       	mov	r17, r24
     694:	12 27       	eor	r17, r18
     696:	f9 99       	sbic	0x1f, 1	; 31
     698:	fe cf       	rjmp	.-4      	; 0x696 <eep_toggleUSBConfigBit+0x22>
     69a:	80 e0       	ldi	r24, 0x00	; 0
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	61 2f       	mov	r22, r17
     6a0:	0e 94 90 11 	call	0x2320	; 0x2320 <__eewr_byte_m168>
     6a4:	00 d0       	rcall	.+0      	; 0x6a6 <eep_toggleUSBConfigBit+0x32>
     6a6:	00 d0       	rcall	.+0      	; 0x6a8 <eep_toggleUSBConfigBit+0x34>
     6a8:	ed b7       	in	r30, 0x3d	; 61
     6aa:	fe b7       	in	r31, 0x3e	; 62
     6ac:	31 96       	adiw	r30, 0x01	; 1
     6ae:	8a e7       	ldi	r24, 0x7A	; 122
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	ad b7       	in	r26, 0x3d	; 61
     6b4:	be b7       	in	r27, 0x3e	; 62
     6b6:	12 96       	adiw	r26, 0x02	; 2
     6b8:	9c 93       	st	X, r25
     6ba:	8e 93       	st	-X, r24
     6bc:	11 97       	sbiw	r26, 0x01	; 1
     6be:	12 83       	std	Z+2, r17	; 0x02
     6c0:	13 82       	std	Z+3, r1	; 0x03
     6c2:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
     6c6:	0f 90       	pop	r0
     6c8:	0f 90       	pop	r0
     6ca:	0f 90       	pop	r0
     6cc:	0f 90       	pop	r0
     6ce:	1f 91       	pop	r17
     6d0:	08 95       	ret

000006d2 <eep_saveUSBCfgDeviceID>:
     6d2:	df 93       	push	r29
     6d4:	cf 93       	push	r28
     6d6:	00 d0       	rcall	.+0      	; 0x6d8 <eep_saveUSBCfgDeviceID+0x6>
     6d8:	cd b7       	in	r28, 0x3d	; 61
     6da:	de b7       	in	r29, 0x3e	; 62
     6dc:	90 91 8d 01 	lds	r25, 0x018D
     6e0:	80 91 8e 01 	lds	r24, 0x018E
     6e4:	f9 99       	sbic	0x1f, 1	; 31
     6e6:	fe cf       	rjmp	.-4      	; 0x6e4 <eep_saveUSBCfgDeviceID+0x12>
     6e8:	8a 83       	std	Y+2, r24	; 0x02
     6ea:	99 83       	std	Y+1, r25	; 0x01
     6ec:	ce 01       	movw	r24, r28
     6ee:	01 96       	adiw	r24, 0x01	; 1
     6f0:	60 ee       	ldi	r22, 0xE0	; 224
     6f2:	70 e0       	ldi	r23, 0x00	; 0
     6f4:	42 e0       	ldi	r20, 0x02	; 2
     6f6:	50 e0       	ldi	r21, 0x00	; 0
     6f8:	0e 94 86 11 	call	0x230c	; 0x230c <__eewr_block_m168>
     6fc:	22 96       	adiw	r28, 0x02	; 2
     6fe:	cd bf       	out	0x3d, r28	; 61
     700:	cf 91       	pop	r28
     702:	df 91       	pop	r29
     704:	08 95       	ret

00000706 <eep_saveUSBCfgVendorID>:
     706:	df 93       	push	r29
     708:	cf 93       	push	r28
     70a:	00 d0       	rcall	.+0      	; 0x70c <eep_saveUSBCfgVendorID+0x6>
     70c:	cd b7       	in	r28, 0x3d	; 61
     70e:	de b7       	in	r29, 0x3e	; 62
     710:	90 91 8b 01 	lds	r25, 0x018B
     714:	80 91 8c 01 	lds	r24, 0x018C
     718:	f9 99       	sbic	0x1f, 1	; 31
     71a:	fe cf       	rjmp	.-4      	; 0x718 <eep_saveUSBCfgVendorID+0x12>
     71c:	8a 83       	std	Y+2, r24	; 0x02
     71e:	99 83       	std	Y+1, r25	; 0x01
     720:	ce 01       	movw	r24, r28
     722:	01 96       	adiw	r24, 0x01	; 1
     724:	6e ed       	ldi	r22, 0xDE	; 222
     726:	70 e0       	ldi	r23, 0x00	; 0
     728:	42 e0       	ldi	r20, 0x02	; 2
     72a:	50 e0       	ldi	r21, 0x00	; 0
     72c:	0e 94 86 11 	call	0x230c	; 0x230c <__eewr_block_m168>
     730:	22 96       	adiw	r28, 0x02	; 2
     732:	cd bf       	out	0x3d, r28	; 61
     734:	cf 91       	pop	r28
     736:	df 91       	pop	r29
     738:	08 95       	ret

0000073a <eep_saveUSBDescriptorStringSerialNumber>:
     73a:	f9 99       	sbic	0x1f, 1	; 31
     73c:	fe cf       	rjmp	.-4      	; 0x73a <eep_saveUSBDescriptorStringSerialNumber>
     73e:	8d e5       	ldi	r24, 0x5D	; 93
     740:	92 e0       	ldi	r25, 0x02	; 2
     742:	66 eb       	ldi	r22, 0xB6	; 182
     744:	70 e0       	ldi	r23, 0x00	; 0
     746:	48 e2       	ldi	r20, 0x28	; 40
     748:	50 e0       	ldi	r21, 0x00	; 0
     74a:	0e 94 86 11 	call	0x230c	; 0x230c <__eewr_block_m168>
     74e:	08 95       	ret

00000750 <eep_saveUSBDescriptorStringDevice>:
     750:	f9 99       	sbic	0x1f, 1	; 31
     752:	fe cf       	rjmp	.-4      	; 0x750 <eep_saveUSBDescriptorStringDevice>
     754:	81 e3       	ldi	r24, 0x31	; 49
     756:	93 e0       	ldi	r25, 0x03	; 3
     758:	6e e8       	ldi	r22, 0x8E	; 142
     75a:	70 e0       	ldi	r23, 0x00	; 0
     75c:	48 e2       	ldi	r20, 0x28	; 40
     75e:	50 e0       	ldi	r21, 0x00	; 0
     760:	0e 94 86 11 	call	0x230c	; 0x230c <__eewr_block_m168>
     764:	08 95       	ret

00000766 <eep_saveUSBDescriptorStringVendor>:
     766:	f9 99       	sbic	0x1f, 1	; 31
     768:	fe cf       	rjmp	.-4      	; 0x766 <eep_saveUSBDescriptorStringVendor>
     76a:	87 e8       	ldi	r24, 0x87	; 135
     76c:	92 e0       	ldi	r25, 0x02	; 2
     76e:	66 e6       	ldi	r22, 0x66	; 102
     770:	70 e0       	ldi	r23, 0x00	; 0
     772:	48 e2       	ldi	r20, 0x28	; 40
     774:	50 e0       	ldi	r21, 0x00	; 0
     776:	0e 94 86 11 	call	0x230c	; 0x230c <__eewr_block_m168>
     77a:	08 95       	ret

0000077c <eep_saveUSBHidReportData>:
     77c:	f9 99       	sbic	0x1f, 1	; 31
     77e:	fe cf       	rjmp	.-4      	; 0x77c <eep_saveUSBHidReportData>
     780:	82 ee       	ldi	r24, 0xE2	; 226
     782:	90 e0       	ldi	r25, 0x00	; 0
     784:	60 91 1c 01 	lds	r22, 0x011C
     788:	0e 94 90 11 	call	0x2320	; 0x2320 <__eewr_byte_m168>
     78c:	f9 99       	sbic	0x1f, 1	; 31
     78e:	fe cf       	rjmp	.-4      	; 0x78c <eep_saveUSBHidReportData+0x10>
     790:	81 eb       	ldi	r24, 0xB1	; 177
     792:	92 e0       	ldi	r25, 0x02	; 2
     794:	63 ee       	ldi	r22, 0xE3	; 227
     796:	70 e0       	ldi	r23, 0x00	; 0
     798:	40 e8       	ldi	r20, 0x80	; 128
     79a:	50 e0       	ldi	r21, 0x00	; 0
     79c:	0e 94 86 11 	call	0x230c	; 0x230c <__eewr_block_m168>
     7a0:	08 95       	ret

000007a2 <eep_saveUSBHidReportDescriptor>:
     7a2:	f9 99       	sbic	0x1f, 1	; 31
     7a4:	fe cf       	rjmp	.-4      	; 0x7a2 <eep_saveUSBHidReportDescriptor>
     7a6:	81 e0       	ldi	r24, 0x01	; 1
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	60 91 1e 01 	lds	r22, 0x011E
     7ae:	0e 94 90 11 	call	0x2320	; 0x2320 <__eewr_byte_m168>
     7b2:	f9 99       	sbic	0x1f, 1	; 31
     7b4:	fe cf       	rjmp	.-4      	; 0x7b2 <eep_saveUSBHidReportDescriptor+0x10>
     7b6:	8f e1       	ldi	r24, 0x1F	; 31
     7b8:	91 e0       	ldi	r25, 0x01	; 1
     7ba:	62 e0       	ldi	r22, 0x02	; 2
     7bc:	70 e0       	ldi	r23, 0x00	; 0
     7be:	44 e6       	ldi	r20, 0x64	; 100
     7c0:	50 e0       	ldi	r21, 0x00	; 0
     7c2:	0e 94 86 11 	call	0x230c	; 0x230c <__eewr_block_m168>
     7c6:	08 95       	ret

000007c8 <eep_readUSBCfgDeviceID>:
     7c8:	df 93       	push	r29
     7ca:	cf 93       	push	r28
     7cc:	00 d0       	rcall	.+0      	; 0x7ce <eep_readUSBCfgDeviceID+0x6>
     7ce:	cd b7       	in	r28, 0x3d	; 61
     7d0:	de b7       	in	r29, 0x3e	; 62
     7d2:	f9 99       	sbic	0x1f, 1	; 31
     7d4:	fe cf       	rjmp	.-4      	; 0x7d2 <eep_readUSBCfgDeviceID+0xa>
     7d6:	ce 01       	movw	r24, r28
     7d8:	01 96       	adiw	r24, 0x01	; 1
     7da:	60 ee       	ldi	r22, 0xE0	; 224
     7dc:	70 e0       	ldi	r23, 0x00	; 0
     7de:	42 e0       	ldi	r20, 0x02	; 2
     7e0:	50 e0       	ldi	r21, 0x00	; 0
     7e2:	0e 94 6e 11 	call	0x22dc	; 0x22dc <__eerd_block_m168>
     7e6:	89 81       	ldd	r24, Y+1	; 0x01
     7e8:	80 93 8d 01 	sts	0x018D, r24
     7ec:	8a 81       	ldd	r24, Y+2	; 0x02
     7ee:	80 93 8e 01 	sts	0x018E, r24
     7f2:	22 96       	adiw	r28, 0x02	; 2
     7f4:	cd bf       	out	0x3d, r28	; 61
     7f6:	cf 91       	pop	r28
     7f8:	df 91       	pop	r29
     7fa:	08 95       	ret

000007fc <eep_readUSBCfgVendorID>:
     7fc:	df 93       	push	r29
     7fe:	cf 93       	push	r28
     800:	00 d0       	rcall	.+0      	; 0x802 <eep_readUSBCfgVendorID+0x6>
     802:	cd b7       	in	r28, 0x3d	; 61
     804:	de b7       	in	r29, 0x3e	; 62
     806:	f9 99       	sbic	0x1f, 1	; 31
     808:	fe cf       	rjmp	.-4      	; 0x806 <eep_readUSBCfgVendorID+0xa>
     80a:	ce 01       	movw	r24, r28
     80c:	01 96       	adiw	r24, 0x01	; 1
     80e:	6e ed       	ldi	r22, 0xDE	; 222
     810:	70 e0       	ldi	r23, 0x00	; 0
     812:	42 e0       	ldi	r20, 0x02	; 2
     814:	50 e0       	ldi	r21, 0x00	; 0
     816:	0e 94 6e 11 	call	0x22dc	; 0x22dc <__eerd_block_m168>
     81a:	89 81       	ldd	r24, Y+1	; 0x01
     81c:	80 93 8b 01 	sts	0x018B, r24
     820:	8a 81       	ldd	r24, Y+2	; 0x02
     822:	80 93 8c 01 	sts	0x018C, r24
     826:	22 96       	adiw	r28, 0x02	; 2
     828:	cd bf       	out	0x3d, r28	; 61
     82a:	cf 91       	pop	r28
     82c:	df 91       	pop	r29
     82e:	08 95       	ret

00000830 <eep_readUSBDescriptorStringSerialNumber>:
     830:	f9 99       	sbic	0x1f, 1	; 31
     832:	fe cf       	rjmp	.-4      	; 0x830 <eep_readUSBDescriptorStringSerialNumber>
     834:	8d e5       	ldi	r24, 0x5D	; 93
     836:	92 e0       	ldi	r25, 0x02	; 2
     838:	66 eb       	ldi	r22, 0xB6	; 182
     83a:	70 e0       	ldi	r23, 0x00	; 0
     83c:	48 e2       	ldi	r20, 0x28	; 40
     83e:	50 e0       	ldi	r21, 0x00	; 0
     840:	0e 94 6e 11 	call	0x22dc	; 0x22dc <__eerd_block_m168>
     844:	08 95       	ret

00000846 <eep_readUSBDescriptorStringDevice>:
     846:	f9 99       	sbic	0x1f, 1	; 31
     848:	fe cf       	rjmp	.-4      	; 0x846 <eep_readUSBDescriptorStringDevice>
     84a:	81 e3       	ldi	r24, 0x31	; 49
     84c:	93 e0       	ldi	r25, 0x03	; 3
     84e:	6e e8       	ldi	r22, 0x8E	; 142
     850:	70 e0       	ldi	r23, 0x00	; 0
     852:	48 e2       	ldi	r20, 0x28	; 40
     854:	50 e0       	ldi	r21, 0x00	; 0
     856:	0e 94 6e 11 	call	0x22dc	; 0x22dc <__eerd_block_m168>
     85a:	08 95       	ret

0000085c <eep_readUSBDescriptorStringVendor>:
     85c:	f9 99       	sbic	0x1f, 1	; 31
     85e:	fe cf       	rjmp	.-4      	; 0x85c <eep_readUSBDescriptorStringVendor>
     860:	87 e8       	ldi	r24, 0x87	; 135
     862:	92 e0       	ldi	r25, 0x02	; 2
     864:	66 e6       	ldi	r22, 0x66	; 102
     866:	70 e0       	ldi	r23, 0x00	; 0
     868:	48 e2       	ldi	r20, 0x28	; 40
     86a:	50 e0       	ldi	r21, 0x00	; 0
     86c:	0e 94 6e 11 	call	0x22dc	; 0x22dc <__eerd_block_m168>
     870:	08 95       	ret

00000872 <eep_readUSBHidReportData>:
     872:	f9 99       	sbic	0x1f, 1	; 31
     874:	fe cf       	rjmp	.-4      	; 0x872 <eep_readUSBHidReportData>
     876:	82 ee       	ldi	r24, 0xE2	; 226
     878:	90 e0       	ldi	r25, 0x00	; 0
     87a:	0e 94 7e 11 	call	0x22fc	; 0x22fc <__eerd_byte_m168>
     87e:	80 93 1c 01 	sts	0x011C, r24
     882:	f9 99       	sbic	0x1f, 1	; 31
     884:	fe cf       	rjmp	.-4      	; 0x882 <eep_readUSBHidReportData+0x10>
     886:	81 eb       	ldi	r24, 0xB1	; 177
     888:	92 e0       	ldi	r25, 0x02	; 2
     88a:	63 ee       	ldi	r22, 0xE3	; 227
     88c:	70 e0       	ldi	r23, 0x00	; 0
     88e:	40 e8       	ldi	r20, 0x80	; 128
     890:	50 e0       	ldi	r21, 0x00	; 0
     892:	0e 94 6e 11 	call	0x22dc	; 0x22dc <__eerd_block_m168>
     896:	08 95       	ret

00000898 <eep_readUSBHidReportDescriptor>:
     898:	f9 99       	sbic	0x1f, 1	; 31
     89a:	fe cf       	rjmp	.-4      	; 0x898 <eep_readUSBHidReportDescriptor>
     89c:	81 e0       	ldi	r24, 0x01	; 1
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	0e 94 7e 11 	call	0x22fc	; 0x22fc <__eerd_byte_m168>
     8a4:	80 93 1e 01 	sts	0x011E, r24
     8a8:	f9 99       	sbic	0x1f, 1	; 31
     8aa:	fe cf       	rjmp	.-4      	; 0x8a8 <eep_readUSBHidReportDescriptor+0x10>
     8ac:	8f e1       	ldi	r24, 0x1F	; 31
     8ae:	91 e0       	ldi	r25, 0x01	; 1
     8b0:	62 e0       	ldi	r22, 0x02	; 2
     8b2:	70 e0       	ldi	r23, 0x00	; 0
     8b4:	44 e6       	ldi	r20, 0x64	; 100
     8b6:	50 e0       	ldi	r21, 0x00	; 0
     8b8:	0e 94 6e 11 	call	0x22dc	; 0x22dc <__eerd_block_m168>
     8bc:	80 91 1e 01 	lds	r24, 0x011E
     8c0:	80 93 ae 01 	sts	0x01AE, r24
     8c4:	08 95       	ret

000008c6 <__vector_18>:
     8c6:	1f 92       	push	r1
     8c8:	0f 92       	push	r0
     8ca:	0f b6       	in	r0, 0x3f	; 63
     8cc:	0f 92       	push	r0
     8ce:	11 24       	eor	r1, r1
     8d0:	2f 93       	push	r18
     8d2:	8f 93       	push	r24
     8d4:	9f 93       	push	r25
     8d6:	ef 93       	push	r30
     8d8:	ff 93       	push	r31
     8da:	90 91 c0 00 	lds	r25, 0x00C0
     8de:	20 91 c6 00 	lds	r18, 0x00C6
     8e2:	e0 91 fb 01 	lds	r30, 0x01FB
     8e6:	ef 5f       	subi	r30, 0xFF	; 255
     8e8:	ef 71       	andi	r30, 0x1F	; 31
     8ea:	80 91 fc 01 	lds	r24, 0x01FC
     8ee:	e8 17       	cp	r30, r24
     8f0:	11 f4       	brne	.+4      	; 0x8f6 <__vector_18+0x30>
     8f2:	82 e0       	ldi	r24, 0x02	; 2
     8f4:	08 c0       	rjmp	.+16     	; 0x906 <__vector_18+0x40>
     8f6:	89 2f       	mov	r24, r25
     8f8:	88 71       	andi	r24, 0x18	; 24
     8fa:	e0 93 fb 01 	sts	0x01FB, r30
     8fe:	f0 e0       	ldi	r31, 0x00	; 0
     900:	e7 52       	subi	r30, 0x27	; 39
     902:	fe 4f       	sbci	r31, 0xFE	; 254
     904:	20 83       	st	Z, r18
     906:	80 93 fd 01 	sts	0x01FD, r24
     90a:	ff 91       	pop	r31
     90c:	ef 91       	pop	r30
     90e:	9f 91       	pop	r25
     910:	8f 91       	pop	r24
     912:	2f 91       	pop	r18
     914:	0f 90       	pop	r0
     916:	0f be       	out	0x3f, r0	; 63
     918:	0f 90       	pop	r0
     91a:	1f 90       	pop	r1
     91c:	18 95       	reti

0000091e <__vector_19>:
     91e:	1f 92       	push	r1
     920:	0f 92       	push	r0
     922:	0f b6       	in	r0, 0x3f	; 63
     924:	0f 92       	push	r0
     926:	11 24       	eor	r1, r1
     928:	8f 93       	push	r24
     92a:	9f 93       	push	r25
     92c:	ef 93       	push	r30
     92e:	ff 93       	push	r31
     930:	90 91 f9 01 	lds	r25, 0x01F9
     934:	80 91 fa 01 	lds	r24, 0x01FA
     938:	98 17       	cp	r25, r24
     93a:	69 f0       	breq	.+26     	; 0x956 <__vector_19+0x38>
     93c:	e0 91 fa 01 	lds	r30, 0x01FA
     940:	ef 5f       	subi	r30, 0xFF	; 255
     942:	ef 71       	andi	r30, 0x1F	; 31
     944:	e0 93 fa 01 	sts	0x01FA, r30
     948:	f0 e0       	ldi	r31, 0x00	; 0
     94a:	e7 54       	subi	r30, 0x47	; 71
     94c:	fe 4f       	sbci	r31, 0xFE	; 254
     94e:	80 81       	ld	r24, Z
     950:	80 93 c6 00 	sts	0x00C6, r24
     954:	05 c0       	rjmp	.+10     	; 0x960 <__vector_19+0x42>
     956:	80 91 c1 00 	lds	r24, 0x00C1
     95a:	8f 7d       	andi	r24, 0xDF	; 223
     95c:	80 93 c1 00 	sts	0x00C1, r24
     960:	ff 91       	pop	r31
     962:	ef 91       	pop	r30
     964:	9f 91       	pop	r25
     966:	8f 91       	pop	r24
     968:	0f 90       	pop	r0
     96a:	0f be       	out	0x3f, r0	; 63
     96c:	0f 90       	pop	r0
     96e:	1f 90       	pop	r1
     970:	18 95       	reti

00000972 <uart_init>:
     972:	9c 01       	movw	r18, r24
     974:	10 92 f9 01 	sts	0x01F9, r1
     978:	10 92 fa 01 	sts	0x01FA, r1
     97c:	10 92 fb 01 	sts	0x01FB, r1
     980:	10 92 fc 01 	sts	0x01FC, r1
     984:	97 ff       	sbrs	r25, 7
     986:	04 c0       	rjmp	.+8      	; 0x990 <uart_init+0x1e>
     988:	82 e0       	ldi	r24, 0x02	; 2
     98a:	80 93 c0 00 	sts	0x00C0, r24
     98e:	3f 77       	andi	r19, 0x7F	; 127
     990:	30 93 c5 00 	sts	0x00C5, r19
     994:	20 93 c4 00 	sts	0x00C4, r18
     998:	88 e9       	ldi	r24, 0x98	; 152
     99a:	80 93 c1 00 	sts	0x00C1, r24
     99e:	86 e0       	ldi	r24, 0x06	; 6
     9a0:	80 93 c2 00 	sts	0x00C2, r24
     9a4:	08 95       	ret

000009a6 <uart_getc>:
     9a6:	90 91 fb 01 	lds	r25, 0x01FB
     9aa:	80 91 fc 01 	lds	r24, 0x01FC
     9ae:	98 17       	cp	r25, r24
     9b0:	19 f4       	brne	.+6      	; 0x9b8 <uart_getc+0x12>
     9b2:	20 e0       	ldi	r18, 0x00	; 0
     9b4:	31 e0       	ldi	r19, 0x01	; 1
     9b6:	12 c0       	rjmp	.+36     	; 0x9dc <uart_getc+0x36>
     9b8:	e0 91 fc 01 	lds	r30, 0x01FC
     9bc:	ef 5f       	subi	r30, 0xFF	; 255
     9be:	ef 71       	andi	r30, 0x1F	; 31
     9c0:	e0 93 fc 01 	sts	0x01FC, r30
     9c4:	f0 e0       	ldi	r31, 0x00	; 0
     9c6:	e7 52       	subi	r30, 0x27	; 39
     9c8:	fe 4f       	sbci	r31, 0xFE	; 254
     9ca:	30 81       	ld	r19, Z
     9cc:	20 91 fd 01 	lds	r18, 0x01FD
     9d0:	92 2f       	mov	r25, r18
     9d2:	80 e0       	ldi	r24, 0x00	; 0
     9d4:	ac 01       	movw	r20, r24
     9d6:	43 0f       	add	r20, r19
     9d8:	51 1d       	adc	r21, r1
     9da:	9a 01       	movw	r18, r20
     9dc:	c9 01       	movw	r24, r18
     9de:	08 95       	ret

000009e0 <uart_putc>:
     9e0:	28 2f       	mov	r18, r24
     9e2:	90 91 f9 01 	lds	r25, 0x01F9
     9e6:	9f 5f       	subi	r25, 0xFF	; 255
     9e8:	9f 71       	andi	r25, 0x1F	; 31
     9ea:	80 91 fa 01 	lds	r24, 0x01FA
     9ee:	98 17       	cp	r25, r24
     9f0:	e1 f3       	breq	.-8      	; 0x9ea <uart_putc+0xa>
     9f2:	e9 2f       	mov	r30, r25
     9f4:	f0 e0       	ldi	r31, 0x00	; 0
     9f6:	e7 54       	subi	r30, 0x47	; 71
     9f8:	fe 4f       	sbci	r31, 0xFE	; 254
     9fa:	20 83       	st	Z, r18
     9fc:	90 93 f9 01 	sts	0x01F9, r25
     a00:	80 91 c1 00 	lds	r24, 0x00C1
     a04:	80 62       	ori	r24, 0x20	; 32
     a06:	80 93 c1 00 	sts	0x00C1, r24
     a0a:	08 95       	ret

00000a0c <uart_puts>:
     a0c:	cf 93       	push	r28
     a0e:	df 93       	push	r29
     a10:	ec 01       	movw	r28, r24
     a12:	03 c0       	rjmp	.+6      	; 0xa1a <uart_puts+0xe>
     a14:	21 96       	adiw	r28, 0x01	; 1
     a16:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <uart_putc>
     a1a:	88 81       	ld	r24, Y
     a1c:	88 23       	and	r24, r24
     a1e:	d1 f7       	brne	.-12     	; 0xa14 <uart_puts+0x8>
     a20:	df 91       	pop	r29
     a22:	cf 91       	pop	r28
     a24:	08 95       	ret

00000a26 <uart_puts_p>:
     a26:	cf 93       	push	r28
     a28:	df 93       	push	r29
     a2a:	ec 01       	movw	r28, r24
     a2c:	02 c0       	rjmp	.+4      	; 0xa32 <uart_puts_p+0xc>
     a2e:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <uart_putc>
     a32:	fe 01       	movw	r30, r28
     a34:	21 96       	adiw	r28, 0x01	; 1
     a36:	84 91       	lpm	r24, Z+
     a38:	88 23       	and	r24, r24
     a3a:	c9 f7       	brne	.-14     	; 0xa2e <uart_puts_p+0x8>
     a3c:	df 91       	pop	r29
     a3e:	cf 91       	pop	r28
     a40:	08 95       	ret

00000a42 <tty_init>:
     a42:	81 e8       	ldi	r24, 0x81	; 129
     a44:	90 e0       	ldi	r25, 0x00	; 0
     a46:	0e 94 b9 04 	call	0x972	; 0x972 <uart_init>
     a4a:	8e e0       	ldi	r24, 0x0E	; 14
     a4c:	91 e0       	ldi	r25, 0x01	; 1
     a4e:	90 93 5e 03 	sts	0x035E, r25
     a52:	80 93 5d 03 	sts	0x035D, r24
     a56:	80 91 5a 02 	lds	r24, 0x025A
     a5a:	84 60       	ori	r24, 0x04	; 4
     a5c:	80 93 5a 02 	sts	0x025A, r24
     a60:	08 95       	ret

00000a62 <_uart_putc>:
     a62:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <uart_putc>
     a66:	80 e0       	ldi	r24, 0x00	; 0
     a68:	90 e0       	ldi	r25, 0x00	; 0
     a6a:	08 95       	ret

00000a6c <tty_ledRedOn>:
     a6c:	44 98       	cbi	0x08, 4	; 8
     a6e:	08 95       	ret

00000a70 <tty_ledRedOff>:
     a70:	44 9a       	sbi	0x08, 4	; 8
     a72:	08 95       	ret

00000a74 <tty_ledGreenOn>:
     a74:	29 98       	cbi	0x05, 1	; 5
     a76:	08 95       	ret

00000a78 <tty_ledGreenOff>:
     a78:	29 9a       	sbi	0x05, 1	; 5
     a7a:	08 95       	ret

00000a7c <tty_ledYellowOn>:
     a7c:	45 98       	cbi	0x08, 5	; 8
     a7e:	08 95       	ret

00000a80 <tty_ledYellowOff>:
     a80:	45 9a       	sbi	0x08, 5	; 8
     a82:	08 95       	ret

00000a84 <tty_setUSBReportData>:
     a84:	80 91 5a 02 	lds	r24, 0x025A
     a88:	8c 7f       	andi	r24, 0xFC	; 252
     a8a:	82 60       	ori	r24, 0x02	; 2
     a8c:	80 93 5a 02 	sts	0x025A, r24
     a90:	08 95       	ret

00000a92 <tty_setUSBHidDeviceDescriptor>:
     a92:	80 91 5a 02 	lds	r24, 0x025A
     a96:	8c 7f       	andi	r24, 0xFC	; 252
     a98:	81 60       	ori	r24, 0x01	; 1
     a9a:	80 93 5a 02 	sts	0x025A, r24
     a9e:	08 95       	ret

00000aa0 <tty_setEcho>:
     aa0:	df 93       	push	r29
     aa2:	cf 93       	push	r28
     aa4:	00 d0       	rcall	.+0      	; 0xaa6 <tty_setEcho+0x6>
     aa6:	cd b7       	in	r28, 0x3d	; 61
     aa8:	de b7       	in	r29, 0x3e	; 62
     aaa:	1a 82       	std	Y+2, r1	; 0x02
     aac:	19 82       	std	Y+1, r1	; 0x01
     aae:	00 d0       	rcall	.+0      	; 0xab0 <tty_setEcho+0x10>
     ab0:	00 d0       	rcall	.+0      	; 0xab2 <tty_setEcho+0x12>
     ab2:	00 d0       	rcall	.+0      	; 0xab4 <tty_setEcho+0x14>
     ab4:	ed b7       	in	r30, 0x3d	; 61
     ab6:	fe b7       	in	r31, 0x3e	; 62
     ab8:	31 96       	adiw	r30, 0x01	; 1
     aba:	ad b7       	in	r26, 0x3d	; 61
     abc:	be b7       	in	r27, 0x3e	; 62
     abe:	12 96       	adiw	r26, 0x02	; 2
     ac0:	9c 93       	st	X, r25
     ac2:	8e 93       	st	-X, r24
     ac4:	11 97       	sbiw	r26, 0x01	; 1
     ac6:	82 e0       	ldi	r24, 0x02	; 2
     ac8:	91 e0       	ldi	r25, 0x01	; 1
     aca:	93 83       	std	Z+3, r25	; 0x03
     acc:	82 83       	std	Z+2, r24	; 0x02
     ace:	ce 01       	movw	r24, r28
     ad0:	01 96       	adiw	r24, 0x01	; 1
     ad2:	95 83       	std	Z+5, r25	; 0x05
     ad4:	84 83       	std	Z+4, r24	; 0x04
     ad6:	0e 94 c2 10 	call	0x2184	; 0x2184 <sscanf>
     ada:	2d b7       	in	r18, 0x3d	; 61
     adc:	3e b7       	in	r19, 0x3e	; 62
     ade:	2a 5f       	subi	r18, 0xFA	; 250
     ae0:	3f 4f       	sbci	r19, 0xFF	; 255
     ae2:	2d bf       	out	0x3d, r18	; 61
     ae4:	89 2b       	or	r24, r25
     ae6:	59 f0       	breq	.+22     	; 0xafe <tty_setEcho+0x5e>
     ae8:	89 81       	ldd	r24, Y+1	; 0x01
     aea:	9a 81       	ldd	r25, Y+2	; 0x02
     aec:	20 91 5a 02 	lds	r18, 0x025A
     af0:	89 2b       	or	r24, r25
     af2:	11 f0       	breq	.+4      	; 0xaf8 <tty_setEcho+0x58>
     af4:	24 60       	ori	r18, 0x04	; 4
     af6:	01 c0       	rjmp	.+2      	; 0xafa <tty_setEcho+0x5a>
     af8:	2b 7f       	andi	r18, 0xFB	; 251
     afa:	20 93 5a 02 	sts	0x025A, r18
     afe:	22 96       	adiw	r28, 0x02	; 2
     b00:	cd bf       	out	0x3d, r28	; 61
     b02:	cf 91       	pop	r28
     b04:	df 91       	pop	r29
     b06:	08 95       	ret

00000b08 <tty_setUSBConfigDeviceID>:
     b08:	df 93       	push	r29
     b0a:	cf 93       	push	r28
     b0c:	00 d0       	rcall	.+0      	; 0xb0e <tty_setUSBConfigDeviceID+0x6>
     b0e:	cd b7       	in	r28, 0x3d	; 61
     b10:	de b7       	in	r29, 0x3e	; 62
     b12:	1a 82       	std	Y+2, r1	; 0x02
     b14:	19 82       	std	Y+1, r1	; 0x01
     b16:	00 d0       	rcall	.+0      	; 0xb18 <tty_setUSBConfigDeviceID+0x10>
     b18:	00 d0       	rcall	.+0      	; 0xb1a <tty_setUSBConfigDeviceID+0x12>
     b1a:	00 d0       	rcall	.+0      	; 0xb1c <tty_setUSBConfigDeviceID+0x14>
     b1c:	ed b7       	in	r30, 0x3d	; 61
     b1e:	fe b7       	in	r31, 0x3e	; 62
     b20:	31 96       	adiw	r30, 0x01	; 1
     b22:	ad b7       	in	r26, 0x3d	; 61
     b24:	be b7       	in	r27, 0x3e	; 62
     b26:	12 96       	adiw	r26, 0x02	; 2
     b28:	9c 93       	st	X, r25
     b2a:	8e 93       	st	-X, r24
     b2c:	11 97       	sbiw	r26, 0x01	; 1
     b2e:	81 ee       	ldi	r24, 0xE1	; 225
     b30:	92 e0       	ldi	r25, 0x02	; 2
     b32:	93 83       	std	Z+3, r25	; 0x03
     b34:	82 83       	std	Z+2, r24	; 0x02
     b36:	ce 01       	movw	r24, r28
     b38:	01 96       	adiw	r24, 0x01	; 1
     b3a:	95 83       	std	Z+5, r25	; 0x05
     b3c:	84 83       	std	Z+4, r24	; 0x04
     b3e:	0e 94 dc 10 	call	0x21b8	; 0x21b8 <sscanf_P>
     b42:	2d b7       	in	r18, 0x3d	; 61
     b44:	3e b7       	in	r19, 0x3e	; 62
     b46:	2a 5f       	subi	r18, 0xFA	; 250
     b48:	3f 4f       	sbci	r19, 0xFF	; 255
     b4a:	2d bf       	out	0x3d, r18	; 61
     b4c:	89 2b       	or	r24, r25
     b4e:	31 f0       	breq	.+12     	; 0xb5c <tty_setUSBConfigDeviceID+0x54>
     b50:	89 81       	ldd	r24, Y+1	; 0x01
     b52:	9a 81       	ldd	r25, Y+2	; 0x02
     b54:	80 93 8d 01 	sts	0x018D, r24
     b58:	90 93 8e 01 	sts	0x018E, r25
     b5c:	22 96       	adiw	r28, 0x02	; 2
     b5e:	cd bf       	out	0x3d, r28	; 61
     b60:	cf 91       	pop	r28
     b62:	df 91       	pop	r29
     b64:	08 95       	ret

00000b66 <tty_setUSBConfigVendorID>:
     b66:	df 93       	push	r29
     b68:	cf 93       	push	r28
     b6a:	00 d0       	rcall	.+0      	; 0xb6c <tty_setUSBConfigVendorID+0x6>
     b6c:	cd b7       	in	r28, 0x3d	; 61
     b6e:	de b7       	in	r29, 0x3e	; 62
     b70:	1a 82       	std	Y+2, r1	; 0x02
     b72:	19 82       	std	Y+1, r1	; 0x01
     b74:	00 d0       	rcall	.+0      	; 0xb76 <tty_setUSBConfigVendorID+0x10>
     b76:	00 d0       	rcall	.+0      	; 0xb78 <tty_setUSBConfigVendorID+0x12>
     b78:	00 d0       	rcall	.+0      	; 0xb7a <tty_setUSBConfigVendorID+0x14>
     b7a:	ed b7       	in	r30, 0x3d	; 61
     b7c:	fe b7       	in	r31, 0x3e	; 62
     b7e:	31 96       	adiw	r30, 0x01	; 1
     b80:	ad b7       	in	r26, 0x3d	; 61
     b82:	be b7       	in	r27, 0x3e	; 62
     b84:	12 96       	adiw	r26, 0x02	; 2
     b86:	9c 93       	st	X, r25
     b88:	8e 93       	st	-X, r24
     b8a:	11 97       	sbiw	r26, 0x01	; 1
     b8c:	88 ee       	ldi	r24, 0xE8	; 232
     b8e:	92 e0       	ldi	r25, 0x02	; 2
     b90:	93 83       	std	Z+3, r25	; 0x03
     b92:	82 83       	std	Z+2, r24	; 0x02
     b94:	ce 01       	movw	r24, r28
     b96:	01 96       	adiw	r24, 0x01	; 1
     b98:	95 83       	std	Z+5, r25	; 0x05
     b9a:	84 83       	std	Z+4, r24	; 0x04
     b9c:	0e 94 dc 10 	call	0x21b8	; 0x21b8 <sscanf_P>
     ba0:	2d b7       	in	r18, 0x3d	; 61
     ba2:	3e b7       	in	r19, 0x3e	; 62
     ba4:	2a 5f       	subi	r18, 0xFA	; 250
     ba6:	3f 4f       	sbci	r19, 0xFF	; 255
     ba8:	2d bf       	out	0x3d, r18	; 61
     baa:	89 2b       	or	r24, r25
     bac:	31 f0       	breq	.+12     	; 0xbba <tty_setUSBConfigVendorID+0x54>
     bae:	89 81       	ldd	r24, Y+1	; 0x01
     bb0:	9a 81       	ldd	r25, Y+2	; 0x02
     bb2:	80 93 8b 01 	sts	0x018B, r24
     bb6:	90 93 8c 01 	sts	0x018C, r25
     bba:	22 96       	adiw	r28, 0x02	; 2
     bbc:	cd bf       	out	0x3d, r28	; 61
     bbe:	cf 91       	pop	r28
     bc0:	df 91       	pop	r29
     bc2:	08 95       	ret

00000bc4 <tty_setSerialNumber>:
     bc4:	ac 01       	movw	r20, r24
     bc6:	fc 01       	movw	r30, r24
     bc8:	01 90       	ld	r0, Z+
     bca:	00 20       	and	r0, r0
     bcc:	e9 f7       	brne	.-6      	; 0xbc8 <tty_setSerialNumber+0x4>
     bce:	31 97       	sbiw	r30, 0x01	; 1
     bd0:	6e 2f       	mov	r22, r30
     bd2:	68 1b       	sub	r22, r24
     bd4:	64 31       	cpi	r22, 0x14	; 20
     bd6:	08 f0       	brcs	.+2      	; 0xbda <tty_setSerialNumber+0x16>
     bd8:	63 e1       	ldi	r22, 0x13	; 19
     bda:	86 2f       	mov	r24, r22
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	01 96       	adiw	r24, 0x01	; 1
     be0:	88 0f       	add	r24, r24
     be2:	99 1f       	adc	r25, r25
     be4:	93 60       	ori	r25, 0x03	; 3
     be6:	90 93 5e 02 	sts	0x025E, r25
     bea:	80 93 5d 02 	sts	0x025D, r24
     bee:	af e5       	ldi	r26, 0x5F	; 95
     bf0:	b2 e0       	ldi	r27, 0x02	; 2
     bf2:	20 e0       	ldi	r18, 0x00	; 0
     bf4:	30 e0       	ldi	r19, 0x00	; 0
     bf6:	0b c0       	rjmp	.+22     	; 0xc0e <tty_setSerialNumber+0x4a>
     bf8:	fa 01       	movw	r30, r20
     bfa:	e2 0f       	add	r30, r18
     bfc:	f3 1f       	adc	r31, r19
     bfe:	80 81       	ld	r24, Z
     c00:	8c 93       	st	X, r24
     c02:	11 96       	adiw	r26, 0x01	; 1
     c04:	1c 92       	st	X, r1
     c06:	11 97       	sbiw	r26, 0x01	; 1
     c08:	2f 5f       	subi	r18, 0xFF	; 255
     c0a:	3f 4f       	sbci	r19, 0xFF	; 255
     c0c:	12 96       	adiw	r26, 0x02	; 2
     c0e:	26 17       	cp	r18, r22
     c10:	98 f3       	brcs	.-26     	; 0xbf8 <tty_setSerialNumber+0x34>
     c12:	08 95       	ret

00000c14 <tty_setDeviceName>:
     c14:	ac 01       	movw	r20, r24
     c16:	fc 01       	movw	r30, r24
     c18:	01 90       	ld	r0, Z+
     c1a:	00 20       	and	r0, r0
     c1c:	e9 f7       	brne	.-6      	; 0xc18 <tty_setDeviceName+0x4>
     c1e:	31 97       	sbiw	r30, 0x01	; 1
     c20:	6e 2f       	mov	r22, r30
     c22:	68 1b       	sub	r22, r24
     c24:	64 31       	cpi	r22, 0x14	; 20
     c26:	08 f0       	brcs	.+2      	; 0xc2a <tty_setDeviceName+0x16>
     c28:	63 e1       	ldi	r22, 0x13	; 19
     c2a:	86 2f       	mov	r24, r22
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	01 96       	adiw	r24, 0x01	; 1
     c30:	88 0f       	add	r24, r24
     c32:	99 1f       	adc	r25, r25
     c34:	93 60       	ori	r25, 0x03	; 3
     c36:	90 93 32 03 	sts	0x0332, r25
     c3a:	80 93 31 03 	sts	0x0331, r24
     c3e:	a3 e3       	ldi	r26, 0x33	; 51
     c40:	b3 e0       	ldi	r27, 0x03	; 3
     c42:	20 e0       	ldi	r18, 0x00	; 0
     c44:	30 e0       	ldi	r19, 0x00	; 0
     c46:	0b c0       	rjmp	.+22     	; 0xc5e <tty_setDeviceName+0x4a>
     c48:	fa 01       	movw	r30, r20
     c4a:	e2 0f       	add	r30, r18
     c4c:	f3 1f       	adc	r31, r19
     c4e:	80 81       	ld	r24, Z
     c50:	8c 93       	st	X, r24
     c52:	11 96       	adiw	r26, 0x01	; 1
     c54:	1c 92       	st	X, r1
     c56:	11 97       	sbiw	r26, 0x01	; 1
     c58:	2f 5f       	subi	r18, 0xFF	; 255
     c5a:	3f 4f       	sbci	r19, 0xFF	; 255
     c5c:	12 96       	adiw	r26, 0x02	; 2
     c5e:	26 17       	cp	r18, r22
     c60:	98 f3       	brcs	.-26     	; 0xc48 <tty_setDeviceName+0x34>
     c62:	08 95       	ret

00000c64 <tty_setVendorName>:
     c64:	ac 01       	movw	r20, r24
     c66:	fc 01       	movw	r30, r24
     c68:	01 90       	ld	r0, Z+
     c6a:	00 20       	and	r0, r0
     c6c:	e9 f7       	brne	.-6      	; 0xc68 <tty_setVendorName+0x4>
     c6e:	31 97       	sbiw	r30, 0x01	; 1
     c70:	6e 2f       	mov	r22, r30
     c72:	68 1b       	sub	r22, r24
     c74:	64 31       	cpi	r22, 0x14	; 20
     c76:	08 f0       	brcs	.+2      	; 0xc7a <tty_setVendorName+0x16>
     c78:	63 e1       	ldi	r22, 0x13	; 19
     c7a:	86 2f       	mov	r24, r22
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	01 96       	adiw	r24, 0x01	; 1
     c80:	88 0f       	add	r24, r24
     c82:	99 1f       	adc	r25, r25
     c84:	93 60       	ori	r25, 0x03	; 3
     c86:	90 93 88 02 	sts	0x0288, r25
     c8a:	80 93 87 02 	sts	0x0287, r24
     c8e:	a9 e8       	ldi	r26, 0x89	; 137
     c90:	b2 e0       	ldi	r27, 0x02	; 2
     c92:	20 e0       	ldi	r18, 0x00	; 0
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	0b c0       	rjmp	.+22     	; 0xcae <tty_setVendorName+0x4a>
     c98:	fa 01       	movw	r30, r20
     c9a:	e2 0f       	add	r30, r18
     c9c:	f3 1f       	adc	r31, r19
     c9e:	80 81       	ld	r24, Z
     ca0:	8c 93       	st	X, r24
     ca2:	11 96       	adiw	r26, 0x01	; 1
     ca4:	1c 92       	st	X, r1
     ca6:	11 97       	sbiw	r26, 0x01	; 1
     ca8:	2f 5f       	subi	r18, 0xFF	; 255
     caa:	3f 4f       	sbci	r19, 0xFF	; 255
     cac:	12 96       	adiw	r26, 0x02	; 2
     cae:	26 17       	cp	r18, r22
     cb0:	98 f3       	brcs	.-26     	; 0xc98 <tty_setVendorName+0x34>
     cb2:	08 95       	ret

00000cb4 <tty_getUSBConfigDeviceID>:
     cb4:	00 d0       	rcall	.+0      	; 0xcb6 <tty_getUSBConfigDeviceID+0x2>
     cb6:	00 d0       	rcall	.+0      	; 0xcb8 <tty_getUSBConfigDeviceID+0x4>
     cb8:	00 d0       	rcall	.+0      	; 0xcba <tty_getUSBConfigDeviceID+0x6>
     cba:	ed b7       	in	r30, 0x3d	; 61
     cbc:	fe b7       	in	r31, 0x3e	; 62
     cbe:	31 96       	adiw	r30, 0x01	; 1
     cc0:	8f ee       	ldi	r24, 0xEF	; 239
     cc2:	92 e0       	ldi	r25, 0x02	; 2
     cc4:	ad b7       	in	r26, 0x3d	; 61
     cc6:	be b7       	in	r27, 0x3e	; 62
     cc8:	12 96       	adiw	r26, 0x02	; 2
     cca:	9c 93       	st	X, r25
     ccc:	8e 93       	st	-X, r24
     cce:	11 97       	sbiw	r26, 0x01	; 1
     cd0:	80 91 8e 01 	lds	r24, 0x018E
     cd4:	82 83       	std	Z+2, r24	; 0x02
     cd6:	13 82       	std	Z+3, r1	; 0x03
     cd8:	80 91 8d 01 	lds	r24, 0x018D
     cdc:	84 83       	std	Z+4, r24	; 0x04
     cde:	15 82       	std	Z+5, r1	; 0x05
     ce0:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
     ce4:	8d b7       	in	r24, 0x3d	; 61
     ce6:	9e b7       	in	r25, 0x3e	; 62
     ce8:	06 96       	adiw	r24, 0x06	; 6
     cea:	8d bf       	out	0x3d, r24	; 61
     cec:	08 95       	ret

00000cee <tty_getUSBConfigVendorID>:
     cee:	00 d0       	rcall	.+0      	; 0xcf0 <tty_getUSBConfigVendorID+0x2>
     cf0:	00 d0       	rcall	.+0      	; 0xcf2 <tty_getUSBConfigVendorID+0x4>
     cf2:	00 d0       	rcall	.+0      	; 0xcf4 <tty_getUSBConfigVendorID+0x6>
     cf4:	ed b7       	in	r30, 0x3d	; 61
     cf6:	fe b7       	in	r31, 0x3e	; 62
     cf8:	31 96       	adiw	r30, 0x01	; 1
     cfa:	8e ef       	ldi	r24, 0xFE	; 254
     cfc:	92 e0       	ldi	r25, 0x02	; 2
     cfe:	ad b7       	in	r26, 0x3d	; 61
     d00:	be b7       	in	r27, 0x3e	; 62
     d02:	12 96       	adiw	r26, 0x02	; 2
     d04:	9c 93       	st	X, r25
     d06:	8e 93       	st	-X, r24
     d08:	11 97       	sbiw	r26, 0x01	; 1
     d0a:	80 91 8c 01 	lds	r24, 0x018C
     d0e:	82 83       	std	Z+2, r24	; 0x02
     d10:	13 82       	std	Z+3, r1	; 0x03
     d12:	80 91 8b 01 	lds	r24, 0x018B
     d16:	84 83       	std	Z+4, r24	; 0x04
     d18:	15 82       	std	Z+5, r1	; 0x05
     d1a:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
     d1e:	8d b7       	in	r24, 0x3d	; 61
     d20:	9e b7       	in	r25, 0x3e	; 62
     d22:	06 96       	adiw	r24, 0x06	; 6
     d24:	8d bf       	out	0x3d, r24	; 61
     d26:	08 95       	ret

00000d28 <tty_getSerialNumber>:
     d28:	0f 93       	push	r16
     d2a:	1f 93       	push	r17
     d2c:	cf 93       	push	r28
     d2e:	df 93       	push	r29
     d30:	80 91 5d 02 	lds	r24, 0x025D
     d34:	90 91 5e 02 	lds	r25, 0x025E
     d38:	90 70       	andi	r25, 0x00	; 0
     d3a:	02 97       	sbiw	r24, 0x02	; 2
     d3c:	62 e0       	ldi	r22, 0x02	; 2
     d3e:	70 e0       	ldi	r23, 0x00	; 0
     d40:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__divmodhi4>
     d44:	06 2f       	mov	r16, r22
     d46:	11 e0       	ldi	r17, 0x01	; 1
     d48:	cd e0       	ldi	r28, 0x0D	; 13
     d4a:	d3 e0       	ldi	r29, 0x03	; 3
     d4c:	19 c0       	rjmp	.+50     	; 0xd80 <tty_getSerialNumber+0x58>
     d4e:	00 d0       	rcall	.+0      	; 0xd50 <tty_getSerialNumber+0x28>
     d50:	00 d0       	rcall	.+0      	; 0xd52 <tty_getSerialNumber+0x2a>
     d52:	ed b7       	in	r30, 0x3d	; 61
     d54:	fe b7       	in	r31, 0x3e	; 62
     d56:	d2 83       	std	Z+2, r29	; 0x02
     d58:	c1 83       	std	Z+1, r28	; 0x01
     d5a:	e1 2f       	mov	r30, r17
     d5c:	f0 e0       	ldi	r31, 0x00	; 0
     d5e:	ee 0f       	add	r30, r30
     d60:	ff 1f       	adc	r31, r31
     d62:	e3 5a       	subi	r30, 0xA3	; 163
     d64:	fd 4f       	sbci	r31, 0xFD	; 253
     d66:	80 81       	ld	r24, Z
     d68:	91 81       	ldd	r25, Z+1	; 0x01
     d6a:	ed b7       	in	r30, 0x3d	; 61
     d6c:	fe b7       	in	r31, 0x3e	; 62
     d6e:	94 83       	std	Z+4, r25	; 0x04
     d70:	83 83       	std	Z+3, r24	; 0x03
     d72:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
     d76:	1f 5f       	subi	r17, 0xFF	; 255
     d78:	0f 90       	pop	r0
     d7a:	0f 90       	pop	r0
     d7c:	0f 90       	pop	r0
     d7e:	0f 90       	pop	r0
     d80:	01 17       	cp	r16, r17
     d82:	28 f7       	brcc	.-54     	; 0xd4e <tty_getSerialNumber+0x26>
     d84:	df 91       	pop	r29
     d86:	cf 91       	pop	r28
     d88:	1f 91       	pop	r17
     d8a:	0f 91       	pop	r16
     d8c:	08 95       	ret

00000d8e <tty_getDeviceName>:
     d8e:	0f 93       	push	r16
     d90:	1f 93       	push	r17
     d92:	cf 93       	push	r28
     d94:	df 93       	push	r29
     d96:	80 91 31 03 	lds	r24, 0x0331
     d9a:	90 91 32 03 	lds	r25, 0x0332
     d9e:	90 70       	andi	r25, 0x00	; 0
     da0:	02 97       	sbiw	r24, 0x02	; 2
     da2:	62 e0       	ldi	r22, 0x02	; 2
     da4:	70 e0       	ldi	r23, 0x00	; 0
     da6:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__divmodhi4>
     daa:	06 2f       	mov	r16, r22
     dac:	11 e0       	ldi	r17, 0x01	; 1
     dae:	c0 e1       	ldi	r28, 0x10	; 16
     db0:	d3 e0       	ldi	r29, 0x03	; 3
     db2:	19 c0       	rjmp	.+50     	; 0xde6 <tty_getDeviceName+0x58>
     db4:	00 d0       	rcall	.+0      	; 0xdb6 <tty_getDeviceName+0x28>
     db6:	00 d0       	rcall	.+0      	; 0xdb8 <tty_getDeviceName+0x2a>
     db8:	ed b7       	in	r30, 0x3d	; 61
     dba:	fe b7       	in	r31, 0x3e	; 62
     dbc:	d2 83       	std	Z+2, r29	; 0x02
     dbe:	c1 83       	std	Z+1, r28	; 0x01
     dc0:	e1 2f       	mov	r30, r17
     dc2:	f0 e0       	ldi	r31, 0x00	; 0
     dc4:	ee 0f       	add	r30, r30
     dc6:	ff 1f       	adc	r31, r31
     dc8:	ef 5c       	subi	r30, 0xCF	; 207
     dca:	fc 4f       	sbci	r31, 0xFC	; 252
     dcc:	80 81       	ld	r24, Z
     dce:	91 81       	ldd	r25, Z+1	; 0x01
     dd0:	ed b7       	in	r30, 0x3d	; 61
     dd2:	fe b7       	in	r31, 0x3e	; 62
     dd4:	94 83       	std	Z+4, r25	; 0x04
     dd6:	83 83       	std	Z+3, r24	; 0x03
     dd8:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
     ddc:	1f 5f       	subi	r17, 0xFF	; 255
     dde:	0f 90       	pop	r0
     de0:	0f 90       	pop	r0
     de2:	0f 90       	pop	r0
     de4:	0f 90       	pop	r0
     de6:	01 17       	cp	r16, r17
     de8:	28 f7       	brcc	.-54     	; 0xdb4 <tty_getDeviceName+0x26>
     dea:	df 91       	pop	r29
     dec:	cf 91       	pop	r28
     dee:	1f 91       	pop	r17
     df0:	0f 91       	pop	r16
     df2:	08 95       	ret

00000df4 <tty_getVendorName>:
     df4:	ef 92       	push	r14
     df6:	ff 92       	push	r15
     df8:	1f 93       	push	r17
     dfa:	cf 93       	push	r28
     dfc:	df 93       	push	r29
     dfe:	80 91 87 02 	lds	r24, 0x0287
     e02:	90 91 88 02 	lds	r25, 0x0288
     e06:	90 70       	andi	r25, 0x00	; 0
     e08:	02 97       	sbiw	r24, 0x02	; 2
     e0a:	62 e0       	ldi	r22, 0x02	; 2
     e0c:	70 e0       	ldi	r23, 0x00	; 0
     e0e:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__divmodhi4>
     e12:	eb 01       	movw	r28, r22
     e14:	11 e0       	ldi	r17, 0x01	; 1
     e16:	93 e1       	ldi	r25, 0x13	; 19
     e18:	e9 2e       	mov	r14, r25
     e1a:	93 e0       	ldi	r25, 0x03	; 3
     e1c:	f9 2e       	mov	r15, r25
     e1e:	19 c0       	rjmp	.+50     	; 0xe52 <tty_getVendorName+0x5e>
     e20:	00 d0       	rcall	.+0      	; 0xe22 <tty_getVendorName+0x2e>
     e22:	00 d0       	rcall	.+0      	; 0xe24 <tty_getVendorName+0x30>
     e24:	ad b7       	in	r26, 0x3d	; 61
     e26:	be b7       	in	r27, 0x3e	; 62
     e28:	12 96       	adiw	r26, 0x02	; 2
     e2a:	fc 92       	st	X, r15
     e2c:	ee 92       	st	-X, r14
     e2e:	11 97       	sbiw	r26, 0x01	; 1
     e30:	ee 0f       	add	r30, r30
     e32:	ff 1f       	adc	r31, r31
     e34:	e9 57       	subi	r30, 0x79	; 121
     e36:	fd 4f       	sbci	r31, 0xFD	; 253
     e38:	80 81       	ld	r24, Z
     e3a:	91 81       	ldd	r25, Z+1	; 0x01
     e3c:	14 96       	adiw	r26, 0x04	; 4
     e3e:	9c 93       	st	X, r25
     e40:	8e 93       	st	-X, r24
     e42:	13 97       	sbiw	r26, 0x03	; 3
     e44:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
     e48:	1f 5f       	subi	r17, 0xFF	; 255
     e4a:	0f 90       	pop	r0
     e4c:	0f 90       	pop	r0
     e4e:	0f 90       	pop	r0
     e50:	0f 90       	pop	r0
     e52:	e1 2f       	mov	r30, r17
     e54:	f0 e0       	ldi	r31, 0x00	; 0
     e56:	ce 17       	cp	r28, r30
     e58:	df 07       	cpc	r29, r31
     e5a:	14 f7       	brge	.-60     	; 0xe20 <tty_getVendorName+0x2c>
     e5c:	df 91       	pop	r29
     e5e:	cf 91       	pop	r28
     e60:	1f 91       	pop	r17
     e62:	ff 90       	pop	r15
     e64:	ef 90       	pop	r14
     e66:	08 95       	ret

00000e68 <tty_getUSBHidDeviceDescriptor>:
     e68:	cf 92       	push	r12
     e6a:	df 92       	push	r13
     e6c:	ff 92       	push	r15
     e6e:	0f 93       	push	r16
     e70:	1f 93       	push	r17
     e72:	cf 93       	push	r28
     e74:	df 93       	push	r29
     e76:	ff 24       	eor	r15, r15
     e78:	29 e1       	ldi	r18, 0x19	; 25
     e7a:	c2 2e       	mov	r12, r18
     e7c:	23 e0       	ldi	r18, 0x03	; 3
     e7e:	d2 2e       	mov	r13, r18
     e80:	c6 e1       	ldi	r28, 0x16	; 22
     e82:	d3 e0       	ldi	r29, 0x03	; 3
     e84:	2c c0       	rjmp	.+88     	; 0xede <tty_getUSBHidDeviceDescriptor+0x76>
     e86:	0f 2d       	mov	r16, r15
     e88:	10 e0       	ldi	r17, 0x00	; 0
     e8a:	00 d0       	rcall	.+0      	; 0xe8c <tty_getUSBHidDeviceDescriptor+0x24>
     e8c:	00 d0       	rcall	.+0      	; 0xe8e <tty_getUSBHidDeviceDescriptor+0x26>
     e8e:	ad b7       	in	r26, 0x3d	; 61
     e90:	be b7       	in	r27, 0x3e	; 62
     e92:	11 96       	adiw	r26, 0x01	; 1
     e94:	ed b7       	in	r30, 0x3d	; 61
     e96:	fe b7       	in	r31, 0x3e	; 62
     e98:	d2 82       	std	Z+2, r13	; 0x02
     e9a:	c1 82       	std	Z+1, r12	; 0x01
     e9c:	f8 01       	movw	r30, r16
     e9e:	e1 5e       	subi	r30, 0xE1	; 225
     ea0:	fe 4f       	sbci	r31, 0xFE	; 254
     ea2:	80 81       	ld	r24, Z
     ea4:	12 96       	adiw	r26, 0x02	; 2
     ea6:	8c 93       	st	X, r24
     ea8:	12 97       	sbiw	r26, 0x02	; 2
     eaa:	13 96       	adiw	r26, 0x03	; 3
     eac:	1c 92       	st	X, r1
     eae:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
     eb2:	c8 01       	movw	r24, r16
     eb4:	01 96       	adiw	r24, 0x01	; 1
     eb6:	64 e1       	ldi	r22, 0x14	; 20
     eb8:	70 e0       	ldi	r23, 0x00	; 0
     eba:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__divmodhi4>
     ebe:	0f 90       	pop	r0
     ec0:	0f 90       	pop	r0
     ec2:	0f 90       	pop	r0
     ec4:	0f 90       	pop	r0
     ec6:	89 2b       	or	r24, r25
     ec8:	49 f4       	brne	.+18     	; 0xedc <tty_getUSBHidDeviceDescriptor+0x74>
     eca:	00 d0       	rcall	.+0      	; 0xecc <tty_getUSBHidDeviceDescriptor+0x64>
     ecc:	ed b7       	in	r30, 0x3d	; 61
     ece:	fe b7       	in	r31, 0x3e	; 62
     ed0:	d2 83       	std	Z+2, r29	; 0x02
     ed2:	c1 83       	std	Z+1, r28	; 0x01
     ed4:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
     ed8:	0f 90       	pop	r0
     eda:	0f 90       	pop	r0
     edc:	f3 94       	inc	r15
     ede:	80 91 1e 01 	lds	r24, 0x011E
     ee2:	f8 16       	cp	r15, r24
     ee4:	80 f2       	brcs	.-96     	; 0xe86 <tty_getUSBHidDeviceDescriptor+0x1e>
     ee6:	df 91       	pop	r29
     ee8:	cf 91       	pop	r28
     eea:	1f 91       	pop	r17
     eec:	0f 91       	pop	r16
     eee:	ff 90       	pop	r15
     ef0:	df 90       	pop	r13
     ef2:	cf 90       	pop	r12
     ef4:	08 95       	ret

00000ef6 <tty_getUSBReportData>:
     ef6:	cf 92       	push	r12
     ef8:	df 92       	push	r13
     efa:	ff 92       	push	r15
     efc:	0f 93       	push	r16
     efe:	1f 93       	push	r17
     f00:	cf 93       	push	r28
     f02:	df 93       	push	r29
     f04:	ff 24       	eor	r15, r15
     f06:	34 e2       	ldi	r19, 0x24	; 36
     f08:	c3 2e       	mov	r12, r19
     f0a:	33 e0       	ldi	r19, 0x03	; 3
     f0c:	d3 2e       	mov	r13, r19
     f0e:	c1 e2       	ldi	r28, 0x21	; 33
     f10:	d3 e0       	ldi	r29, 0x03	; 3
     f12:	2c c0       	rjmp	.+88     	; 0xf6c <tty_getUSBReportData+0x76>
     f14:	0f 2d       	mov	r16, r15
     f16:	10 e0       	ldi	r17, 0x00	; 0
     f18:	00 d0       	rcall	.+0      	; 0xf1a <tty_getUSBReportData+0x24>
     f1a:	00 d0       	rcall	.+0      	; 0xf1c <tty_getUSBReportData+0x26>
     f1c:	ad b7       	in	r26, 0x3d	; 61
     f1e:	be b7       	in	r27, 0x3e	; 62
     f20:	11 96       	adiw	r26, 0x01	; 1
     f22:	ed b7       	in	r30, 0x3d	; 61
     f24:	fe b7       	in	r31, 0x3e	; 62
     f26:	d2 82       	std	Z+2, r13	; 0x02
     f28:	c1 82       	std	Z+1, r12	; 0x01
     f2a:	f8 01       	movw	r30, r16
     f2c:	ef 54       	subi	r30, 0x4F	; 79
     f2e:	fd 4f       	sbci	r31, 0xFD	; 253
     f30:	80 81       	ld	r24, Z
     f32:	12 96       	adiw	r26, 0x02	; 2
     f34:	8c 93       	st	X, r24
     f36:	12 97       	sbiw	r26, 0x02	; 2
     f38:	13 96       	adiw	r26, 0x03	; 3
     f3a:	1c 92       	st	X, r1
     f3c:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
     f40:	c8 01       	movw	r24, r16
     f42:	01 96       	adiw	r24, 0x01	; 1
     f44:	64 e1       	ldi	r22, 0x14	; 20
     f46:	70 e0       	ldi	r23, 0x00	; 0
     f48:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__divmodhi4>
     f4c:	0f 90       	pop	r0
     f4e:	0f 90       	pop	r0
     f50:	0f 90       	pop	r0
     f52:	0f 90       	pop	r0
     f54:	89 2b       	or	r24, r25
     f56:	49 f4       	brne	.+18     	; 0xf6a <tty_getUSBReportData+0x74>
     f58:	00 d0       	rcall	.+0      	; 0xf5a <tty_getUSBReportData+0x64>
     f5a:	ed b7       	in	r30, 0x3d	; 61
     f5c:	fe b7       	in	r31, 0x3e	; 62
     f5e:	d2 83       	std	Z+2, r29	; 0x02
     f60:	c1 83       	std	Z+1, r28	; 0x01
     f62:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
     f66:	0f 90       	pop	r0
     f68:	0f 90       	pop	r0
     f6a:	f3 94       	inc	r15
     f6c:	80 91 1c 01 	lds	r24, 0x011C
     f70:	f8 16       	cp	r15, r24
     f72:	80 f2       	brcs	.-96     	; 0xf14 <tty_getUSBReportData+0x1e>
     f74:	df 91       	pop	r29
     f76:	cf 91       	pop	r28
     f78:	1f 91       	pop	r17
     f7a:	0f 91       	pop	r16
     f7c:	ff 90       	pop	r15
     f7e:	df 90       	pop	r13
     f80:	cf 90       	pop	r12
     f82:	08 95       	ret

00000f84 <tty_setInterrupt>:
     f84:	80 91 11 02 	lds	r24, 0x0211
     f88:	84 ff       	sbrs	r24, 4
     f8a:	06 c0       	rjmp	.+12     	; 0xf98 <tty_setInterrupt+0x14>
     f8c:	81 eb       	ldi	r24, 0xB1	; 177
     f8e:	92 e0       	ldi	r25, 0x02	; 2
     f90:	60 91 1c 01 	lds	r22, 0x011C
     f94:	0e 94 e7 01 	call	0x3ce	; 0x3ce <usbSetInterrupt>
     f98:	08 95       	ret

00000f9a <tty_executeCmd>:
     f9a:	cf 92       	push	r12
     f9c:	df 92       	push	r13
     f9e:	ef 92       	push	r14
     fa0:	ff 92       	push	r15
     fa2:	0f 93       	push	r16
     fa4:	1f 93       	push	r17
     fa6:	cf 93       	push	r28
     fa8:	df 93       	push	r29
     faa:	6c 01       	movw	r12, r24
     fac:	65 e0       	ldi	r22, 0x05	; 5
     fae:	71 e0       	ldi	r23, 0x01	; 1
     fb0:	0e 94 02 10 	call	0x2004	; 0x2004 <strtok>
     fb4:	7c 01       	movw	r14, r24
     fb6:	c3 ed       	ldi	r28, 0xD3	; 211
     fb8:	d1 e0       	ldi	r29, 0x01	; 1
     fba:	fe 01       	movw	r30, r28
     fbc:	34 96       	adiw	r30, 0x04	; 4
     fbe:	05 91       	lpm	r16, Z+
     fc0:	14 91       	lpm	r17, Z+
     fc2:	c7 01       	movw	r24, r14
     fc4:	b8 01       	movw	r22, r16
     fc6:	0e 94 f0 0f 	call	0x1fe0	; 0x1fe0 <strcmp_P>
     fca:	89 2b       	or	r24, r25
     fcc:	31 f0       	breq	.+12     	; 0xfda <tty_executeCmd+0x40>
     fce:	82 e0       	ldi	r24, 0x02	; 2
     fd0:	cb 3d       	cpi	r28, 0xDB	; 219
     fd2:	d8 07       	cpc	r29, r24
     fd4:	19 f1       	breq	.+70     	; 0x101c <tty_executeCmd+0x82>
     fd6:	26 96       	adiw	r28, 0x06	; 6
     fd8:	f0 cf       	rjmp	.-32     	; 0xfba <tty_executeCmd+0x20>
     fda:	45 98       	cbi	0x08, 5	; 8
     fdc:	fe 01       	movw	r30, r28
     fde:	e5 90       	lpm	r14, Z+
     fe0:	f4 90       	lpm	r15, Z+
     fe2:	fe 01       	movw	r30, r28
     fe4:	32 96       	adiw	r30, 0x02	; 2
     fe6:	85 91       	lpm	r24, Z+
     fe8:	94 91       	lpm	r25, Z+
     fea:	81 30       	cpi	r24, 0x01	; 1
     fec:	91 05       	cpc	r25, r1
     fee:	39 f4       	brne	.+14     	; 0xffe <tty_executeCmd+0x64>
     ff0:	c8 01       	movw	r24, r16
     ff2:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <strlen_P>
     ff6:	01 96       	adiw	r24, 0x01	; 1
     ff8:	8c 0d       	add	r24, r12
     ffa:	9d 1d       	adc	r25, r13
     ffc:	09 c0       	rjmp	.+18     	; 0x1010 <tty_executeCmd+0x76>
     ffe:	00 97       	sbiw	r24, 0x00	; 0
    1000:	19 f4       	brne	.+6      	; 0x1008 <tty_executeCmd+0x6e>
    1002:	80 e0       	ldi	r24, 0x00	; 0
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	04 c0       	rjmp	.+8      	; 0x1010 <tty_executeCmd+0x76>
    1008:	40 97       	sbiw	r24, 0x10	; 16
    100a:	87 30       	cpi	r24, 0x07	; 7
    100c:	91 05       	cpc	r25, r1
    100e:	30 f4       	brcc	.+12     	; 0x101c <tty_executeCmd+0x82>
    1010:	f7 01       	movw	r30, r14
    1012:	09 95       	icall
    1014:	45 9a       	sbi	0x08, 5	; 8
    1016:	21 e0       	ldi	r18, 0x01	; 1
    1018:	30 e0       	ldi	r19, 0x00	; 0
    101a:	02 c0       	rjmp	.+4      	; 0x1020 <tty_executeCmd+0x86>
    101c:	20 e0       	ldi	r18, 0x00	; 0
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	c9 01       	movw	r24, r18
    1022:	df 91       	pop	r29
    1024:	cf 91       	pop	r28
    1026:	1f 91       	pop	r17
    1028:	0f 91       	pop	r16
    102a:	ff 90       	pop	r15
    102c:	ef 90       	pop	r14
    102e:	df 90       	pop	r13
    1030:	cf 90       	pop	r12
    1032:	08 95       	ret

00001034 <tty_pollTerminal>:
    1034:	0f 93       	push	r16
    1036:	1f 93       	push	r17
    1038:	df 93       	push	r29
    103a:	cf 93       	push	r28
    103c:	00 d0       	rcall	.+0      	; 0x103e <tty_pollTerminal+0xa>
    103e:	cd b7       	in	r28, 0x3d	; 61
    1040:	de b7       	in	r29, 0x3e	; 62
    1042:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <uart_getc>
    1046:	18 2f       	mov	r17, r24
    1048:	88 23       	and	r24, r24
    104a:	09 f4       	brne	.+2      	; 0x104e <tty_pollTerminal+0x1a>
    104c:	65 c1       	rjmp	.+714    	; 0x1318 <tty_pollTerminal+0x2e4>
    104e:	8d 30       	cpi	r24, 0x0D	; 13
    1050:	09 f4       	brne	.+2      	; 0x1054 <tty_pollTerminal+0x20>
    1052:	72 c0       	rjmp	.+228    	; 0x1138 <tty_pollTerminal+0x104>
    1054:	8f 37       	cpi	r24, 0x7F	; 127
    1056:	40 f4       	brcc	.+16     	; 0x1068 <tty_pollTerminal+0x34>
    1058:	80 32       	cpi	r24, 0x20	; 32
    105a:	50 f4       	brcc	.+20     	; 0x1070 <tty_pollTerminal+0x3c>
    105c:	89 30       	cpi	r24, 0x09	; 9
    105e:	49 f1       	breq	.+82     	; 0x10b2 <tty_pollTerminal+0x7e>
    1060:	8b 31       	cpi	r24, 0x1B	; 27
    1062:	09 f0       	breq	.+2      	; 0x1066 <tty_pollTerminal+0x32>
    1064:	61 c0       	rjmp	.+194    	; 0x1128 <tty_pollTerminal+0xf4>
    1066:	4d c0       	rjmp	.+154    	; 0x1102 <tty_pollTerminal+0xce>
    1068:	8f 37       	cpi	r24, 0x7F	; 127
    106a:	09 f0       	breq	.+2      	; 0x106e <tty_pollTerminal+0x3a>
    106c:	5d c0       	rjmp	.+186    	; 0x1128 <tty_pollTerminal+0xf4>
    106e:	2d c0       	rjmp	.+90     	; 0x10ca <tty_pollTerminal+0x96>
    1070:	80 91 5a 02 	lds	r24, 0x025A
    1074:	82 ff       	sbrs	r24, 2
    1076:	15 c0       	rjmp	.+42     	; 0x10a2 <tty_pollTerminal+0x6e>
    1078:	00 d0       	rcall	.+0      	; 0x107a <tty_pollTerminal+0x46>
    107a:	00 d0       	rcall	.+0      	; 0x107c <tty_pollTerminal+0x48>
    107c:	ed b7       	in	r30, 0x3d	; 61
    107e:	fe b7       	in	r31, 0x3e	; 62
    1080:	31 96       	adiw	r30, 0x01	; 1
    1082:	80 e5       	ldi	r24, 0x50	; 80
    1084:	93 e0       	ldi	r25, 0x03	; 3
    1086:	ad b7       	in	r26, 0x3d	; 61
    1088:	be b7       	in	r27, 0x3e	; 62
    108a:	12 96       	adiw	r26, 0x02	; 2
    108c:	9c 93       	st	X, r25
    108e:	8e 93       	st	-X, r24
    1090:	11 97       	sbiw	r26, 0x01	; 1
    1092:	12 83       	std	Z+2, r17	; 0x02
    1094:	13 82       	std	Z+3, r1	; 0x03
    1096:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
    109a:	0f 90       	pop	r0
    109c:	0f 90       	pop	r0
    109e:	0f 90       	pop	r0
    10a0:	0f 90       	pop	r0
    10a2:	80 91 5b 02 	lds	r24, 0x025B
    10a6:	e8 2f       	mov	r30, r24
    10a8:	f0 e0       	ldi	r31, 0x00	; 0
    10aa:	e4 5c       	subi	r30, 0xC4	; 196
    10ac:	fd 4f       	sbci	r31, 0xFD	; 253
    10ae:	10 83       	st	Z, r17
    10b0:	08 c0       	rjmp	.+16     	; 0x10c2 <tty_pollTerminal+0x8e>
    10b2:	80 91 5b 02 	lds	r24, 0x025B
    10b6:	e8 2f       	mov	r30, r24
    10b8:	f0 e0       	ldi	r31, 0x00	; 0
    10ba:	e4 5c       	subi	r30, 0xC4	; 196
    10bc:	fd 4f       	sbci	r31, 0xFD	; 253
    10be:	90 e2       	ldi	r25, 0x20	; 32
    10c0:	90 83       	st	Z, r25
    10c2:	8f 5f       	subi	r24, 0xFF	; 255
    10c4:	80 93 5b 02 	sts	0x025B, r24
    10c8:	2f c0       	rjmp	.+94     	; 0x1128 <tty_pollTerminal+0xf4>
    10ca:	80 91 5b 02 	lds	r24, 0x025B
    10ce:	88 23       	and	r24, r24
    10d0:	59 f1       	breq	.+86     	; 0x1128 <tty_pollTerminal+0xf4>
    10d2:	80 91 5a 02 	lds	r24, 0x025A
    10d6:	82 ff       	sbrs	r24, 2
    10d8:	27 c0       	rjmp	.+78     	; 0x1128 <tty_pollTerminal+0xf4>
    10da:	00 d0       	rcall	.+0      	; 0x10dc <tty_pollTerminal+0xa8>
    10dc:	8c e4       	ldi	r24, 0x4C	; 76
    10de:	93 e0       	ldi	r25, 0x03	; 3
    10e0:	ed b7       	in	r30, 0x3d	; 61
    10e2:	fe b7       	in	r31, 0x3e	; 62
    10e4:	92 83       	std	Z+2, r25	; 0x02
    10e6:	81 83       	std	Z+1, r24	; 0x01
    10e8:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
    10ec:	80 91 5b 02 	lds	r24, 0x025B
    10f0:	e8 2f       	mov	r30, r24
    10f2:	f0 e0       	ldi	r31, 0x00	; 0
    10f4:	e4 5c       	subi	r30, 0xC4	; 196
    10f6:	fd 4f       	sbci	r31, 0xFD	; 253
    10f8:	10 82       	st	Z, r1
    10fa:	81 50       	subi	r24, 0x01	; 1
    10fc:	80 93 5b 02 	sts	0x025B, r24
    1100:	11 c0       	rjmp	.+34     	; 0x1124 <tty_pollTerminal+0xf0>
    1102:	80 91 5b 02 	lds	r24, 0x025B
    1106:	88 23       	and	r24, r24
    1108:	79 f0       	breq	.+30     	; 0x1128 <tty_pollTerminal+0xf4>
    110a:	00 d0       	rcall	.+0      	; 0x110c <tty_pollTerminal+0xd8>
    110c:	88 e4       	ldi	r24, 0x48	; 72
    110e:	93 e0       	ldi	r25, 0x03	; 3
    1110:	ad b7       	in	r26, 0x3d	; 61
    1112:	be b7       	in	r27, 0x3e	; 62
    1114:	12 96       	adiw	r26, 0x02	; 2
    1116:	9c 93       	st	X, r25
    1118:	8e 93       	st	-X, r24
    111a:	11 97       	sbiw	r26, 0x01	; 1
    111c:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
    1120:	10 92 5b 02 	sts	0x025B, r1
    1124:	0f 90       	pop	r0
    1126:	0f 90       	pop	r0
    1128:	80 91 5b 02 	lds	r24, 0x025B
    112c:	8f 31       	cpi	r24, 0x1F	; 31
    112e:	08 f4       	brcc	.+2      	; 0x1132 <tty_pollTerminal+0xfe>
    1130:	f3 c0       	rjmp	.+486    	; 0x1318 <tty_pollTerminal+0x2e4>
    1132:	10 92 5b 02 	sts	0x025B, r1
    1136:	f0 c0       	rjmp	.+480    	; 0x1318 <tty_pollTerminal+0x2e4>
    1138:	90 91 5a 02 	lds	r25, 0x025A
    113c:	89 2f       	mov	r24, r25
    113e:	83 70       	andi	r24, 0x03	; 3
    1140:	e0 91 5b 02 	lds	r30, 0x025B
    1144:	88 23       	and	r24, r24
    1146:	09 f0       	breq	.+2      	; 0x114a <tty_pollTerminal+0x116>
    1148:	43 c0       	rjmp	.+134    	; 0x11d0 <tty_pollTerminal+0x19c>
    114a:	f0 e0       	ldi	r31, 0x00	; 0
    114c:	e4 5c       	subi	r30, 0xC4	; 196
    114e:	fd 4f       	sbci	r31, 0xFD	; 253
    1150:	10 82       	st	Z, r1
    1152:	10 92 5b 02 	sts	0x025B, r1
    1156:	92 ff       	sbrs	r25, 2
    1158:	0b c0       	rjmp	.+22     	; 0x1170 <tty_pollTerminal+0x13c>
    115a:	00 d0       	rcall	.+0      	; 0x115c <tty_pollTerminal+0x128>
    115c:	85 e4       	ldi	r24, 0x45	; 69
    115e:	93 e0       	ldi	r25, 0x03	; 3
    1160:	ed b7       	in	r30, 0x3d	; 61
    1162:	fe b7       	in	r31, 0x3e	; 62
    1164:	92 83       	std	Z+2, r25	; 0x02
    1166:	81 83       	std	Z+1, r24	; 0x01
    1168:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
    116c:	0f 90       	pop	r0
    116e:	0f 90       	pop	r0
    1170:	8c e3       	ldi	r24, 0x3C	; 60
    1172:	92 e0       	ldi	r25, 0x02	; 2
    1174:	0e 94 cd 07 	call	0xf9a	; 0xf9a <tty_executeCmd>
    1178:	89 2b       	or	r24, r25
    117a:	31 f0       	breq	.+12     	; 0x1188 <tty_pollTerminal+0x154>
    117c:	80 91 5a 02 	lds	r24, 0x025A
    1180:	83 70       	andi	r24, 0x03	; 3
    1182:	09 f0       	breq	.+2      	; 0x1186 <tty_pollTerminal+0x152>
    1184:	c9 c0       	rjmp	.+402    	; 0x1318 <tty_pollTerminal+0x2e4>
    1186:	11 c0       	rjmp	.+34     	; 0x11aa <tty_pollTerminal+0x176>
    1188:	80 91 3c 02 	lds	r24, 0x023C
    118c:	88 23       	and	r24, r24
    118e:	69 f0       	breq	.+26     	; 0x11aa <tty_pollTerminal+0x176>
    1190:	00 d0       	rcall	.+0      	; 0x1192 <tty_pollTerminal+0x15e>
    1192:	81 e4       	ldi	r24, 0x41	; 65
    1194:	93 e0       	ldi	r25, 0x03	; 3
    1196:	ad b7       	in	r26, 0x3d	; 61
    1198:	be b7       	in	r27, 0x3e	; 62
    119a:	12 96       	adiw	r26, 0x02	; 2
    119c:	9c 93       	st	X, r25
    119e:	8e 93       	st	-X, r24
    11a0:	11 97       	sbiw	r26, 0x01	; 1
    11a2:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
    11a6:	0f 90       	pop	r0
    11a8:	0f 90       	pop	r0
    11aa:	00 d0       	rcall	.+0      	; 0x11ac <tty_pollTerminal+0x178>
    11ac:	8e e3       	ldi	r24, 0x3E	; 62
    11ae:	93 e0       	ldi	r25, 0x03	; 3
    11b0:	ed b7       	in	r30, 0x3d	; 61
    11b2:	fe b7       	in	r31, 0x3e	; 62
    11b4:	92 83       	std	Z+2, r25	; 0x02
    11b6:	81 83       	std	Z+1, r24	; 0x01
    11b8:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
    11bc:	80 91 5a 02 	lds	r24, 0x025A
    11c0:	0f 90       	pop	r0
    11c2:	0f 90       	pop	r0
    11c4:	82 ff       	sbrs	r24, 2
    11c6:	a8 c0       	rjmp	.+336    	; 0x1318 <tty_pollTerminal+0x2e4>
    11c8:	00 d0       	rcall	.+0      	; 0x11ca <tty_pollTerminal+0x196>
    11ca:	8c e3       	ldi	r24, 0x3C	; 60
    11cc:	93 e0       	ldi	r25, 0x03	; 3
    11ce:	9a c0       	rjmp	.+308    	; 0x1304 <tty_pollTerminal+0x2d0>
    11d0:	f0 e0       	ldi	r31, 0x00	; 0
    11d2:	0c e3       	ldi	r16, 0x3C	; 60
    11d4:	12 e0       	ldi	r17, 0x02	; 2
    11d6:	e0 0f       	add	r30, r16
    11d8:	f1 1f       	adc	r31, r17
    11da:	10 82       	st	Z, r1
    11dc:	10 92 5b 02 	sts	0x025B, r1
    11e0:	c8 01       	movw	r24, r16
    11e2:	6a e3       	ldi	r22, 0x3A	; 58
    11e4:	73 e0       	ldi	r23, 0x03	; 3
    11e6:	0e 94 f0 0f 	call	0x1fe0	; 0x1fe0 <strcmp_P>
    11ea:	89 2b       	or	r24, r25
    11ec:	c1 f5       	brne	.+112    	; 0x125e <tty_pollTerminal+0x22a>
    11ee:	00 d0       	rcall	.+0      	; 0x11f0 <tty_pollTerminal+0x1bc>
    11f0:	87 e3       	ldi	r24, 0x37	; 55
    11f2:	93 e0       	ldi	r25, 0x03	; 3
    11f4:	ed b7       	in	r30, 0x3d	; 61
    11f6:	fe b7       	in	r31, 0x3e	; 62
    11f8:	92 83       	std	Z+2, r25	; 0x02
    11fa:	81 83       	std	Z+1, r24	; 0x01
    11fc:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
    1200:	80 91 5a 02 	lds	r24, 0x025A
    1204:	0f 90       	pop	r0
    1206:	0f 90       	pop	r0
    1208:	82 ff       	sbrs	r24, 2
    120a:	0d c0       	rjmp	.+26     	; 0x1226 <tty_pollTerminal+0x1f2>
    120c:	00 d0       	rcall	.+0      	; 0x120e <tty_pollTerminal+0x1da>
    120e:	85 e3       	ldi	r24, 0x35	; 53
    1210:	93 e0       	ldi	r25, 0x03	; 3
    1212:	ad b7       	in	r26, 0x3d	; 61
    1214:	be b7       	in	r27, 0x3e	; 62
    1216:	12 96       	adiw	r26, 0x02	; 2
    1218:	9c 93       	st	X, r25
    121a:	8e 93       	st	-X, r24
    121c:	11 97       	sbiw	r26, 0x01	; 1
    121e:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
    1222:	0f 90       	pop	r0
    1224:	0f 90       	pop	r0
    1226:	80 91 5a 02 	lds	r24, 0x025A
    122a:	83 70       	andi	r24, 0x03	; 3
    122c:	81 30       	cpi	r24, 0x01	; 1
    122e:	49 f4       	brne	.+18     	; 0x1242 <tty_pollTerminal+0x20e>
    1230:	80 91 5c 02 	lds	r24, 0x025C
    1234:	80 93 1e 01 	sts	0x011E, r24
    1238:	80 93 ae 01 	sts	0x01AE, r24
    123c:	10 92 af 01 	sts	0x01AF, r1
    1240:	06 c0       	rjmp	.+12     	; 0x124e <tty_pollTerminal+0x21a>
    1242:	82 30       	cpi	r24, 0x02	; 2
    1244:	21 f4       	brne	.+8      	; 0x124e <tty_pollTerminal+0x21a>
    1246:	80 91 5c 02 	lds	r24, 0x025C
    124a:	80 93 1c 01 	sts	0x011C, r24
    124e:	10 92 5c 02 	sts	0x025C, r1
    1252:	80 91 5a 02 	lds	r24, 0x025A
    1256:	8c 7f       	andi	r24, 0xFC	; 252
    1258:	80 93 5a 02 	sts	0x025A, r24
    125c:	5d c0       	rjmp	.+186    	; 0x1318 <tty_pollTerminal+0x2e4>
    125e:	1a 82       	std	Y+2, r1	; 0x02
    1260:	19 82       	std	Y+1, r1	; 0x01
    1262:	00 d0       	rcall	.+0      	; 0x1264 <tty_pollTerminal+0x230>
    1264:	00 d0       	rcall	.+0      	; 0x1266 <tty_pollTerminal+0x232>
    1266:	00 d0       	rcall	.+0      	; 0x1268 <tty_pollTerminal+0x234>
    1268:	ed b7       	in	r30, 0x3d	; 61
    126a:	fe b7       	in	r31, 0x3e	; 62
    126c:	31 96       	adiw	r30, 0x01	; 1
    126e:	ad b7       	in	r26, 0x3d	; 61
    1270:	be b7       	in	r27, 0x3e	; 62
    1272:	12 96       	adiw	r26, 0x02	; 2
    1274:	1c 93       	st	X, r17
    1276:	0e 93       	st	-X, r16
    1278:	11 97       	sbiw	r26, 0x01	; 1
    127a:	87 e0       	ldi	r24, 0x07	; 7
    127c:	91 e0       	ldi	r25, 0x01	; 1
    127e:	93 83       	std	Z+3, r25	; 0x03
    1280:	82 83       	std	Z+2, r24	; 0x02
    1282:	ce 01       	movw	r24, r28
    1284:	01 96       	adiw	r24, 0x01	; 1
    1286:	95 83       	std	Z+5, r25	; 0x05
    1288:	84 83       	std	Z+4, r24	; 0x04
    128a:	0e 94 c2 10 	call	0x2184	; 0x2184 <sscanf>
    128e:	ed b7       	in	r30, 0x3d	; 61
    1290:	fe b7       	in	r31, 0x3e	; 62
    1292:	36 96       	adiw	r30, 0x06	; 6
    1294:	ed bf       	out	0x3d, r30	; 61
    1296:	89 2b       	or	r24, r25
    1298:	51 f1       	breq	.+84     	; 0x12ee <tty_pollTerminal+0x2ba>
    129a:	f8 01       	movw	r30, r16
    129c:	01 90       	ld	r0, Z+
    129e:	00 20       	and	r0, r0
    12a0:	e9 f7       	brne	.-6      	; 0x129c <tty_pollTerminal+0x268>
    12a2:	e1 54       	subi	r30, 0x41	; 65
    12a4:	f2 40       	sbci	r31, 0x02	; 2
    12a6:	19 f5       	brne	.+70     	; 0x12ee <tty_pollTerminal+0x2ba>
    12a8:	80 91 5a 02 	lds	r24, 0x025A
    12ac:	83 70       	andi	r24, 0x03	; 3
    12ae:	81 30       	cpi	r24, 0x01	; 1
    12b0:	31 f4       	brne	.+12     	; 0x12be <tty_pollTerminal+0x28a>
    12b2:	e0 91 5c 02 	lds	r30, 0x025C
    12b6:	f0 e0       	ldi	r31, 0x00	; 0
    12b8:	e1 5e       	subi	r30, 0xE1	; 225
    12ba:	fe 4f       	sbci	r31, 0xFE	; 254
    12bc:	07 c0       	rjmp	.+14     	; 0x12cc <tty_pollTerminal+0x298>
    12be:	82 30       	cpi	r24, 0x02	; 2
    12c0:	39 f4       	brne	.+14     	; 0x12d0 <tty_pollTerminal+0x29c>
    12c2:	e0 91 5c 02 	lds	r30, 0x025C
    12c6:	f0 e0       	ldi	r31, 0x00	; 0
    12c8:	ef 54       	subi	r30, 0x4F	; 79
    12ca:	fd 4f       	sbci	r31, 0xFD	; 253
    12cc:	89 81       	ldd	r24, Y+1	; 0x01
    12ce:	80 83       	st	Z, r24
    12d0:	80 91 5c 02 	lds	r24, 0x025C
    12d4:	8f 5f       	subi	r24, 0xFF	; 255
    12d6:	80 93 5c 02 	sts	0x025C, r24
    12da:	00 d0       	rcall	.+0      	; 0x12dc <tty_pollTerminal+0x2a8>
    12dc:	82 e3       	ldi	r24, 0x32	; 50
    12de:	93 e0       	ldi	r25, 0x03	; 3
    12e0:	ad b7       	in	r26, 0x3d	; 61
    12e2:	be b7       	in	r27, 0x3e	; 62
    12e4:	12 96       	adiw	r26, 0x02	; 2
    12e6:	9c 93       	st	X, r25
    12e8:	8e 93       	st	-X, r24
    12ea:	11 97       	sbiw	r26, 0x01	; 1
    12ec:	07 c0       	rjmp	.+14     	; 0x12fc <tty_pollTerminal+0x2c8>
    12ee:	00 d0       	rcall	.+0      	; 0x12f0 <tty_pollTerminal+0x2bc>
    12f0:	8f e2       	ldi	r24, 0x2F	; 47
    12f2:	93 e0       	ldi	r25, 0x03	; 3
    12f4:	ed b7       	in	r30, 0x3d	; 61
    12f6:	fe b7       	in	r31, 0x3e	; 62
    12f8:	92 83       	std	Z+2, r25	; 0x02
    12fa:	81 83       	std	Z+1, r24	; 0x01
    12fc:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
    1300:	8c e2       	ldi	r24, 0x2C	; 44
    1302:	93 e0       	ldi	r25, 0x03	; 3
    1304:	ad b7       	in	r26, 0x3d	; 61
    1306:	be b7       	in	r27, 0x3e	; 62
    1308:	12 96       	adiw	r26, 0x02	; 2
    130a:	9c 93       	st	X, r25
    130c:	8e 93       	st	-X, r24
    130e:	11 97       	sbiw	r26, 0x01	; 1
    1310:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
    1314:	0f 90       	pop	r0
    1316:	0f 90       	pop	r0
    1318:	22 96       	adiw	r28, 0x02	; 2
    131a:	cd bf       	out	0x3d, r28	; 61
    131c:	cf 91       	pop	r28
    131e:	df 91       	pop	r29
    1320:	1f 91       	pop	r17
    1322:	0f 91       	pop	r16
    1324:	08 95       	ret

00001326 <usbReset>:
    1326:	29 98       	cbi	0x05, 1	; 5
    1328:	53 9a       	sbi	0x0a, 3	; 10
    132a:	2d e0       	ldi	r18, 0x0D	; 13
    132c:	44 ef       	ldi	r20, 0xF4	; 244
    132e:	51 e0       	ldi	r21, 0x01	; 1
    1330:	32 e0       	ldi	r19, 0x02	; 2
    1332:	88 ec       	ldi	r24, 0xC8	; 200
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	fa 01       	movw	r30, r20
    1338:	31 97       	sbiw	r30, 0x01	; 1
    133a:	f1 f7       	brne	.-4      	; 0x1338 <usbReset+0x12>
    133c:	01 97       	sbiw	r24, 0x01	; 1
    133e:	d9 f7       	brne	.-10     	; 0x1336 <usbReset+0x10>
    1340:	85 b1       	in	r24, 0x05	; 5
    1342:	83 27       	eor	r24, r19
    1344:	85 b9       	out	0x05, r24	; 5
    1346:	21 50       	subi	r18, 0x01	; 1
    1348:	a1 f7       	brne	.-24     	; 0x1332 <usbReset+0xc>
    134a:	53 98       	cbi	0x0a, 3	; 10
    134c:	29 9a       	sbi	0x05, 1	; 5
    134e:	08 95       	ret

00001350 <usbFunctionRead>:
    1350:	0f 93       	push	r16
    1352:	1f 93       	push	r17
    1354:	cf 93       	push	r28
    1356:	df 93       	push	r29
    1358:	8c 01       	movw	r16, r24
    135a:	70 91 02 02 	lds	r23, 0x0202
    135e:	76 17       	cp	r23, r22
    1360:	08 f4       	brcc	.+2      	; 0x1364 <usbFunctionRead+0x14>
    1362:	67 2f       	mov	r22, r23
    1364:	45 98       	cbi	0x08, 5	; 8
    1366:	80 91 1c 01 	lds	r24, 0x011C
    136a:	90 e0       	ldi	r25, 0x00	; 0
    136c:	87 1b       	sub	r24, r23
    136e:	91 09       	sbc	r25, r1
    1370:	ec 01       	movw	r28, r24
    1372:	cf 54       	subi	r28, 0x4F	; 79
    1374:	dd 4f       	sbci	r29, 0xFD	; 253
    1376:	9c 01       	movw	r18, r24
    1378:	2f 5f       	subi	r18, 0xFF	; 255
    137a:	3f 4f       	sbci	r19, 0xFF	; 255
    137c:	40 e0       	ldi	r20, 0x00	; 0
    137e:	50 e0       	ldi	r21, 0x00	; 0
    1380:	15 c0       	rjmp	.+42     	; 0x13ac <usbFunctionRead+0x5c>
    1382:	d9 01       	movw	r26, r18
    1384:	11 96       	adiw	r26, 0x01	; 1
    1386:	80 91 1c 01 	lds	r24, 0x011C
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	82 17       	cp	r24, r18
    138e:	93 07       	cpc	r25, r19
    1390:	48 f0       	brcs	.+18     	; 0x13a4 <usbFunctionRead+0x54>
    1392:	f8 01       	movw	r30, r16
    1394:	e4 0f       	add	r30, r20
    1396:	f5 1f       	adc	r31, r21
    1398:	89 91       	ld	r24, Y+
    139a:	80 83       	st	Z, r24
    139c:	4f 5f       	subi	r20, 0xFF	; 255
    139e:	5f 4f       	sbci	r21, 0xFF	; 255
    13a0:	9d 01       	movw	r18, r26
    13a2:	04 c0       	rjmp	.+8      	; 0x13ac <usbFunctionRead+0x5c>
    13a4:	45 9a       	sbi	0x08, 5	; 8
    13a6:	10 92 02 02 	sts	0x0202, r1
    13aa:	0a c0       	rjmp	.+20     	; 0x13c0 <usbFunctionRead+0x70>
    13ac:	e4 2f       	mov	r30, r20
    13ae:	46 17       	cp	r20, r22
    13b0:	40 f3       	brcs	.-48     	; 0x1382 <usbFunctionRead+0x32>
    13b2:	79 30       	cpi	r23, 0x09	; 9
    13b4:	08 f4       	brcc	.+2      	; 0x13b8 <usbFunctionRead+0x68>
    13b6:	45 9a       	sbi	0x08, 5	; 8
    13b8:	76 1b       	sub	r23, r22
    13ba:	70 93 02 02 	sts	0x0202, r23
    13be:	e6 2f       	mov	r30, r22
    13c0:	8e 2f       	mov	r24, r30
    13c2:	df 91       	pop	r29
    13c4:	cf 91       	pop	r28
    13c6:	1f 91       	pop	r17
    13c8:	0f 91       	pop	r16
    13ca:	08 95       	ret

000013cc <usbFunctionDescriptor>:
    13cc:	fc 01       	movw	r30, r24
    13ce:	83 81       	ldd	r24, Z+3	; 0x03
    13d0:	81 32       	cpi	r24, 0x21	; 33
    13d2:	41 f4       	brne	.+16     	; 0x13e4 <usbFunctionDescriptor+0x18>
    13d4:	87 ea       	ldi	r24, 0xA7	; 167
    13d6:	91 e0       	ldi	r25, 0x01	; 1
    13d8:	90 93 21 02 	sts	0x0221, r25
    13dc:	80 93 20 02 	sts	0x0220, r24
    13e0:	80 e1       	ldi	r24, 0x10	; 16
    13e2:	08 95       	ret
    13e4:	82 30       	cpi	r24, 0x02	; 2
    13e6:	41 f4       	brne	.+16     	; 0x13f8 <usbFunctionDescriptor+0x2c>
    13e8:	85 e9       	ldi	r24, 0x95	; 149
    13ea:	91 e0       	ldi	r25, 0x01	; 1
    13ec:	90 93 21 02 	sts	0x0221, r25
    13f0:	80 93 20 02 	sts	0x0220, r24
    13f4:	82 e2       	ldi	r24, 0x22	; 34
    13f6:	08 95       	ret
    13f8:	81 30       	cpi	r24, 0x01	; 1
    13fa:	41 f4       	brne	.+16     	; 0x140c <usbFunctionDescriptor+0x40>
    13fc:	83 e8       	ldi	r24, 0x83	; 131
    13fe:	91 e0       	ldi	r25, 0x01	; 1
    1400:	90 93 21 02 	sts	0x0221, r25
    1404:	80 93 20 02 	sts	0x0220, r24
    1408:	82 e1       	ldi	r24, 0x12	; 18
    140a:	08 95       	ret
    140c:	82 32       	cpi	r24, 0x22	; 34
    140e:	49 f4       	brne	.+18     	; 0x1422 <usbFunctionDescriptor+0x56>
    1410:	8f e1       	ldi	r24, 0x1F	; 31
    1412:	91 e0       	ldi	r25, 0x01	; 1
    1414:	90 93 21 02 	sts	0x0221, r25
    1418:	80 93 20 02 	sts	0x0220, r24
    141c:	80 91 1e 01 	lds	r24, 0x011E
    1420:	08 95       	ret
    1422:	83 30       	cpi	r24, 0x03	; 3
    1424:	11 f5       	brne	.+68     	; 0x146a <usbFunctionDescriptor+0x9e>
    1426:	82 81       	ldd	r24, Z+2	; 0x02
    1428:	81 30       	cpi	r24, 0x01	; 1
    142a:	49 f4       	brne	.+18     	; 0x143e <usbFunctionDescriptor+0x72>
    142c:	87 e8       	ldi	r24, 0x87	; 135
    142e:	92 e0       	ldi	r25, 0x02	; 2
    1430:	90 93 21 02 	sts	0x0221, r25
    1434:	80 93 20 02 	sts	0x0220, r24
    1438:	80 91 87 02 	lds	r24, 0x0287
    143c:	08 95       	ret
    143e:	82 30       	cpi	r24, 0x02	; 2
    1440:	49 f4       	brne	.+18     	; 0x1454 <usbFunctionDescriptor+0x88>
    1442:	81 e3       	ldi	r24, 0x31	; 49
    1444:	93 e0       	ldi	r25, 0x03	; 3
    1446:	90 93 21 02 	sts	0x0221, r25
    144a:	80 93 20 02 	sts	0x0220, r24
    144e:	80 91 31 03 	lds	r24, 0x0331
    1452:	08 95       	ret
    1454:	83 30       	cpi	r24, 0x03	; 3
    1456:	49 f4       	brne	.+18     	; 0x146a <usbFunctionDescriptor+0x9e>
    1458:	8d e5       	ldi	r24, 0x5D	; 93
    145a:	92 e0       	ldi	r25, 0x02	; 2
    145c:	90 93 21 02 	sts	0x0221, r25
    1460:	80 93 20 02 	sts	0x0220, r24
    1464:	80 91 5d 02 	lds	r24, 0x025D
    1468:	08 95       	ret
    146a:	80 e0       	ldi	r24, 0x00	; 0
    146c:	08 95       	ret

0000146e <usbFunctionSetup>:
    146e:	fc 01       	movw	r30, r24
    1470:	80 81       	ld	r24, Z
    1472:	80 76       	andi	r24, 0x60	; 96
    1474:	80 32       	cpi	r24, 0x20	; 32
    1476:	01 f5       	brne	.+64     	; 0x14b8 <usbFunctionSetup+0x4a>
    1478:	81 81       	ldd	r24, Z+1	; 0x01
    147a:	81 30       	cpi	r24, 0x01	; 1
    147c:	61 f4       	brne	.+24     	; 0x1496 <usbFunctionSetup+0x28>
    147e:	80 91 1c 01 	lds	r24, 0x011C
    1482:	80 93 02 02 	sts	0x0202, r24
    1486:	81 eb       	ldi	r24, 0xB1	; 177
    1488:	92 e0       	ldi	r25, 0x02	; 2
    148a:	90 93 21 02 	sts	0x0221, r25
    148e:	80 93 20 02 	sts	0x0220, r24
    1492:	8f ef       	ldi	r24, 0xFF	; 255
    1494:	08 95       	ret
    1496:	82 30       	cpi	r24, 0x02	; 2
    1498:	41 f4       	brne	.+16     	; 0x14aa <usbFunctionSetup+0x3c>
    149a:	83 e0       	ldi	r24, 0x03	; 3
    149c:	92 e0       	ldi	r25, 0x02	; 2
    149e:	90 93 21 02 	sts	0x0221, r25
    14a2:	80 93 20 02 	sts	0x0220, r24
    14a6:	81 e0       	ldi	r24, 0x01	; 1
    14a8:	08 95       	ret
    14aa:	8a 30       	cpi	r24, 0x0A	; 10
    14ac:	29 f4       	brne	.+10     	; 0x14b8 <usbFunctionSetup+0x4a>
    14ae:	83 81       	ldd	r24, Z+3	; 0x03
    14b0:	80 93 03 02 	sts	0x0203, r24
    14b4:	80 e0       	ldi	r24, 0x00	; 0
    14b6:	08 95       	ret
    14b8:	80 e0       	ldi	r24, 0x00	; 0
    14ba:	08 95       	ret

000014bc <init>:
    14bc:	cf 93       	push	r28
    14be:	df 93       	push	r29
    14c0:	21 9a       	sbi	0x04, 1	; 4
    14c2:	29 9a       	sbi	0x05, 1	; 5
    14c4:	3c 9a       	sbi	0x07, 4	; 7
    14c6:	44 9a       	sbi	0x08, 4	; 8
    14c8:	3d 9a       	sbi	0x07, 5	; 7
    14ca:	45 9a       	sbi	0x08, 5	; 8
    14cc:	8a b1       	in	r24, 0x0a	; 10
    14ce:	8a b9       	out	0x0a, r24	; 10
    14d0:	5e 9a       	sbi	0x0b, 6	; 11
    14d2:	0e 94 21 05 	call	0xa42	; 0xa42 <tty_init>
    14d6:	80 e0       	ldi	r24, 0x00	; 0
    14d8:	90 e0       	ldi	r25, 0x00	; 0
    14da:	0e 94 7e 11 	call	0x22fc	; 0x22fc <__eerd_byte_m168>
    14de:	90 91 fe 01 	lds	r25, 0x01FE
    14e2:	90 93 87 01 	sts	0x0187, r25
    14e6:	90 91 ff 01 	lds	r25, 0x01FF
    14ea:	90 93 88 01 	sts	0x0188, r25
    14ee:	90 91 1d 01 	lds	r25, 0x011D
    14f2:	90 93 a3 01 	sts	0x01A3, r25
    14f6:	90 91 00 02 	lds	r25, 0x0200
    14fa:	90 93 a4 01 	sts	0x01A4, r25
    14fe:	90 91 01 02 	lds	r25, 0x0201
    1502:	90 93 a5 01 	sts	0x01A5, r25
    1506:	c8 2f       	mov	r28, r24
    1508:	80 ff       	sbrs	r24, 0
    150a:	03 c0       	rjmp	.+6      	; 0x1512 <init+0x56>
    150c:	0e 94 4c 04 	call	0x898	; 0x898 <eep_readUSBHidReportDescriptor>
    1510:	04 c0       	rjmp	.+8      	; 0x151a <init+0x5e>
    1512:	80 91 1e 01 	lds	r24, 0x011E
    1516:	80 93 ae 01 	sts	0x01AE, r24
    151a:	c1 ff       	sbrs	r28, 1
    151c:	03 c0       	rjmp	.+6      	; 0x1524 <init+0x68>
    151e:	0e 94 2e 04 	call	0x85c	; 0x85c <eep_readUSBDescriptorStringVendor>
    1522:	36 c0       	rjmp	.+108    	; 0x1590 <init+0xd4>
    1524:	82 e1       	ldi	r24, 0x12	; 18
    1526:	93 e0       	ldi	r25, 0x03	; 3
    1528:	90 93 88 02 	sts	0x0288, r25
    152c:	80 93 87 02 	sts	0x0287, r24
    1530:	8b e6       	ldi	r24, 0x6B	; 107
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	90 93 8a 02 	sts	0x028A, r25
    1538:	80 93 89 02 	sts	0x0289, r24
    153c:	8c e6       	ldi	r24, 0x6C	; 108
    153e:	90 e0       	ldi	r25, 0x00	; 0
    1540:	90 93 8c 02 	sts	0x028C, r25
    1544:	80 93 8b 02 	sts	0x028B, r24
    1548:	81 e6       	ldi	r24, 0x61	; 97
    154a:	90 e0       	ldi	r25, 0x00	; 0
    154c:	90 93 8e 02 	sts	0x028E, r25
    1550:	80 93 8d 02 	sts	0x028D, r24
    1554:	85 e7       	ldi	r24, 0x75	; 117
    1556:	90 e0       	ldi	r25, 0x00	; 0
    1558:	90 93 90 02 	sts	0x0290, r25
    155c:	80 93 8f 02 	sts	0x028F, r24
    1560:	84 e7       	ldi	r24, 0x74	; 116
    1562:	90 e0       	ldi	r25, 0x00	; 0
    1564:	90 93 92 02 	sts	0x0292, r25
    1568:	80 93 91 02 	sts	0x0291, r24
    156c:	85 e6       	ldi	r24, 0x65	; 101
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	90 93 94 02 	sts	0x0294, r25
    1574:	80 93 93 02 	sts	0x0293, r24
    1578:	87 e2       	ldi	r24, 0x27	; 39
    157a:	90 e0       	ldi	r25, 0x00	; 0
    157c:	90 93 96 02 	sts	0x0296, r25
    1580:	80 93 95 02 	sts	0x0295, r24
    1584:	83 e7       	ldi	r24, 0x73	; 115
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	90 93 98 02 	sts	0x0298, r25
    158c:	80 93 97 02 	sts	0x0297, r24
    1590:	c2 ff       	sbrs	r28, 2
    1592:	03 c0       	rjmp	.+6      	; 0x159a <init+0xde>
    1594:	0e 94 23 04 	call	0x846	; 0x846 <eep_readUSBDescriptorStringDevice>
    1598:	38 c0       	rjmp	.+112    	; 0x160a <init+0x14e>
    159a:	84 e1       	ldi	r24, 0x14	; 20
    159c:	93 e0       	ldi	r25, 0x03	; 3
    159e:	90 93 32 03 	sts	0x0332, r25
    15a2:	80 93 31 03 	sts	0x0331, r24
    15a6:	88 e4       	ldi	r24, 0x48	; 72
    15a8:	90 e0       	ldi	r25, 0x00	; 0
    15aa:	90 93 34 03 	sts	0x0334, r25
    15ae:	80 93 33 03 	sts	0x0333, r24
    15b2:	81 e6       	ldi	r24, 0x61	; 97
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	90 93 36 03 	sts	0x0336, r25
    15ba:	80 93 35 03 	sts	0x0335, r24
    15be:	43 e6       	ldi	r20, 0x63	; 99
    15c0:	50 e0       	ldi	r21, 0x00	; 0
    15c2:	50 93 38 03 	sts	0x0338, r21
    15c6:	40 93 37 03 	sts	0x0337, r20
    15ca:	2b e6       	ldi	r18, 0x6B	; 107
    15cc:	30 e0       	ldi	r19, 0x00	; 0
    15ce:	30 93 3a 03 	sts	0x033A, r19
    15d2:	20 93 39 03 	sts	0x0339, r18
    15d6:	83 e5       	ldi	r24, 0x53	; 83
    15d8:	90 e0       	ldi	r25, 0x00	; 0
    15da:	90 93 3c 03 	sts	0x033C, r25
    15de:	80 93 3b 03 	sts	0x033B, r24
    15e2:	84 e7       	ldi	r24, 0x74	; 116
    15e4:	90 e0       	ldi	r25, 0x00	; 0
    15e6:	90 93 3e 03 	sts	0x033E, r25
    15ea:	80 93 3d 03 	sts	0x033D, r24
    15ee:	89 e6       	ldi	r24, 0x69	; 105
    15f0:	90 e0       	ldi	r25, 0x00	; 0
    15f2:	90 93 40 03 	sts	0x0340, r25
    15f6:	80 93 3f 03 	sts	0x033F, r24
    15fa:	50 93 42 03 	sts	0x0342, r21
    15fe:	40 93 41 03 	sts	0x0341, r20
    1602:	30 93 44 03 	sts	0x0344, r19
    1606:	20 93 43 03 	sts	0x0343, r18
    160a:	c3 ff       	sbrs	r28, 3
    160c:	03 c0       	rjmp	.+6      	; 0x1614 <init+0x158>
    160e:	0e 94 18 04 	call	0x830	; 0x830 <eep_readUSBDescriptorStringSerialNumber>
    1612:	1c c0       	rjmp	.+56     	; 0x164c <init+0x190>
    1614:	8a e0       	ldi	r24, 0x0A	; 10
    1616:	93 e0       	ldi	r25, 0x03	; 3
    1618:	90 93 5e 02 	sts	0x025E, r25
    161c:	80 93 5d 02 	sts	0x025D, r24
    1620:	20 e3       	ldi	r18, 0x30	; 48
    1622:	30 e0       	ldi	r19, 0x00	; 0
    1624:	30 93 60 02 	sts	0x0260, r19
    1628:	20 93 5f 02 	sts	0x025F, r18
    162c:	8e e2       	ldi	r24, 0x2E	; 46
    162e:	90 e0       	ldi	r25, 0x00	; 0
    1630:	90 93 62 02 	sts	0x0262, r25
    1634:	80 93 61 02 	sts	0x0261, r24
    1638:	30 93 64 02 	sts	0x0264, r19
    163c:	20 93 63 02 	sts	0x0263, r18
    1640:	86 e3       	ldi	r24, 0x36	; 54
    1642:	90 e0       	ldi	r25, 0x00	; 0
    1644:	90 93 66 02 	sts	0x0266, r25
    1648:	80 93 65 02 	sts	0x0265, r24
    164c:	c4 ff       	sbrs	r28, 4
    164e:	02 c0       	rjmp	.+4      	; 0x1654 <init+0x198>
    1650:	0e 94 fe 03 	call	0x7fc	; 0x7fc <eep_readUSBCfgVendorID>
    1654:	c5 ff       	sbrs	r28, 5
    1656:	02 c0       	rjmp	.+4      	; 0x165c <init+0x1a0>
    1658:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <eep_readUSBCfgDeviceID>
    165c:	c6 ff       	sbrs	r28, 6
    165e:	02 c0       	rjmp	.+4      	; 0x1664 <init+0x1a8>
    1660:	0e 94 39 04 	call	0x872	; 0x872 <eep_readUSBHidReportData>
    1664:	0e 94 da 01 	call	0x3b4	; 0x3b4 <usbInit>
    1668:	0e 94 93 09 	call	0x1326	; 0x1326 <usbReset>
    166c:	78 94       	sei
    166e:	00 d0       	rcall	.+0      	; 0x1670 <init+0x1b4>
    1670:	88 e8       	ldi	r24, 0x88	; 136
    1672:	90 e0       	ldi	r25, 0x00	; 0
    1674:	ed b7       	in	r30, 0x3d	; 61
    1676:	fe b7       	in	r31, 0x3e	; 62
    1678:	92 83       	std	Z+2, r25	; 0x02
    167a:	81 83       	std	Z+1, r24	; 0x01
    167c:	0e 94 9c 10 	call	0x2138	; 0x2138 <printf_P>
    1680:	0f 90       	pop	r0
    1682:	0f 90       	pop	r0
    1684:	df 91       	pop	r29
    1686:	cf 91       	pop	r28
    1688:	08 95       	ret

0000168a <main>:
    168a:	0e 94 5e 0a 	call	0x14bc	; 0x14bc <init>
    168e:	c0 e5       	ldi	r28, 0x50	; 80
    1690:	d3 ec       	ldi	r29, 0xC3	; 195
    1692:	0e 94 09 02 	call	0x412	; 0x412 <usbPoll>
    1696:	0e 94 1a 08 	call	0x1034	; 0x1034 <tty_pollTerminal>
    169a:	ce 01       	movw	r24, r28
    169c:	01 97       	sbiw	r24, 0x01	; 1
    169e:	f1 f7       	brne	.-4      	; 0x169c <main+0x12>
    16a0:	f8 cf       	rjmp	.-16     	; 0x1692 <main+0x8>

000016a2 <usbCrc16>:
;   poly    r20+r21
;   scratch r23
;   resCrc  r24+r25 / r16+r17
;   ptr     X / Z
usbCrc16:
    mov     ptrL, argPtrL
    16a2:	a8 2f       	mov	r26, r24
    mov     ptrH, argPtrH
    16a4:	b9 2f       	mov	r27, r25
    ldi     resCrcL, 0
    16a6:	80 e0       	ldi	r24, 0x00	; 0
    ldi     resCrcH, 0
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    ldi     polyL, lo8(0xa001)
    16aa:	41 e0       	ldi	r20, 0x01	; 1
    ldi     polyH, hi8(0xa001)
    16ac:	50 ea       	ldi	r21, 0xA0	; 160
    com     argLen      ; argLen = -argLen - 1: modified loop to ensure that carry is set
    16ae:	60 95       	com	r22
    ldi     bitCnt, 0   ; loop counter with starnd condition = end condition
    16b0:	30 e0       	ldi	r19, 0x00	; 0
    rjmp    usbCrcLoopEntry
    16b2:	09 c0       	rjmp	.+18     	; 0x16c6 <usbCrcLoopEntry>

000016b4 <usbCrcByteLoop>:
usbCrcByteLoop:
    ld      byte, ptr+
    16b4:	2d 91       	ld	r18, X+
    eor     resCrcL, byte
    16b6:	82 27       	eor	r24, r18

000016b8 <usbCrcBitLoop>:
usbCrcBitLoop:
    ror     resCrcH     ; carry is always set here (see brcs jumps to here)
    16b8:	97 95       	ror	r25
    ror     resCrcL
    16ba:	87 95       	ror	r24
    brcs    usbCrcNoXor
    16bc:	10 f0       	brcs	.+4      	; 0x16c2 <usbCrcNoXor>
    eor     resCrcL, polyL
    16be:	84 27       	eor	r24, r20
    eor     resCrcH, polyH
    16c0:	95 27       	eor	r25, r21

000016c2 <usbCrcNoXor>:
usbCrcNoXor:
    subi    bitCnt, 224 ; (8 * 224) % 256 = 0; this loop iterates 8 times
    16c2:	30 5e       	subi	r19, 0xE0	; 224
    brcs    usbCrcBitLoop
    16c4:	c8 f3       	brcs	.-14     	; 0x16b8 <usbCrcBitLoop>

000016c6 <usbCrcLoopEntry>:
usbCrcLoopEntry:
    subi    argLen, -1
    16c6:	6f 5f       	subi	r22, 0xFF	; 255
    brcs    usbCrcByteLoop
    16c8:	a8 f3       	brcs	.-22     	; 0x16b4 <usbCrcByteLoop>

000016ca <usbCrcReady>:
usbCrcReady:
    ret
    16ca:	08 95       	ret

000016cc <usbCrc16Append>:

#endif /* USB_USE_FAST_CRC */

; extern unsigned usbCrc16Append(unsigned char *data, unsigned char len);
usbCrc16Append:
    rcall   usbCrc16
    16cc:	ea df       	rcall	.-44     	; 0x16a2 <usbCrc16>
    st      ptr+, resCrcL
    16ce:	8d 93       	st	X+, r24
    st      ptr+, resCrcH
    16d0:	9d 93       	st	X+, r25
    ret
    16d2:	08 95       	ret

000016d4 <__vector_1>:
; bitcnt is used to determine when a stuff bit is due
; cnt holds the number of bytes left in the receive buffer

USB_INTR_VECTOR:
;order of registers pushed: YL, SREG YH, [sofError], bitcnt, shift, x1, x2, x3, x4, cnt
    push    YL                  ;[-28] push only what is necessary to sync with edge ASAP
    16d4:	cf 93       	push	r28
    in      YL, SREG            ;[-26]
    16d6:	cf b7       	in	r28, 0x3f	; 63
    push    YL                  ;[-25]
    16d8:	cf 93       	push	r28
    push    YH                  ;[-23]
    16da:	df 93       	push	r29

000016dc <waitForJ>:
;sync up with J to K edge during sync pattern -- use fastest possible loops
;The first part waits at most 1 bit long since we must be in sync pattern.
;YL is guarenteed to be < 0x80 because I flag is clear. When we jump to
;waitForJ, ensure that this prerequisite is met.
waitForJ:
    inc     YL
    16dc:	c3 95       	inc	r28
    sbis    USBIN, USBMINUS
    16de:	4b 9b       	sbis	0x09, 3	; 9
    brne    waitForJ        ; just make sure we have ANY timeout
    16e0:	e9 f7       	brne	.-6      	; 0x16dc <waitForJ>

000016e2 <waitForK>:
waitForK:
;The following code results in a sampling window of < 1/4 bit which meets the spec.
    sbis    USBIN, USBMINUS     ;[-19]
    16e2:	4b 9b       	sbis	0x09, 3	; 9
    rjmp    foundK              ;[-18]
    16e4:	11 c0       	rjmp	.+34     	; 0x1708 <foundK>
    sbis    USBIN, USBMINUS
    16e6:	4b 9b       	sbis	0x09, 3	; 9
    rjmp    foundK
    16e8:	0f c0       	rjmp	.+30     	; 0x1708 <foundK>
    sbis    USBIN, USBMINUS
    16ea:	4b 9b       	sbis	0x09, 3	; 9
    rjmp    foundK
    16ec:	0d c0       	rjmp	.+26     	; 0x1708 <foundK>
    sbis    USBIN, USBMINUS
    16ee:	4b 9b       	sbis	0x09, 3	; 9
    rjmp    foundK
    16f0:	0b c0       	rjmp	.+22     	; 0x1708 <foundK>
    sbis    USBIN, USBMINUS
    16f2:	4b 9b       	sbis	0x09, 3	; 9
    rjmp    foundK
    16f4:	09 c0       	rjmp	.+18     	; 0x1708 <foundK>
    sbis    USBIN, USBMINUS
    16f6:	4b 9b       	sbis	0x09, 3	; 9
    rjmp    foundK
    16f8:	07 c0       	rjmp	.+14     	; 0x1708 <foundK>
    sbis    USBIN, USBMINUS
    16fa:	4b 9b       	sbis	0x09, 3	; 9
    rjmp    foundK
    16fc:	05 c0       	rjmp	.+10     	; 0x1708 <foundK>
    sbis    USBIN, USBMINUS
    16fe:	4b 9b       	sbis	0x09, 3	; 9
    rjmp    foundK
    1700:	03 c0       	rjmp	.+6      	; 0x1708 <foundK>
    sbis    USBIN, USBMINUS
    1702:	4b 9b       	sbis	0x09, 3	; 9
    rjmp    foundK
    1704:	01 c0       	rjmp	.+2      	; 0x1708 <foundK>
    sts     usbSofCount, YL
#endif  /* USB_COUNT_SOF */
#ifdef USB_SOF_HOOK
    USB_SOF_HOOK
#endif
    rjmp    sofError
    1706:	83 c0       	rjmp	.+262    	; 0x180e <sofError>

00001708 <foundK>:
foundK:                         ;[-16]
;{3, 5} after falling D- edge, average delay: 4 cycles
;bit0 should be at 34 for center sampling. Currently at 4 so 30 cylces till bit 0 sample
;use 1 bit time for setup purposes, then sample again. Numbers in brackets
;are cycles from center of first sync (double K) bit after the instruction
    push    bitcnt              ;[-16]
    1708:	6f 93       	push	r22
;   [---]                       ;[-15]
    lds     YL, usbInputBufOffset;[-14]
    170a:	c0 91 1f 02 	lds	r28, 0x021F
;   [---]                       ;[-13]
    clr     YH                  ;[-12]
    170e:	dd 27       	eor	r29, r29
    subi    YL, lo8(-(usbRxBuf));[-11] [rx loop init]
    1710:	ca 5d       	subi	r28, 0xDA	; 218
    sbci    YH, hi8(-(usbRxBuf));[-10] [rx loop init]
    1712:	dd 4f       	sbci	r29, 0xFD	; 253
    push    shift               ;[-9]
    1714:	2f 93       	push	r18
;   [---]                       ;[-8]
    ldi     shift,0x40          ;[-7] set msb to "1" so processing bit7 can be detected
    1716:	20 e4       	ldi	r18, 0x40	; 64
    nop2                        ;[-6]
    1718:	00 c0       	rjmp	.+0      	; 0x171a <foundK+0x12>
;   [---]                       ;[-5]
    ldi     bitcnt, 5           ;[-4] [rx loop init]
    171a:	65 e0       	ldi	r22, 0x05	; 5
    sbis    USBIN, USBMINUS     ;[-3] we want two bits K (sample 3 cycles too early)
    171c:	4b 9b       	sbis	0x09, 3	; 9
    rjmp    haveTwoBitsK        ;[-2]
    171e:	03 c0       	rjmp	.+6      	; 0x1726 <haveTwoBitsK>
    pop     shift               ;[-1] undo the push from before
    1720:	2f 91       	pop	r18
    pop     bitcnt              ;[1] 
    1722:	6f 91       	pop	r22
    rjmp    waitForK            ;[3] this was not the end of sync, retry
    1724:	de cf       	rjmp	.-68     	; 0x16e2 <waitForK>

00001726 <haveTwoBitsK>:

;----------------------------------------------------------------------------
; push more registers and initialize values while we sample the first bits:
;----------------------------------------------------------------------------
haveTwoBitsK:
    push    x1                  ;[0]
    1726:	0f 93       	push	r16
    push    x2                  ;[2]
    1728:	1f 93       	push	r17
    push    x3                  ;[4] (leap2)
    172a:	4f 93       	push	r20
    ldi     leap2, 0x55         ;[6] add leap cycle on 2nd,5th,8th,... stuff bit
    172c:	45 e5       	ldi	r20, 0x55	; 85
    push    x4                  ;[7] == leap
    172e:	5f 93       	push	r21
    ldi     leap, 0x55          ;[9] skip leap cycle on 2nd,5th,8th,... byte received
    1730:	55 e5       	ldi	r21, 0x55	; 85
    push    cnt                 ;[10]
    1732:	3f 93       	push	r19
    ldi     cnt, USB_BUFSIZE    ;[12] [rx loop init]
    1734:	3b e0       	ldi	r19, 0x0B	; 11
    ldi     x2, 1<<USBPLUS      ;[13] current line state is K state. D+=="1", D-=="0"
    1736:	14 e0       	ldi	r17, 0x04	; 4

00001738 <bit0>:
bit0:       
    in      x1, USBIN           ;[0] sample line state
    1738:	09 b1       	in	r16, 0x09	; 9
    andi    x1, USBMASK         ;[1] filter only D+ and D- bits
    173a:	0c 70       	andi	r16, 0x0C	; 12
    rjmp    handleBit           ;[2] make bit0 14 cycles long
    173c:	2e c0       	rjmp	.+92     	; 0x179a <handleBit>

0000173e <b6checkUnstuff>:
;----------------------------------------------------------------------------
; Process bit7. However, bit 6 still may need unstuffing.
;----------------------------------------------------------------------------

b6checkUnstuff:
    dec     bitcnt              ;[9]
    173e:	6a 95       	dec	r22
    breq    unstuff6            ;[10]
    1740:	c9 f0       	breq	.+50     	; 0x1774 <unstuff6>

00001742 <bit7>:
bit7:
    subi    cnt, 1              ;[11] cannot use dec becaus it does not affect the carry flag
    1742:	31 50       	subi	r19, 0x01	; 1
    brcs    overflow            ;[12] Too many bytes received. Ignore packet
    1744:	d8 f1       	brcs	.+118    	; 0x17bc <overflow>
    in      x1, USBIN           ;[0] sample line state
    1746:	09 b1       	in	r16, 0x09	; 9
    andi    x1, USBMASK         ;[1] filter only D+ and D- bits
    1748:	0c 70       	andi	r16, 0x0C	; 12
    cpse    x1, x2              ;[2] when previous line state equals current line state, handle "1"
    174a:	01 13       	cpse	r16, r17
    rjmp    b7handle0           ;[3] when line state differs, handle "0"
    174c:	0b c0       	rjmp	.+22     	; 0x1764 <b7handle0>
    sec                         ;[4]
    174e:	08 94       	sec
    ror     shift               ;[5] shift "1" into the data
    1750:	27 95       	ror	r18
    st      y+, shift           ;[6] store the data into the buffer
    1752:	29 93       	st	Y+, r18
    ldi     shift, 0x40         ;[7] reset data for receiving the next byte
    1754:	20 e4       	ldi	r18, 0x40	; 64
    subi    leap, 0x55          ;[9] trick to introduce a leap cycle every 3 bytes
    1756:	55 55       	subi	r21, 0x55	; 85
    brcc    nextInst            ;[10 or 11] it will fail after 85 bytes. However low speed can only receive 11
    1758:	00 f4       	brcc	.+0      	; 0x175a <bit7+0x18>
    dec     bitcnt              ;[11 or 12]
    175a:	6a 95       	dec	r22
    brne    bit0                ;[12 or 13]
    175c:	69 f7       	brne	.-38     	; 0x1738 <bit0>
    ldi     x1, 1               ;[13 or 14] unstuffing bit 7
    175e:	01 e0       	ldi	r16, 0x01	; 1
    in      bitcnt, USBIN       ;[0] sample stuff bit
    1760:	69 b1       	in	r22, 0x09	; 9
    rjmp    unstuff             ;[1]
    1762:	0b c0       	rjmp	.+22     	; 0x177a <unstuff>

00001764 <b7handle0>:

b7handle0:
    mov     x2,x1               ;[5] Set x2 to current line state
    1764:	10 2f       	mov	r17, r16
    ldi     bitcnt, 6           ;[6]
    1766:	66 e0       	ldi	r22, 0x06	; 6
    lsr     shift               ;[7] shift "0" into the data
    1768:	26 95       	lsr	r18
    st      y+, shift           ;[8] store data into the buffer
    176a:	29 93       	st	Y+, r18
    ldi     shift, 0x40         ;[10] reset data for receiving the next byte
    176c:	20 e4       	ldi	r18, 0x40	; 64
    subi    leap, 0x55          ;[11] trick to introduce a leap cycle every 3 bytes
    176e:	55 55       	subi	r21, 0x55	; 85
    brcs    bit0                ;[12] it will fail after 85 bytes. However low speed can only receive 11
    1770:	18 f3       	brcs	.-58     	; 0x1738 <bit0>
    rjmp    bit0                ;[13]
    1772:	e2 cf       	rjmp	.-60     	; 0x1738 <bit0>

00001774 <unstuff6>:
; Handle unstuff
; x1==0xFF indicate unstuffing bit6
;----------------------------------------------------------------------------

unstuff6:
    ldi     x1,0xFF             ;[12] indicate unstuffing bit 6
    1774:	0f ef       	ldi	r16, 0xFF	; 255
    in      bitcnt, USBIN       ;[0]  sample stuff bit
    1776:	69 b1       	in	r22, 0x09	; 9
	...

0000177a <unstuff>:
    nop                         ;[1]  fix timing
unstuff:                        ;b0-5  b6   b7
    mov     x2,bitcnt           ;[3]  [2]  [3]  Set x2 to match line state
    177a:	16 2f       	mov	r17, r22
    subi    leap2, 0x55         ;[4]  [3]  [4]  delay loop
    177c:	45 55       	subi	r20, 0x55	; 85
    brcs    nextInst            ;[5]  [4]  [5]  add one cycle every three stuff bits
    177e:	00 f0       	brcs	.+0      	; 0x1780 <unstuff+0x6>
    sbci    leap2,0             ;[6]  [5]  [6]
    1780:	40 40       	sbci	r20, 0x00	; 0
    ldi     bitcnt,6            ;[7]  [6]  [7]  reset bit stuff counter
    1782:	66 e0       	ldi	r22, 0x06	; 6
    andi    x2, USBMASK         ;[8]  [7]  [8] only keep D+ and D-
    1784:	1c 70       	andi	r17, 0x0C	; 12
    cpi     x1,0                ;[9]  [8]  [9]
    1786:	00 30       	cpi	r16, 0x00	; 0
    brmi    bit7                ;[10] [9]  [10] finished unstuffing bit6 When x1<0
    1788:	e2 f2       	brmi	.-72     	; 0x1742 <bit7>
    breq    bitloop             ;[11] ---  [11] finished unstuffing bit0-5 when x1=0
    178a:	21 f0       	breq	.+8      	; 0x1794 <bitloop>
    nop                         ;---  ---  [12]
    178c:	00 00       	nop
    in      x1, USBIN           ;---  ---  [0] sample line state for bit0
    178e:	09 b1       	in	r16, 0x09	; 9
    andi    x1, USBMASK         ;---  ---  [1] filter only D+ and D- bits
    1790:	0c 70       	andi	r16, 0x0C	; 12
    rjmp    handleBit           ;---  ---  [2] make bit0 14 cycles long
    1792:	03 c0       	rjmp	.+6      	; 0x179a <handleBit>

00001794 <bitloop>:

;----------------------------------------------------------------------------
; Receiver loop (numbers in brackets are cycles within byte after instr)
;----------------------------------------------------------------------------
bitloop:
    in      x1, USBIN           ;[0] sample line state
    1794:	09 b1       	in	r16, 0x09	; 9
    andi    x1, USBMASK         ;[1] filter only D+ and D- bits
    1796:	0c 70       	andi	r16, 0x0C	; 12
    breq    se0                 ;[2] both lines are low so handle se0
    1798:	a9 f0       	breq	.+42     	; 0x17c4 <se0>

0000179a <handleBit>:
handleBit:
    cpse    x1, x2              ;[3] when previous line state equals current line state, handle "1"
    179a:	01 13       	cpse	r16, r17
    rjmp    handle0             ;[4] when line state differs, handle "0"
    179c:	09 c0       	rjmp	.+18     	; 0x17b0 <handle0>
    sec                         ;[5]
    179e:	08 94       	sec
    ror     shift               ;[6] shift "1" into the data
    17a0:	27 95       	ror	r18
    brcs    b6checkUnstuff      ;[7] When after shift C is set, next bit is bit7
    17a2:	68 f2       	brcs	.-102    	; 0x173e <b6checkUnstuff>
    nop2                        ;[8]
    17a4:	00 c0       	rjmp	.+0      	; 0x17a6 <handleBit+0xc>
    dec     bitcnt              ;[10]
    17a6:	6a 95       	dec	r22
    brne    bitloop             ;[11]
    17a8:	a9 f7       	brne	.-22     	; 0x1794 <bitloop>
    ldi     x1,0                ;[12] indicate unstuff for bit other than bit6 or bit7
    17aa:	00 e0       	ldi	r16, 0x00	; 0
    in      bitcnt, USBIN       ;[0] sample stuff bit
    17ac:	69 b1       	in	r22, 0x09	; 9
    rjmp    unstuff             ;[1]
    17ae:	e5 cf       	rjmp	.-54     	; 0x177a <unstuff>

000017b0 <handle0>:

handle0:
    mov     x2, x1              ;[6] Set x2 to current line state
    17b0:	10 2f       	mov	r17, r16
    ldi     bitcnt, 6           ;[7] reset unstuff counter. 
    17b2:	66 e0       	ldi	r22, 0x06	; 6
    lsr     shift               ;[8] shift "0" into the data
    17b4:	26 95       	lsr	r18
    brcs    bit7                ;[9] When after shift C is set, next bit is bit7
    17b6:	28 f2       	brcs	.-118    	; 0x1742 <bit7>
    nop                         ;[10]
    17b8:	00 00       	nop
    rjmp    bitloop             ;[11] 
    17ba:	ec cf       	rjmp	.-40     	; 0x1794 <bitloop>

000017bc <overflow>:
*/

#define token   x1

overflow:
    ldi     x2, 1<<USB_INTR_PENDING_BIT
    17bc:	11 e0       	ldi	r17, 0x01	; 1
    USB_STORE_PENDING(x2)       ; clear any pending interrupts
    17be:	1c bb       	out	0x1c, r17	; 28

000017c0 <ignorePacket>:
ignorePacket:
    clr     token
    17c0:	00 27       	eor	r16, r16
    rjmp    storeTokenAndReturn
    17c2:	19 c0       	rjmp	.+50     	; 0x17f6 <handleSetupOrOut>

000017c4 <se0>:
; Processing of received packet (numbers in brackets are cycles after center of SE0)
;----------------------------------------------------------------------------
;This is the only non-error exit point for the software receiver loop
;we don't check any CRCs here because there is no time left.
se0:
    subi    cnt, USB_BUFSIZE    ;[5]
    17c4:	3b 50       	subi	r19, 0x0B	; 11
    neg     cnt                 ;[6]
    17c6:	31 95       	neg	r19
    sub     YL, cnt             ;[7]
    17c8:	c3 1b       	sub	r28, r19
    sbci    YH, 0               ;[8]
    17ca:	d0 40       	sbci	r29, 0x00	; 0
    ldi     x2, 1<<USB_INTR_PENDING_BIT ;[9]
    17cc:	11 e0       	ldi	r17, 0x01	; 1
    USB_STORE_PENDING(x2)       ;[10] clear pending intr and check flag later. SE0 should be over.
    17ce:	1c bb       	out	0x1c, r17	; 28
    ld      token, y            ;[11]
    17d0:	08 81       	ld	r16, Y
    cpi     token, USBPID_DATA0 ;[13]
    17d2:	03 3c       	cpi	r16, 0xC3	; 195
    breq    handleData          ;[14]
    17d4:	09 f1       	breq	.+66     	; 0x1818 <handleData>
    cpi     token, USBPID_DATA1 ;[15]
    17d6:	0b 34       	cpi	r16, 0x4B	; 75
    breq    handleData          ;[16]
    17d8:	f9 f0       	breq	.+62     	; 0x1818 <handleData>
    lds     shift, usbDeviceAddr;[17]
    17da:	20 91 1d 02 	lds	r18, 0x021D
    ldd     x2, y+1             ;[19] ADDR and 1 bit endpoint number
    17de:	19 81       	ldd	r17, Y+1	; 0x01
    lsl     x2                  ;[21] shift out 1 bit endpoint number
    17e0:	11 0f       	add	r17, r17
    cpse    x2, shift           ;[22]
    17e2:	12 13       	cpse	r17, r18
    rjmp    ignorePacket        ;[23]
    17e4:	ed cf       	rjmp	.-38     	; 0x17c0 <ignorePacket>
/* only compute endpoint number in x3 if required later */
#if USB_CFG_HAVE_INTRIN_ENDPOINT || USB_CFG_IMPLEMENT_FN_WRITEOUT
    ldd     x3, y+2             ;[24] endpoint number + crc
    17e6:	4a 81       	ldd	r20, Y+2	; 0x02
    rol     x3                  ;[26] shift in LSB of endpoint
    17e8:	44 1f       	adc	r20, r20
#endif
    cpi     token, USBPID_IN    ;[27]
    17ea:	09 36       	cpi	r16, 0x69	; 105
    breq    handleIn            ;[28]
    17ec:	51 f1       	breq	.+84     	; 0x1842 <handleIn>
    cpi     token, USBPID_SETUP ;[29]
    17ee:	0d 32       	cpi	r16, 0x2D	; 45
    breq    handleSetupOrOut    ;[30]
    17f0:	11 f0       	breq	.+4      	; 0x17f6 <handleSetupOrOut>
    cpi     token, USBPID_OUT   ;[31]
    17f2:	01 3e       	cpi	r16, 0xE1	; 225
    brne    ignorePacket        ;[32] must be ack, nak or whatever
    17f4:	29 f7       	brne	.-54     	; 0x17c0 <ignorePacket>

000017f6 <handleSetupOrOut>:
    andi    x3, 0xf             ;[32]
    breq    storeTokenAndReturn ;[33]
    mov     token, x3           ;[34] indicate that this is endpoint x OUT
#endif
storeTokenAndReturn:
    sts     usbCurrentTok, token;[35]
    17f6:	00 93 24 02 	sts	0x0224, r16

000017fa <doReturn>:
doReturn:
    POP_STANDARD                ;[37] 12...16 cycles
    17fa:	3f 91       	pop	r19
    17fc:	5f 91       	pop	r21
    17fe:	4f 91       	pop	r20
    1800:	1f 91       	pop	r17
    1802:	0f 91       	pop	r16
    1804:	2f 91       	pop	r18
    1806:	6f 91       	pop	r22
    USB_LOAD_PENDING(YL)        ;[49]
    1808:	cc b3       	in	r28, 0x1c	; 28
    sbrc    YL, USB_INTR_PENDING_BIT;[50] check whether data is already arriving
    180a:	c0 fd       	sbrc	r28, 0
    rjmp    waitForJ            ;[51] save the pops and pushes -- a new interrupt is already pending
    180c:	67 cf       	rjmp	.-306    	; 0x16dc <waitForJ>

0000180e <sofError>:
sofError:
    POP_RETI                    ;macro call
    180e:	df 91       	pop	r29
    1810:	cf 91       	pop	r28
    1812:	cf bf       	out	0x3f, r28	; 63
    1814:	cf 91       	pop	r28
    reti
    1816:	18 95       	reti

00001818 <handleData>:

handleData:
#if USB_CFG_CHECK_CRC
    CRC_CLEANUP_AND_CHECK       ; jumps to ignorePacket if CRC error
#endif
    lds     shift, usbCurrentTok;[18]
    1818:	20 91 24 02 	lds	r18, 0x0224
    tst     shift               ;[20]
    181c:	22 23       	and	r18, r18
    breq    doReturn            ;[21]
    181e:	69 f3       	breq	.-38     	; 0x17fa <doReturn>
    lds     x2, usbRxLen        ;[22]
    1820:	10 91 22 02 	lds	r17, 0x0222
    tst     x2                  ;[24]
    1824:	11 23       	and	r17, r17
    brne    sendNakAndReti      ;[25]
    1826:	81 f5       	brne	.+96     	; 0x1888 <sendNakAndReti>
; 2006-03-11: The following two lines fix a problem where the device was not
; recognized if usbPoll() was called less frequently than once every 4 ms.
    cpi     cnt, 4              ;[26] zero sized data packets are status phase only -- ignore and ack
    1828:	34 30       	cpi	r19, 0x04	; 4
    brmi    sendAckAndReti      ;[27] keep rx buffer clean -- we must not NAK next SETUP
    182a:	82 f1       	brmi	.+96     	; 0x188c <sendAckAndReti>
#if USB_CFG_CHECK_DATA_TOGGLING
    sts     usbCurrentDataToken, token  ; store for checking by C code
#endif
    sts     usbRxLen, cnt       ;[28] store received data, swap buffers
    182c:	30 93 22 02 	sts	0x0222, r19
    sts     usbRxToken, shift   ;[30]
    1830:	20 93 1e 02 	sts	0x021E, r18
    lds     x2, usbInputBufOffset;[32] swap buffers
    1834:	10 91 1f 02 	lds	r17, 0x021F
    ldi     cnt, USB_BUFSIZE    ;[34]
    1838:	3b e0       	ldi	r19, 0x0B	; 11
    sub     cnt, x2             ;[35]
    183a:	31 1b       	sub	r19, r17
    sts     usbInputBufOffset, cnt;[36] buffers now swapped
    183c:	30 93 1f 02 	sts	0x021F, r19
    rjmp    sendAckAndReti      ;[38] 40 + 17 = 57 until SOP
    1840:	25 c0       	rjmp	.+74     	; 0x188c <sendAckAndReti>

00001842 <handleIn>:

handleIn:
;We don't send any data as long as the C code has not processed the current
;input data and potentially updated the output data. That's more efficient
;in terms of code size than clearing the tx buffers when a packet is received.
    lds     x1, usbRxLen        ;[30]
    1842:	00 91 22 02 	lds	r16, 0x0222
    cpi     x1, 1               ;[32] negative values are flow control, 0 means "buffer free"
    1846:	01 30       	cpi	r16, 0x01	; 1
    brge    sendNakAndReti      ;[33] unprocessed input packet?
    1848:	fc f4       	brge	.+62     	; 0x1888 <sendNakAndReti>
    ldi     x1, USBPID_NAK      ;[34] prepare value for usbTxLen
    184a:	0a e5       	ldi	r16, 0x5A	; 90
#if USB_CFG_HAVE_INTRIN_ENDPOINT
    andi    x3, 0xf             ;[35] x3 contains endpoint
    184c:	4f 70       	andi	r20, 0x0F	; 15
#if USB_CFG_SUPPRESS_INTR_CODE
    brne    sendNakAndReti      ;[36]
#else
    brne    handleIn1           ;[36]
    184e:	49 f4       	brne	.+18     	; 0x1862 <handleIn1>
#endif
#endif
    lds     cnt, usbTxLen       ;[37]
    1850:	30 91 00 01 	lds	r19, 0x0100
    sbrc    cnt, 4              ;[39] all handshake tokens have bit 4 set
    1854:	34 fd       	sbrc	r19, 4
    rjmp    sendCntAndReti      ;[40] 42 + 16 = 58 until SOP
    1856:	1b c0       	rjmp	.+54     	; 0x188e <sendCntAndReti>
    sts     usbTxLen, x1        ;[41] x1 == USBPID_NAK from above
    1858:	00 93 00 01 	sts	0x0100, r16
    ldi     YL, lo8(usbTxBuf)   ;[43]
    185c:	c6 e0       	ldi	r28, 0x06	; 6
    ldi     YH, hi8(usbTxBuf)   ;[44]
    185e:	d2 e0       	ldi	r29, 0x02	; 2
    rjmp    usbSendAndReti      ;[45] 57 + 12 = 59 until SOP
    1860:	1a c0       	rjmp	.+52     	; 0x1896 <usbSendAndReti>

00001862 <handleIn1>:
#if USB_CFG_HAVE_INTRIN_ENDPOINT3
; 2006-06-10 as suggested by O.Tamura: support second INTR IN / BULK IN endpoint
    cpi     x3, USB_CFG_EP3_NUMBER;[38]
    breq    handleIn3           ;[39]
#endif
    lds     cnt, usbTxLen1      ;[40]
    1862:	30 91 11 02 	lds	r19, 0x0211
    sbrc    cnt, 4              ;[42] all handshake tokens have bit 4 set
    1866:	34 fd       	sbrc	r19, 4
    rjmp    sendCntAndReti      ;[43] 47 + 16 = 63 until SOP
    1868:	12 c0       	rjmp	.+36     	; 0x188e <sendCntAndReti>
    sts     usbTxLen1, x1       ;[44] x1 == USBPID_NAK from above
    186a:	00 93 11 02 	sts	0x0211, r16
    ldi     YL, lo8(usbTxBuf1)  ;[46]
    186e:	c2 e1       	ldi	r28, 0x12	; 18
    ldi     YH, hi8(usbTxBuf1)  ;[47]
    1870:	d2 e0       	ldi	r29, 0x02	; 2
    rjmp    usbSendAndReti      ;[48] 50 + 12 = 62 until SOP
    1872:	11 c0       	rjmp	.+34     	; 0x1896 <usbSendAndReti>

00001874 <bitstuffN>:
; Spec allows 7.5 bit times from EOP to SOP for replies
; 7.5 bit times is 100 cycles. This implementation arrives a bit later at se0
; then specified in the include file but there is plenty of time

bitstuffN:
    eor     x1, x4          ;[8]
    1874:	05 27       	eor	r16, r21
    ldi     x2, 0           ;[9]
    1876:	10 e0       	ldi	r17, 0x00	; 0
    nop2                    ;[10]
    1878:	00 c0       	rjmp	.+0      	; 0x187a <bitstuffN+0x6>
    out     USBOUT, x1      ;[12] <-- out
    187a:	0b b9       	out	0x0b, r16	; 11
    rjmp    didStuffN       ;[0]
    187c:	19 c0       	rjmp	.+50     	; 0x18b0 <didStuffN>

0000187e <bitstuff7>:
    
bitstuff7:
    eor     x1, x4          ;[6]
    187e:	05 27       	eor	r16, r21
    ldi     x2, 0           ;[7] Carry is zero due to brcc
    1880:	10 e0       	ldi	r17, 0x00	; 0
    rol     shift           ;[8] compensate for ror shift at branch destination
    1882:	22 1f       	adc	r18, r18
    nop2                    ;[9]
    1884:	00 c0       	rjmp	.+0      	; 0x1886 <bitstuff7+0x8>
    rjmp    didStuff7       ;[11]
    1886:	1d c0       	rjmp	.+58     	; 0x18c2 <didStuff7>

00001888 <sendNakAndReti>:

sendNakAndReti:
    ldi     x3, USBPID_NAK  ;[-18]
    1888:	4a e5       	ldi	r20, 0x5A	; 90
    rjmp    sendX3AndReti   ;[-17]
    188a:	02 c0       	rjmp	.+4      	; 0x1890 <sendX3AndReti>

0000188c <sendAckAndReti>:
sendAckAndReti:
    ldi     cnt, USBPID_ACK ;[-17]
    188c:	32 ed       	ldi	r19, 0xD2	; 210

0000188e <sendCntAndReti>:
sendCntAndReti:
    mov     x3, cnt         ;[-16]
    188e:	43 2f       	mov	r20, r19

00001890 <sendX3AndReti>:
sendX3AndReti:
    ldi     YL, 20          ;[-15] x3==r20 address is 20
    1890:	c4 e1       	ldi	r28, 0x14	; 20
    ldi     YH, 0           ;[-14]
    1892:	d0 e0       	ldi	r29, 0x00	; 0
    ldi     cnt, 2          ;[-13]
    1894:	32 e0       	ldi	r19, 0x02	; 2

00001896 <usbSendAndReti>:
;uses: x1...x4, btcnt, shift, cnt, Y
;Numbers in brackets are time since first bit of sync pattern is sent
;We don't match the transfer rate exactly (don't insert leap cycles every third
;byte) because the spec demands only 1.5% precision anyway.
usbSendAndReti:             ; 12 cycles until SOP
    in      x2, USBDDR      ;[-12]
    1896:	1a b1       	in	r17, 0x0a	; 10
    ori     x2, USBMASK     ;[-11]
    1898:	1c 60       	ori	r17, 0x0C	; 12
    sbi     USBOUT, USBMINUS;[-10] prepare idle state; D+ and D- must have been 0 (no pullups)
    189a:	5b 9a       	sbi	0x0b, 3	; 11
    in      x1, USBOUT      ;[-8] port mirror for tx loop
    189c:	0b b1       	in	r16, 0x0b	; 11
    out     USBDDR, x2      ;[-7] <- acquire bus
    189e:	1a b9       	out	0x0a, r17	; 10
; need not init x2 (bitstuff history) because sync starts with 0
    ldi     x4, USBMASK     ;[-6] exor mask
    18a0:	5c e0       	ldi	r21, 0x0C	; 12
    ldi     shift, 0x80     ;[-5] sync byte is first byte sent
    18a2:	20 e8       	ldi	r18, 0x80	; 128

000018a4 <txByteLoop>:
txByteLoop:
    ldi     bitcnt, 0x49    ;[-4]        [10] binary 01001001
    18a4:	69 e4       	ldi	r22, 0x49	; 73

000018a6 <txBitLoop>:
txBitLoop:
    sbrs    shift, 0        ;[-3] [10]   [11]
    18a6:	20 ff       	sbrs	r18, 0
    eor     x1, x4          ;[-2] [11]   [12]
    18a8:	05 27       	eor	r16, r21
    out     USBOUT, x1      ;[-1] [12]   [13]   <-- out N
    18aa:	0b b9       	out	0x0b, r16	; 11
    ror     shift           ;[0]  [13]   [14]
    18ac:	27 95       	ror	r18
    ror     x2              ;[1]
    18ae:	17 95       	ror	r17

000018b0 <didStuffN>:
didStuffN:
    nop2                    ;[2]
    18b0:	00 c0       	rjmp	.+0      	; 0x18b2 <didStuffN+0x2>
    nop                     ;[4]
    18b2:	00 00       	nop
    cpi     x2, 0xfc        ;[5]
    18b4:	1c 3f       	cpi	r17, 0xFC	; 252
    brcc    bitstuffN       ;[6]
    18b6:	f0 f6       	brcc	.-68     	; 0x1874 <bitstuffN>
    lsr     bitcnt          ;[7]
    18b8:	66 95       	lsr	r22
    brcc    txBitLoop       ;[8]
    18ba:	a8 f7       	brcc	.-22     	; 0x18a6 <txBitLoop>
    brne    txBitLoop       ;[9]
    18bc:	a1 f7       	brne	.-24     	; 0x18a6 <txBitLoop>

    sbrs    shift, 0        ;[10]
    18be:	20 ff       	sbrs	r18, 0
    eor     x1, x4          ;[11]
    18c0:	05 27       	eor	r16, r21

000018c2 <didStuff7>:
didStuff7:
    out     USBOUT, x1      ;[-1] [13] <-- out 7
    18c2:	0b b9       	out	0x0b, r16	; 11
    ror     shift           ;[0] [14]
    18c4:	27 95       	ror	r18
    ror     x2              ;[1]
    18c6:	17 95       	ror	r17
    nop                     ;[2]
    18c8:	00 00       	nop
    cpi     x2, 0xfc        ;[3]
    18ca:	1c 3f       	cpi	r17, 0xFC	; 252
    brcc    bitstuff7       ;[4]
    18cc:	c0 f6       	brcc	.-80     	; 0x187e <bitstuff7>
    ld      shift, y+       ;[5]
    18ce:	29 91       	ld	r18, Y+
    dec     cnt             ;[7]
    18d0:	3a 95       	dec	r19
    brne    txByteLoop      ;[8]
    18d2:	41 f7       	brne	.-48     	; 0x18a4 <txByteLoop>
;make SE0:
    cbr     x1, USBMASK     ;[9] prepare SE0 [spec says EOP may be 25 to 30 cycles]
    18d4:	03 7f       	andi	r16, 0xF3	; 243
    lds     x2, usbNewDeviceAddr;[10]
    18d6:	10 91 23 02 	lds	r17, 0x0223
    lsl     x2              ;[12] we compare with left shifted address
    18da:	11 0f       	add	r17, r17
    out     USBOUT, x1      ;[13] <-- out SE0 -- from now 2 bits = 22 cycles until bus idle
    18dc:	0b b9       	out	0x0b, r16	; 11
    subi    YL, 20 + 2      ;[0] Only assign address on data packets, not ACK/NAK in x3
    18de:	c6 51       	subi	r28, 0x16	; 22
    sbci    YH, 0           ;[1]
    18e0:	d0 40       	sbci	r29, 0x00	; 0
;2006-03-06: moved transfer of new address to usbDeviceAddr from C-Code to asm:
;set address only after data packet was sent, not after handshake
    breq    skipAddrAssign  ;[2]
    18e2:	11 f0       	breq	.+4      	; 0x18e8 <skipAddrAssign>
    sts     usbDeviceAddr, x2; if not skipped: SE0 is one cycle longer
    18e4:	10 93 1d 02 	sts	0x021D, r17

000018e8 <skipAddrAssign>:
skipAddrAssign:
;end of usbDeviceAddress transfer
    ldi     x2, 1<<USB_INTR_PENDING_BIT;[4] int0 occurred during TX -- clear pending flag
    18e8:	11 e0       	ldi	r17, 0x01	; 1
    USB_STORE_PENDING(x2)   ;[5]
    18ea:	1c bb       	out	0x1c, r17	; 28
    ori     x1, USBIDLE     ;[6]
    18ec:	08 60       	ori	r16, 0x08	; 8
    in      x2, USBDDR      ;[7]
    18ee:	1a b1       	in	r17, 0x0a	; 10
    cbr     x2, USBMASK     ;[8] set both pins to input
    18f0:	13 7f       	andi	r17, 0xF3	; 243
    mov     x3, x1          ;[9]
    18f2:	40 2f       	mov	r20, r16
    cbr     x3, USBMASK     ;[10] configure no pullup on both pins
    18f4:	43 7f       	andi	r20, 0xF3	; 243
    ldi     x4, 5           ;[11]
    18f6:	55 e0       	ldi	r21, 0x05	; 5

000018f8 <se0Delay>:
se0Delay:
    dec     x4              ;[12] [15] [18] [21] [24]
    18f8:	5a 95       	dec	r21
    brne    se0Delay        ;[13] [16] [19] [22] [25]
    18fa:	f1 f7       	brne	.-4      	; 0x18f8 <se0Delay>
    out     USBOUT, x1      ;[26] <-- out J (idle) -- end of SE0 (EOP signal)
    18fc:	0b b9       	out	0x0b, r16	; 11
    out     USBDDR, x2      ;[27] <-- release bus now
    18fe:	1a b9       	out	0x0a, r17	; 10
    out     USBOUT, x3      ;[28] <-- ensure no pull-up resistors are active
    1900:	4b b9       	out	0x0b, r20	; 11
    rjmp    doReturn
    1902:	7b cf       	rjmp	.-266    	; 0x17fa <doReturn>

00001904 <vfprintf>:
    1904:	ab e0       	ldi	r26, 0x0B	; 11
    1906:	b0 e0       	ldi	r27, 0x00	; 0
    1908:	e8 e8       	ldi	r30, 0x88	; 136
    190a:	fc e0       	ldi	r31, 0x0C	; 12
    190c:	0c 94 96 0f 	jmp	0x1f2c	; 0x1f2c <__prologue_saves__+0x8>
    1910:	5c 01       	movw	r10, r24
    1912:	4b 01       	movw	r8, r22
    1914:	7a 01       	movw	r14, r20
    1916:	fc 01       	movw	r30, r24
    1918:	17 82       	std	Z+7, r1	; 0x07
    191a:	16 82       	std	Z+6, r1	; 0x06
    191c:	83 81       	ldd	r24, Z+3	; 0x03
    191e:	81 fd       	sbrc	r24, 1
    1920:	08 c0       	rjmp	.+16     	; 0x1932 <vfprintf+0x2e>
    1922:	6f ef       	ldi	r22, 0xFF	; 255
    1924:	7f ef       	ldi	r23, 0xFF	; 255
    1926:	08 c1       	rjmp	.+528    	; 0x1b38 <vfprintf+0x234>
    1928:	42 e0       	ldi	r20, 0x02	; 2
    192a:	50 e0       	ldi	r21, 0x00	; 0
    192c:	e4 0e       	add	r14, r20
    192e:	f5 1e       	adc	r15, r21
    1930:	04 c0       	rjmp	.+8      	; 0x193a <vfprintf+0x36>
    1932:	3e 01       	movw	r6, r28
    1934:	08 94       	sec
    1936:	61 1c       	adc	r6, r1
    1938:	71 1c       	adc	r7, r1
    193a:	f5 01       	movw	r30, r10
    193c:	d3 80       	ldd	r13, Z+3	; 0x03
    193e:	f4 01       	movw	r30, r8
    1940:	d3 fc       	sbrc	r13, 3
    1942:	85 91       	lpm	r24, Z+
    1944:	d3 fe       	sbrs	r13, 3
    1946:	81 91       	ld	r24, Z+
    1948:	4f 01       	movw	r8, r30
    194a:	88 23       	and	r24, r24
    194c:	09 f4       	brne	.+2      	; 0x1950 <vfprintf+0x4c>
    194e:	f1 c0       	rjmp	.+482    	; 0x1b32 <vfprintf+0x22e>
    1950:	85 32       	cpi	r24, 0x25	; 37
    1952:	59 f4       	brne	.+22     	; 0x196a <vfprintf+0x66>
    1954:	d3 fc       	sbrc	r13, 3
    1956:	65 91       	lpm	r22, Z+
    1958:	d3 fe       	sbrs	r13, 3
    195a:	61 91       	ld	r22, Z+
    195c:	4f 01       	movw	r8, r30
    195e:	65 32       	cpi	r22, 0x25	; 37
    1960:	19 f0       	breq	.+6      	; 0x1968 <vfprintf+0x64>
    1962:	06 2f       	mov	r16, r22
    1964:	10 e0       	ldi	r17, 0x00	; 0
    1966:	1b c0       	rjmp	.+54     	; 0x199e <vfprintf+0x9a>
    1968:	85 e2       	ldi	r24, 0x25	; 37
    196a:	90 e0       	ldi	r25, 0x00	; 0
    196c:	2b c0       	rjmp	.+86     	; 0x19c4 <vfprintf+0xc0>
    196e:	00 23       	and	r16, r16
    1970:	09 f4       	brne	.+2      	; 0x1974 <vfprintf+0x70>
    1972:	df c0       	rjmp	.+446    	; 0x1b32 <vfprintf+0x22e>
    1974:	8a e5       	ldi	r24, 0x5A	; 90
    1976:	93 e0       	ldi	r25, 0x03	; 3
    1978:	60 2f       	mov	r22, r16
    197a:	70 e0       	ldi	r23, 0x00	; 0
    197c:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <strchr_P>
    1980:	89 2b       	or	r24, r25
    1982:	39 f4       	brne	.+14     	; 0x1992 <vfprintf+0x8e>
    1984:	03 32       	cpi	r16, 0x23	; 35
    1986:	11 f4       	brne	.+4      	; 0x198c <vfprintf+0x88>
    1988:	10 61       	ori	r17, 0x10	; 16
    198a:	03 c0       	rjmp	.+6      	; 0x1992 <vfprintf+0x8e>
    198c:	0c 36       	cpi	r16, 0x6C	; 108
    198e:	61 f4       	brne	.+24     	; 0x19a8 <vfprintf+0xa4>
    1990:	10 68       	ori	r17, 0x80	; 128
    1992:	f4 01       	movw	r30, r8
    1994:	d3 fc       	sbrc	r13, 3
    1996:	05 91       	lpm	r16, Z+
    1998:	d3 fe       	sbrs	r13, 3
    199a:	01 91       	ld	r16, Z+
    199c:	4f 01       	movw	r8, r30
    199e:	17 ff       	sbrs	r17, 7
    19a0:	e6 cf       	rjmp	.-52     	; 0x196e <vfprintf+0x6a>
    19a2:	00 23       	and	r16, r16
    19a4:	09 f4       	brne	.+2      	; 0x19a8 <vfprintf+0xa4>
    19a6:	c5 c0       	rjmp	.+394    	; 0x1b32 <vfprintf+0x22e>
    19a8:	83 e5       	ldi	r24, 0x53	; 83
    19aa:	93 e0       	ldi	r25, 0x03	; 3
    19ac:	60 2f       	mov	r22, r16
    19ae:	70 e0       	ldi	r23, 0x00	; 0
    19b0:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <strchr_P>
    19b4:	89 2b       	or	r24, r25
    19b6:	51 f0       	breq	.+20     	; 0x19cc <vfprintf+0xc8>
    19b8:	44 e0       	ldi	r20, 0x04	; 4
    19ba:	50 e0       	ldi	r21, 0x00	; 0
    19bc:	e4 0e       	add	r14, r20
    19be:	f5 1e       	adc	r15, r21
    19c0:	8f e3       	ldi	r24, 0x3F	; 63
    19c2:	90 e0       	ldi	r25, 0x00	; 0
    19c4:	b5 01       	movw	r22, r10
    19c6:	0e 94 70 10 	call	0x20e0	; 0x20e0 <fputc>
    19ca:	b7 cf       	rjmp	.-146    	; 0x193a <vfprintf+0x36>
    19cc:	03 36       	cpi	r16, 0x63	; 99
    19ce:	29 f0       	breq	.+10     	; 0x19da <vfprintf+0xd6>
    19d0:	03 37       	cpi	r16, 0x73	; 115
    19d2:	79 f0       	breq	.+30     	; 0x19f2 <vfprintf+0xee>
    19d4:	03 35       	cpi	r16, 0x53	; 83
    19d6:	f1 f4       	brne	.+60     	; 0x1a14 <vfprintf+0x110>
    19d8:	0b c0       	rjmp	.+22     	; 0x19f0 <vfprintf+0xec>
    19da:	87 01       	movw	r16, r14
    19dc:	0e 5f       	subi	r16, 0xFE	; 254
    19de:	1f 4f       	sbci	r17, 0xFF	; 255
    19e0:	f7 01       	movw	r30, r14
    19e2:	80 81       	ld	r24, Z
    19e4:	91 81       	ldd	r25, Z+1	; 0x01
    19e6:	b5 01       	movw	r22, r10
    19e8:	0e 94 70 10 	call	0x20e0	; 0x20e0 <fputc>
    19ec:	78 01       	movw	r14, r16
    19ee:	a5 cf       	rjmp	.-182    	; 0x193a <vfprintf+0x36>
    19f0:	11 60       	ori	r17, 0x01	; 1
    19f2:	f7 01       	movw	r30, r14
    19f4:	c0 80       	ld	r12, Z
    19f6:	d1 80       	ldd	r13, Z+1	; 0x01
    19f8:	04 c0       	rjmp	.+8      	; 0x1a02 <vfprintf+0xfe>
    19fa:	90 e0       	ldi	r25, 0x00	; 0
    19fc:	b5 01       	movw	r22, r10
    19fe:	0e 94 70 10 	call	0x20e0	; 0x20e0 <fputc>
    1a02:	f6 01       	movw	r30, r12
    1a04:	10 fd       	sbrc	r17, 0
    1a06:	85 91       	lpm	r24, Z+
    1a08:	10 ff       	sbrs	r17, 0
    1a0a:	81 91       	ld	r24, Z+
    1a0c:	6f 01       	movw	r12, r30
    1a0e:	88 23       	and	r24, r24
    1a10:	a1 f7       	brne	.-24     	; 0x19fa <vfprintf+0xf6>
    1a12:	8a cf       	rjmp	.-236    	; 0x1928 <vfprintf+0x24>
    1a14:	04 36       	cpi	r16, 0x64	; 100
    1a16:	11 f0       	breq	.+4      	; 0x1a1c <vfprintf+0x118>
    1a18:	09 36       	cpi	r16, 0x69	; 105
    1a1a:	39 f5       	brne	.+78     	; 0x1a6a <vfprintf+0x166>
    1a1c:	17 ff       	sbrs	r17, 7
    1a1e:	08 c0       	rjmp	.+16     	; 0x1a30 <vfprintf+0x12c>
    1a20:	f7 01       	movw	r30, r14
    1a22:	20 81       	ld	r18, Z
    1a24:	31 81       	ldd	r19, Z+1	; 0x01
    1a26:	42 81       	ldd	r20, Z+2	; 0x02
    1a28:	53 81       	ldd	r21, Z+3	; 0x03
    1a2a:	84 e0       	ldi	r24, 0x04	; 4
    1a2c:	90 e0       	ldi	r25, 0x00	; 0
    1a2e:	0a c0       	rjmp	.+20     	; 0x1a44 <vfprintf+0x140>
    1a30:	f7 01       	movw	r30, r14
    1a32:	80 81       	ld	r24, Z
    1a34:	91 81       	ldd	r25, Z+1	; 0x01
    1a36:	9c 01       	movw	r18, r24
    1a38:	44 27       	eor	r20, r20
    1a3a:	37 fd       	sbrc	r19, 7
    1a3c:	40 95       	com	r20
    1a3e:	54 2f       	mov	r21, r20
    1a40:	82 e0       	ldi	r24, 0x02	; 2
    1a42:	90 e0       	ldi	r25, 0x00	; 0
    1a44:	e8 0e       	add	r14, r24
    1a46:	f9 1e       	adc	r15, r25
    1a48:	1f 7e       	andi	r17, 0xEF	; 239
    1a4a:	57 ff       	sbrs	r21, 7
    1a4c:	08 c0       	rjmp	.+16     	; 0x1a5e <vfprintf+0x15a>
    1a4e:	50 95       	com	r21
    1a50:	40 95       	com	r20
    1a52:	30 95       	com	r19
    1a54:	21 95       	neg	r18
    1a56:	3f 4f       	sbci	r19, 0xFF	; 255
    1a58:	4f 4f       	sbci	r20, 0xFF	; 255
    1a5a:	5f 4f       	sbci	r21, 0xFF	; 255
    1a5c:	10 64       	ori	r17, 0x40	; 64
    1a5e:	ca 01       	movw	r24, r20
    1a60:	b9 01       	movw	r22, r18
    1a62:	a3 01       	movw	r20, r6
    1a64:	2a e0       	ldi	r18, 0x0A	; 10
    1a66:	30 e0       	ldi	r19, 0x00	; 0
    1a68:	34 c0       	rjmp	.+104    	; 0x1ad2 <vfprintf+0x1ce>
    1a6a:	00 37       	cpi	r16, 0x70	; 112
    1a6c:	a9 f0       	breq	.+42     	; 0x1a98 <vfprintf+0x194>
    1a6e:	01 37       	cpi	r16, 0x71	; 113
    1a70:	30 f4       	brcc	.+12     	; 0x1a7e <vfprintf+0x17a>
    1a72:	08 35       	cpi	r16, 0x58	; 88
    1a74:	b1 f0       	breq	.+44     	; 0x1aa2 <vfprintf+0x19e>
    1a76:	0f 36       	cpi	r16, 0x6F	; 111
    1a78:	09 f0       	breq	.+2      	; 0x1a7c <vfprintf+0x178>
    1a7a:	5b c0       	rjmp	.+182    	; 0x1b32 <vfprintf+0x22e>
    1a7c:	06 c0       	rjmp	.+12     	; 0x1a8a <vfprintf+0x186>
    1a7e:	05 37       	cpi	r16, 0x75	; 117
    1a80:	39 f0       	breq	.+14     	; 0x1a90 <vfprintf+0x18c>
    1a82:	08 37       	cpi	r16, 0x78	; 120
    1a84:	09 f0       	breq	.+2      	; 0x1a88 <vfprintf+0x184>
    1a86:	55 c0       	rjmp	.+170    	; 0x1b32 <vfprintf+0x22e>
    1a88:	08 c0       	rjmp	.+16     	; 0x1a9a <vfprintf+0x196>
    1a8a:	28 e0       	ldi	r18, 0x08	; 8
    1a8c:	30 e0       	ldi	r19, 0x00	; 0
    1a8e:	0c c0       	rjmp	.+24     	; 0x1aa8 <vfprintf+0x1a4>
    1a90:	1f 7e       	andi	r17, 0xEF	; 239
    1a92:	2a e0       	ldi	r18, 0x0A	; 10
    1a94:	30 e0       	ldi	r19, 0x00	; 0
    1a96:	08 c0       	rjmp	.+16     	; 0x1aa8 <vfprintf+0x1a4>
    1a98:	10 61       	ori	r17, 0x10	; 16
    1a9a:	14 62       	ori	r17, 0x24	; 36
    1a9c:	20 e1       	ldi	r18, 0x10	; 16
    1a9e:	30 e0       	ldi	r19, 0x00	; 0
    1aa0:	03 c0       	rjmp	.+6      	; 0x1aa8 <vfprintf+0x1a4>
    1aa2:	14 60       	ori	r17, 0x04	; 4
    1aa4:	20 e1       	ldi	r18, 0x10	; 16
    1aa6:	32 e0       	ldi	r19, 0x02	; 2
    1aa8:	17 ff       	sbrs	r17, 7
    1aaa:	08 c0       	rjmp	.+16     	; 0x1abc <vfprintf+0x1b8>
    1aac:	f7 01       	movw	r30, r14
    1aae:	60 81       	ld	r22, Z
    1ab0:	71 81       	ldd	r23, Z+1	; 0x01
    1ab2:	82 81       	ldd	r24, Z+2	; 0x02
    1ab4:	93 81       	ldd	r25, Z+3	; 0x03
    1ab6:	44 e0       	ldi	r20, 0x04	; 4
    1ab8:	50 e0       	ldi	r21, 0x00	; 0
    1aba:	08 c0       	rjmp	.+16     	; 0x1acc <vfprintf+0x1c8>
    1abc:	f7 01       	movw	r30, r14
    1abe:	80 81       	ld	r24, Z
    1ac0:	91 81       	ldd	r25, Z+1	; 0x01
    1ac2:	bc 01       	movw	r22, r24
    1ac4:	80 e0       	ldi	r24, 0x00	; 0
    1ac6:	90 e0       	ldi	r25, 0x00	; 0
    1ac8:	42 e0       	ldi	r20, 0x02	; 2
    1aca:	50 e0       	ldi	r21, 0x00	; 0
    1acc:	e4 0e       	add	r14, r20
    1ace:	f5 1e       	adc	r15, r21
    1ad0:	a3 01       	movw	r20, r6
    1ad2:	0e 94 10 11 	call	0x2220	; 0x2220 <__ultoa_invert>
    1ad6:	d8 2e       	mov	r13, r24
    1ad8:	d6 18       	sub	r13, r6
    1ada:	01 2f       	mov	r16, r17
    1adc:	10 e0       	ldi	r17, 0x00	; 0
    1ade:	06 ff       	sbrs	r16, 6
    1ae0:	05 c0       	rjmp	.+10     	; 0x1aec <vfprintf+0x1e8>
    1ae2:	8d e2       	ldi	r24, 0x2D	; 45
    1ae4:	90 e0       	ldi	r25, 0x00	; 0
    1ae6:	b5 01       	movw	r22, r10
    1ae8:	0e 94 70 10 	call	0x20e0	; 0x20e0 <fputc>
    1aec:	04 ff       	sbrs	r16, 4
    1aee:	15 c0       	rjmp	.+42     	; 0x1b1a <vfprintf+0x216>
    1af0:	fe 01       	movw	r30, r28
    1af2:	ed 0d       	add	r30, r13
    1af4:	f1 1d       	adc	r31, r1
    1af6:	80 81       	ld	r24, Z
    1af8:	80 33       	cpi	r24, 0x30	; 48
    1afa:	79 f0       	breq	.+30     	; 0x1b1a <vfprintf+0x216>
    1afc:	80 e3       	ldi	r24, 0x30	; 48
    1afe:	90 e0       	ldi	r25, 0x00	; 0
    1b00:	b5 01       	movw	r22, r10
    1b02:	0e 94 70 10 	call	0x20e0	; 0x20e0 <fputc>
    1b06:	02 ff       	sbrs	r16, 2
    1b08:	08 c0       	rjmp	.+16     	; 0x1b1a <vfprintf+0x216>
    1b0a:	00 72       	andi	r16, 0x20	; 32
    1b0c:	10 70       	andi	r17, 0x00	; 0
    1b0e:	c8 01       	movw	r24, r16
    1b10:	88 5a       	subi	r24, 0xA8	; 168
    1b12:	9f 4f       	sbci	r25, 0xFF	; 255
    1b14:	b5 01       	movw	r22, r10
    1b16:	0e 94 70 10 	call	0x20e0	; 0x20e0 <fputc>
    1b1a:	da 94       	dec	r13
    1b1c:	f3 01       	movw	r30, r6
    1b1e:	ed 0d       	add	r30, r13
    1b20:	f1 1d       	adc	r31, r1
    1b22:	80 81       	ld	r24, Z
    1b24:	90 e0       	ldi	r25, 0x00	; 0
    1b26:	b5 01       	movw	r22, r10
    1b28:	0e 94 70 10 	call	0x20e0	; 0x20e0 <fputc>
    1b2c:	dd 20       	and	r13, r13
    1b2e:	a9 f7       	brne	.-22     	; 0x1b1a <vfprintf+0x216>
    1b30:	04 cf       	rjmp	.-504    	; 0x193a <vfprintf+0x36>
    1b32:	f5 01       	movw	r30, r10
    1b34:	66 81       	ldd	r22, Z+6	; 0x06
    1b36:	77 81       	ldd	r23, Z+7	; 0x07
    1b38:	cb 01       	movw	r24, r22
    1b3a:	2b 96       	adiw	r28, 0x0b	; 11
    1b3c:	ee e0       	ldi	r30, 0x0E	; 14
    1b3e:	0c 94 b2 0f 	jmp	0x1f64	; 0x1f64 <__epilogue_restores__+0x8>

00001b42 <putval>:
    1b42:	fc 01       	movw	r30, r24
    1b44:	20 fd       	sbrc	r18, 0
    1b46:	08 c0       	rjmp	.+16     	; 0x1b58 <putval+0x16>
    1b48:	23 fd       	sbrc	r18, 3
    1b4a:	05 c0       	rjmp	.+10     	; 0x1b56 <putval+0x14>
    1b4c:	22 ff       	sbrs	r18, 2
    1b4e:	02 c0       	rjmp	.+4      	; 0x1b54 <putval+0x12>
    1b50:	73 83       	std	Z+3, r23	; 0x03
    1b52:	62 83       	std	Z+2, r22	; 0x02
    1b54:	51 83       	std	Z+1, r21	; 0x01
    1b56:	40 83       	st	Z, r20
    1b58:	08 95       	ret

00001b5a <mulacc>:
    1b5a:	ef 92       	push	r14
    1b5c:	ff 92       	push	r15
    1b5e:	0f 93       	push	r16
    1b60:	1f 93       	push	r17
    1b62:	44 ff       	sbrs	r20, 4
    1b64:	02 c0       	rjmp	.+4      	; 0x1b6a <mulacc+0x10>
    1b66:	33 e0       	ldi	r19, 0x03	; 3
    1b68:	11 c0       	rjmp	.+34     	; 0x1b8c <mulacc+0x32>
    1b6a:	46 ff       	sbrs	r20, 6
    1b6c:	02 c0       	rjmp	.+4      	; 0x1b72 <mulacc+0x18>
    1b6e:	34 e0       	ldi	r19, 0x04	; 4
    1b70:	0d c0       	rjmp	.+26     	; 0x1b8c <mulacc+0x32>
    1b72:	db 01       	movw	r26, r22
    1b74:	fc 01       	movw	r30, r24
    1b76:	aa 0f       	add	r26, r26
    1b78:	bb 1f       	adc	r27, r27
    1b7a:	ee 1f       	adc	r30, r30
    1b7c:	ff 1f       	adc	r31, r31
    1b7e:	10 94       	com	r1
    1b80:	d1 f7       	brne	.-12     	; 0x1b76 <mulacc+0x1c>
    1b82:	6a 0f       	add	r22, r26
    1b84:	7b 1f       	adc	r23, r27
    1b86:	8e 1f       	adc	r24, r30
    1b88:	9f 1f       	adc	r25, r31
    1b8a:	31 e0       	ldi	r19, 0x01	; 1
    1b8c:	66 0f       	add	r22, r22
    1b8e:	77 1f       	adc	r23, r23
    1b90:	88 1f       	adc	r24, r24
    1b92:	99 1f       	adc	r25, r25
    1b94:	31 50       	subi	r19, 0x01	; 1
    1b96:	d1 f7       	brne	.-12     	; 0x1b8c <mulacc+0x32>
    1b98:	7b 01       	movw	r14, r22
    1b9a:	8c 01       	movw	r16, r24
    1b9c:	e2 0e       	add	r14, r18
    1b9e:	f1 1c       	adc	r15, r1
    1ba0:	01 1d       	adc	r16, r1
    1ba2:	11 1d       	adc	r17, r1
    1ba4:	a8 01       	movw	r20, r16
    1ba6:	97 01       	movw	r18, r14
    1ba8:	b7 01       	movw	r22, r14
    1baa:	ca 01       	movw	r24, r20
    1bac:	1f 91       	pop	r17
    1bae:	0f 91       	pop	r16
    1bb0:	ff 90       	pop	r15
    1bb2:	ef 90       	pop	r14
    1bb4:	08 95       	ret

00001bb6 <skip_spaces>:
    1bb6:	0f 93       	push	r16
    1bb8:	1f 93       	push	r17
    1bba:	cf 93       	push	r28
    1bbc:	df 93       	push	r29
    1bbe:	8c 01       	movw	r16, r24
    1bc0:	c8 01       	movw	r24, r16
    1bc2:	0e 94 2e 10 	call	0x205c	; 0x205c <fgetc>
    1bc6:	ec 01       	movw	r28, r24
    1bc8:	97 fd       	sbrc	r25, 7
    1bca:	08 c0       	rjmp	.+16     	; 0x1bdc <skip_spaces+0x26>
    1bcc:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <isspace>
    1bd0:	89 2b       	or	r24, r25
    1bd2:	b1 f7       	brne	.-20     	; 0x1bc0 <skip_spaces+0xa>
    1bd4:	ce 01       	movw	r24, r28
    1bd6:	b8 01       	movw	r22, r16
    1bd8:	0e 94 f6 10 	call	0x21ec	; 0x21ec <ungetc>
    1bdc:	ce 01       	movw	r24, r28
    1bde:	df 91       	pop	r29
    1be0:	cf 91       	pop	r28
    1be2:	1f 91       	pop	r17
    1be4:	0f 91       	pop	r16
    1be6:	08 95       	ret

00001be8 <conv_int>:
    1be8:	a0 e0       	ldi	r26, 0x00	; 0
    1bea:	b0 e0       	ldi	r27, 0x00	; 0
    1bec:	ea ef       	ldi	r30, 0xFA	; 250
    1bee:	fd e0       	ldi	r31, 0x0D	; 13
    1bf0:	0c 94 9a 0f 	jmp	0x1f34	; 0x1f34 <__prologue_saves__+0x10>
    1bf4:	ec 01       	movw	r28, r24
    1bf6:	c6 2e       	mov	r12, r22
    1bf8:	5a 01       	movw	r10, r20
    1bfa:	12 2f       	mov	r17, r18
    1bfc:	0e 94 2e 10 	call	0x205c	; 0x205c <fgetc>
    1c00:	ac 01       	movw	r20, r24
    1c02:	8b 32       	cpi	r24, 0x2B	; 43
    1c04:	19 f0       	breq	.+6      	; 0x1c0c <conv_int+0x24>
    1c06:	8d 32       	cpi	r24, 0x2D	; 45
    1c08:	51 f4       	brne	.+20     	; 0x1c1e <conv_int+0x36>
    1c0a:	10 68       	ori	r17, 0x80	; 128
    1c0c:	ca 94       	dec	r12
    1c0e:	09 f4       	brne	.+2      	; 0x1c12 <conv_int+0x2a>
    1c10:	6d c0       	rjmp	.+218    	; 0x1cec <conv_int+0x104>
    1c12:	ce 01       	movw	r24, r28
    1c14:	0e 94 2e 10 	call	0x205c	; 0x205c <fgetc>
    1c18:	ac 01       	movw	r20, r24
    1c1a:	97 fd       	sbrc	r25, 7
    1c1c:	67 c0       	rjmp	.+206    	; 0x1cec <conv_int+0x104>
    1c1e:	6d ef       	ldi	r22, 0xFD	; 253
    1c20:	d6 2e       	mov	r13, r22
    1c22:	d1 22       	and	r13, r17
    1c24:	8d 2d       	mov	r24, r13
    1c26:	80 73       	andi	r24, 0x30	; 48
    1c28:	01 f5       	brne	.+64     	; 0x1c6a <conv_int+0x82>
    1c2a:	40 33       	cpi	r20, 0x30	; 48
    1c2c:	f1 f4       	brne	.+60     	; 0x1c6a <conv_int+0x82>
    1c2e:	ca 94       	dec	r12
    1c30:	09 f4       	brne	.+2      	; 0x1c34 <conv_int+0x4c>
    1c32:	47 c0       	rjmp	.+142    	; 0x1cc2 <conv_int+0xda>
    1c34:	ce 01       	movw	r24, r28
    1c36:	0e 94 2e 10 	call	0x205c	; 0x205c <fgetc>
    1c3a:	ac 01       	movw	r20, r24
    1c3c:	97 fd       	sbrc	r25, 7
    1c3e:	41 c0       	rjmp	.+130    	; 0x1cc2 <conv_int+0xda>
    1c40:	82 e0       	ldi	r24, 0x02	; 2
    1c42:	d8 2a       	or	r13, r24
    1c44:	48 37       	cpi	r20, 0x78	; 120
    1c46:	11 f0       	breq	.+4      	; 0x1c4c <conv_int+0x64>
    1c48:	48 35       	cpi	r20, 0x58	; 88
    1c4a:	59 f4       	brne	.+22     	; 0x1c62 <conv_int+0x7a>
    1c4c:	80 e4       	ldi	r24, 0x40	; 64
    1c4e:	d8 2a       	or	r13, r24
    1c50:	ca 94       	dec	r12
    1c52:	b9 f1       	breq	.+110    	; 0x1cc2 <conv_int+0xda>
    1c54:	ce 01       	movw	r24, r28
    1c56:	0e 94 2e 10 	call	0x205c	; 0x205c <fgetc>
    1c5a:	ac 01       	movw	r20, r24
    1c5c:	99 23       	and	r25, r25
    1c5e:	2c f4       	brge	.+10     	; 0x1c6a <conv_int+0x82>
    1c60:	30 c0       	rjmp	.+96     	; 0x1cc2 <conv_int+0xda>
    1c62:	d6 fc       	sbrc	r13, 6
    1c64:	02 c0       	rjmp	.+4      	; 0x1c6a <conv_int+0x82>
    1c66:	80 e1       	ldi	r24, 0x10	; 16
    1c68:	d8 2a       	or	r13, r24
    1c6a:	ee 24       	eor	r14, r14
    1c6c:	ff 24       	eor	r15, r15
    1c6e:	87 01       	movw	r16, r14
    1c70:	24 2f       	mov	r18, r20
    1c72:	20 53       	subi	r18, 0x30	; 48
    1c74:	28 30       	cpi	r18, 0x08	; 8
    1c76:	88 f0       	brcs	.+34     	; 0x1c9a <conv_int+0xb2>
    1c78:	d4 fc       	sbrc	r13, 4
    1c7a:	09 c0       	rjmp	.+18     	; 0x1c8e <conv_int+0xa6>
    1c7c:	2a 30       	cpi	r18, 0x0A	; 10
    1c7e:	68 f0       	brcs	.+26     	; 0x1c9a <conv_int+0xb2>
    1c80:	d6 fe       	sbrs	r13, 6
    1c82:	05 c0       	rjmp	.+10     	; 0x1c8e <conv_int+0xa6>
    1c84:	2f 7d       	andi	r18, 0xDF	; 223
    1c86:	82 2f       	mov	r24, r18
    1c88:	81 51       	subi	r24, 0x11	; 17
    1c8a:	86 30       	cpi	r24, 0x06	; 6
    1c8c:	28 f0       	brcs	.+10     	; 0x1c98 <conv_int+0xb0>
    1c8e:	ca 01       	movw	r24, r20
    1c90:	be 01       	movw	r22, r28
    1c92:	0e 94 f6 10 	call	0x21ec	; 0x21ec <ungetc>
    1c96:	12 c0       	rjmp	.+36     	; 0x1cbc <conv_int+0xd4>
    1c98:	27 50       	subi	r18, 0x07	; 7
    1c9a:	c8 01       	movw	r24, r16
    1c9c:	b7 01       	movw	r22, r14
    1c9e:	4d 2d       	mov	r20, r13
    1ca0:	0e 94 ad 0d 	call	0x1b5a	; 0x1b5a <mulacc>
    1ca4:	7b 01       	movw	r14, r22
    1ca6:	8c 01       	movw	r16, r24
    1ca8:	82 e0       	ldi	r24, 0x02	; 2
    1caa:	d8 2a       	or	r13, r24
    1cac:	ca 94       	dec	r12
    1cae:	61 f0       	breq	.+24     	; 0x1cc8 <conv_int+0xe0>
    1cb0:	ce 01       	movw	r24, r28
    1cb2:	0e 94 2e 10 	call	0x205c	; 0x205c <fgetc>
    1cb6:	ac 01       	movw	r20, r24
    1cb8:	97 ff       	sbrs	r25, 7
    1cba:	da cf       	rjmp	.-76     	; 0x1c70 <conv_int+0x88>
    1cbc:	d1 fc       	sbrc	r13, 1
    1cbe:	04 c0       	rjmp	.+8      	; 0x1cc8 <conv_int+0xe0>
    1cc0:	15 c0       	rjmp	.+42     	; 0x1cec <conv_int+0x104>
    1cc2:	ee 24       	eor	r14, r14
    1cc4:	ff 24       	eor	r15, r15
    1cc6:	87 01       	movw	r16, r14
    1cc8:	d7 fe       	sbrs	r13, 7
    1cca:	08 c0       	rjmp	.+16     	; 0x1cdc <conv_int+0xf4>
    1ccc:	10 95       	com	r17
    1cce:	00 95       	com	r16
    1cd0:	f0 94       	com	r15
    1cd2:	e0 94       	com	r14
    1cd4:	e1 1c       	adc	r14, r1
    1cd6:	f1 1c       	adc	r15, r1
    1cd8:	01 1d       	adc	r16, r1
    1cda:	11 1d       	adc	r17, r1
    1cdc:	c5 01       	movw	r24, r10
    1cde:	b8 01       	movw	r22, r16
    1ce0:	a7 01       	movw	r20, r14
    1ce2:	2d 2d       	mov	r18, r13
    1ce4:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <putval>
    1ce8:	81 e0       	ldi	r24, 0x01	; 1
    1cea:	01 c0       	rjmp	.+2      	; 0x1cee <conv_int+0x106>
    1cec:	80 e0       	ldi	r24, 0x00	; 0
    1cee:	cd b7       	in	r28, 0x3d	; 61
    1cf0:	de b7       	in	r29, 0x3e	; 62
    1cf2:	ea e0       	ldi	r30, 0x0A	; 10
    1cf4:	0c 94 b6 0f 	jmp	0x1f6c	; 0x1f6c <__epilogue_restores__+0x10>

00001cf8 <vfscanf>:
    1cf8:	a0 e0       	ldi	r26, 0x00	; 0
    1cfa:	b0 e0       	ldi	r27, 0x00	; 0
    1cfc:	e2 e8       	ldi	r30, 0x82	; 130
    1cfe:	fe e0       	ldi	r31, 0x0E	; 14
    1d00:	0c 94 96 0f 	jmp	0x1f2c	; 0x1f2c <__prologue_saves__+0x8>
    1d04:	5c 01       	movw	r10, r24
    1d06:	6b 01       	movw	r12, r22
    1d08:	3a 01       	movw	r6, r20
    1d0a:	fc 01       	movw	r30, r24
    1d0c:	17 82       	std	Z+7, r1	; 0x07
    1d0e:	16 82       	std	Z+6, r1	; 0x06
    1d10:	88 24       	eor	r8, r8
    1d12:	dc c0       	rjmp	.+440    	; 0x1ecc <vfscanf+0x1d4>
    1d14:	81 2f       	mov	r24, r17
    1d16:	90 e0       	ldi	r25, 0x00	; 0
    1d18:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <isspace>
    1d1c:	89 2b       	or	r24, r25
    1d1e:	21 f0       	breq	.+8      	; 0x1d28 <vfscanf+0x30>
    1d20:	c5 01       	movw	r24, r10
    1d22:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <skip_spaces>
    1d26:	d2 c0       	rjmp	.+420    	; 0x1ecc <vfscanf+0x1d4>
    1d28:	15 32       	cpi	r17, 0x25	; 37
    1d2a:	49 f4       	brne	.+18     	; 0x1d3e <vfscanf+0x46>
    1d2c:	f6 01       	movw	r30, r12
    1d2e:	f3 fc       	sbrc	r15, 3
    1d30:	65 91       	lpm	r22, Z+
    1d32:	f3 fe       	sbrs	r15, 3
    1d34:	61 91       	ld	r22, Z+
    1d36:	6f 01       	movw	r12, r30
    1d38:	65 32       	cpi	r22, 0x25	; 37
    1d3a:	69 f4       	brne	.+26     	; 0x1d56 <vfscanf+0x5e>
    1d3c:	15 e2       	ldi	r17, 0x25	; 37
    1d3e:	c5 01       	movw	r24, r10
    1d40:	0e 94 2e 10 	call	0x205c	; 0x205c <fgetc>
    1d44:	97 fd       	sbrc	r25, 7
    1d46:	ce c0       	rjmp	.+412    	; 0x1ee4 <vfscanf+0x1ec>
    1d48:	18 17       	cp	r17, r24
    1d4a:	09 f4       	brne	.+2      	; 0x1d4e <vfscanf+0x56>
    1d4c:	bf c0       	rjmp	.+382    	; 0x1ecc <vfscanf+0x1d4>
    1d4e:	b5 01       	movw	r22, r10
    1d50:	0e 94 f6 10 	call	0x21ec	; 0x21ec <ungetc>
    1d54:	cc c0       	rjmp	.+408    	; 0x1eee <vfscanf+0x1f6>
    1d56:	6a 32       	cpi	r22, 0x2A	; 42
    1d58:	19 f0       	breq	.+6      	; 0x1d60 <vfscanf+0x68>
    1d5a:	16 2f       	mov	r17, r22
    1d5c:	00 e0       	ldi	r16, 0x00	; 0
    1d5e:	06 c0       	rjmp	.+12     	; 0x1d6c <vfscanf+0x74>
    1d60:	f3 fc       	sbrc	r15, 3
    1d62:	15 91       	lpm	r17, Z+
    1d64:	f3 fe       	sbrs	r15, 3
    1d66:	11 91       	ld	r17, Z+
    1d68:	6f 01       	movw	r12, r30
    1d6a:	01 e0       	ldi	r16, 0x01	; 1
    1d6c:	99 24       	eor	r9, r9
    1d6e:	0f c0       	rjmp	.+30     	; 0x1d8e <vfscanf+0x96>
    1d70:	02 60       	ori	r16, 0x02	; 2
    1d72:	69 2d       	mov	r22, r9
    1d74:	70 e0       	ldi	r23, 0x00	; 0
    1d76:	80 e0       	ldi	r24, 0x00	; 0
    1d78:	90 e0       	ldi	r25, 0x00	; 0
    1d7a:	40 e2       	ldi	r20, 0x20	; 32
    1d7c:	0e 94 ad 0d 	call	0x1b5a	; 0x1b5a <mulacc>
    1d80:	96 2e       	mov	r9, r22
    1d82:	f6 01       	movw	r30, r12
    1d84:	f3 fc       	sbrc	r15, 3
    1d86:	15 91       	lpm	r17, Z+
    1d88:	f3 fe       	sbrs	r15, 3
    1d8a:	11 91       	ld	r17, Z+
    1d8c:	6f 01       	movw	r12, r30
    1d8e:	21 2f       	mov	r18, r17
    1d90:	20 53       	subi	r18, 0x30	; 48
    1d92:	2a 30       	cpi	r18, 0x0A	; 10
    1d94:	68 f3       	brcs	.-38     	; 0x1d70 <vfscanf+0x78>
    1d96:	01 fd       	sbrc	r16, 1
    1d98:	03 c0       	rjmp	.+6      	; 0x1da0 <vfscanf+0xa8>
    1d9a:	99 24       	eor	r9, r9
    1d9c:	9a 94       	dec	r9
    1d9e:	03 c0       	rjmp	.+6      	; 0x1da6 <vfscanf+0xae>
    1da0:	99 20       	and	r9, r9
    1da2:	09 f4       	brne	.+2      	; 0x1da6 <vfscanf+0xae>
    1da4:	a4 c0       	rjmp	.+328    	; 0x1eee <vfscanf+0x1f6>
    1da6:	18 36       	cpi	r17, 0x68	; 104
    1da8:	21 f0       	breq	.+8      	; 0x1db2 <vfscanf+0xba>
    1daa:	1c 36       	cpi	r17, 0x6C	; 108
    1dac:	91 f4       	brne	.+36     	; 0x1dd2 <vfscanf+0xda>
    1dae:	f6 01       	movw	r30, r12
    1db0:	0a c0       	rjmp	.+20     	; 0x1dc6 <vfscanf+0xce>
    1db2:	f6 01       	movw	r30, r12
    1db4:	f3 fc       	sbrc	r15, 3
    1db6:	65 91       	lpm	r22, Z+
    1db8:	f3 fe       	sbrs	r15, 3
    1dba:	61 91       	ld	r22, Z+
    1dbc:	68 36       	cpi	r22, 0x68	; 104
    1dbe:	11 f0       	breq	.+4      	; 0x1dc4 <vfscanf+0xcc>
    1dc0:	16 2f       	mov	r17, r22
    1dc2:	06 c0       	rjmp	.+12     	; 0x1dd0 <vfscanf+0xd8>
    1dc4:	08 60       	ori	r16, 0x08	; 8
    1dc6:	04 60       	ori	r16, 0x04	; 4
    1dc8:	f3 fc       	sbrc	r15, 3
    1dca:	15 91       	lpm	r17, Z+
    1dcc:	f3 fe       	sbrs	r15, 3
    1dce:	11 91       	ld	r17, Z+
    1dd0:	6f 01       	movw	r12, r30
    1dd2:	11 23       	and	r17, r17
    1dd4:	09 f4       	brne	.+2      	; 0x1dd8 <vfscanf+0xe0>
    1dd6:	8b c0       	rjmp	.+278    	; 0x1eee <vfscanf+0x1f6>
    1dd8:	8a e6       	ldi	r24, 0x6A	; 106
    1dda:	93 e0       	ldi	r25, 0x03	; 3
    1ddc:	61 2f       	mov	r22, r17
    1dde:	70 e0       	ldi	r23, 0x00	; 0
    1de0:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <strchr_P>
    1de4:	89 2b       	or	r24, r25
    1de6:	09 f4       	brne	.+2      	; 0x1dea <vfscanf+0xf2>
    1de8:	82 c0       	rjmp	.+260    	; 0x1eee <vfscanf+0x1f6>
    1dea:	80 2f       	mov	r24, r16
    1dec:	00 ff       	sbrs	r16, 0
    1dee:	03 c0       	rjmp	.+6      	; 0x1df6 <vfscanf+0xfe>
    1df0:	ee 24       	eor	r14, r14
    1df2:	ff 24       	eor	r15, r15
    1df4:	07 c0       	rjmp	.+14     	; 0x1e04 <vfscanf+0x10c>
    1df6:	f3 01       	movw	r30, r6
    1df8:	e0 80       	ld	r14, Z
    1dfa:	f1 80       	ldd	r15, Z+1	; 0x01
    1dfc:	22 e0       	ldi	r18, 0x02	; 2
    1dfe:	30 e0       	ldi	r19, 0x00	; 0
    1e00:	62 0e       	add	r6, r18
    1e02:	73 1e       	adc	r7, r19
    1e04:	1e 36       	cpi	r17, 0x6E	; 110
    1e06:	51 f4       	brne	.+20     	; 0x1e1c <vfscanf+0x124>
    1e08:	f5 01       	movw	r30, r10
    1e0a:	46 81       	ldd	r20, Z+6	; 0x06
    1e0c:	57 81       	ldd	r21, Z+7	; 0x07
    1e0e:	60 e0       	ldi	r22, 0x00	; 0
    1e10:	70 e0       	ldi	r23, 0x00	; 0
    1e12:	c7 01       	movw	r24, r14
    1e14:	20 2f       	mov	r18, r16
    1e16:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <putval>
    1e1a:	58 c0       	rjmp	.+176    	; 0x1ecc <vfscanf+0x1d4>
    1e1c:	13 36       	cpi	r17, 0x63	; 99
    1e1e:	91 f4       	brne	.+36     	; 0x1e44 <vfscanf+0x14c>
    1e20:	81 fd       	sbrc	r24, 1
    1e22:	02 c0       	rjmp	.+4      	; 0x1e28 <vfscanf+0x130>
    1e24:	99 24       	eor	r9, r9
    1e26:	93 94       	inc	r9
    1e28:	c5 01       	movw	r24, r10
    1e2a:	0e 94 2e 10 	call	0x205c	; 0x205c <fgetc>
    1e2e:	97 fd       	sbrc	r25, 7
    1e30:	59 c0       	rjmp	.+178    	; 0x1ee4 <vfscanf+0x1ec>
    1e32:	e1 14       	cp	r14, r1
    1e34:	f1 04       	cpc	r15, r1
    1e36:	19 f0       	breq	.+6      	; 0x1e3e <vfscanf+0x146>
    1e38:	f7 01       	movw	r30, r14
    1e3a:	81 93       	st	Z+, r24
    1e3c:	7f 01       	movw	r14, r30
    1e3e:	9a 94       	dec	r9
    1e40:	99 f7       	brne	.-26     	; 0x1e28 <vfscanf+0x130>
    1e42:	42 c0       	rjmp	.+132    	; 0x1ec8 <vfscanf+0x1d0>
    1e44:	c5 01       	movw	r24, r10
    1e46:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <skip_spaces>
    1e4a:	97 fd       	sbrc	r25, 7
    1e4c:	4b c0       	rjmp	.+150    	; 0x1ee4 <vfscanf+0x1ec>
    1e4e:	1f 36       	cpi	r17, 0x6F	; 111
    1e50:	59 f1       	breq	.+86     	; 0x1ea8 <vfscanf+0x1b0>
    1e52:	10 37       	cpi	r17, 0x70	; 112
    1e54:	28 f4       	brcc	.+10     	; 0x1e60 <vfscanf+0x168>
    1e56:	14 36       	cpi	r17, 0x64	; 100
    1e58:	29 f1       	breq	.+74     	; 0x1ea4 <vfscanf+0x1ac>
    1e5a:	19 36       	cpi	r17, 0x69	; 105
    1e5c:	39 f5       	brne	.+78     	; 0x1eac <vfscanf+0x1b4>
    1e5e:	27 c0       	rjmp	.+78     	; 0x1eae <vfscanf+0x1b6>
    1e60:	13 37       	cpi	r17, 0x73	; 115
    1e62:	19 f0       	breq	.+6      	; 0x1e6a <vfscanf+0x172>
    1e64:	15 37       	cpi	r17, 0x75	; 117
    1e66:	11 f5       	brne	.+68     	; 0x1eac <vfscanf+0x1b4>
    1e68:	1d c0       	rjmp	.+58     	; 0x1ea4 <vfscanf+0x1ac>
    1e6a:	c5 01       	movw	r24, r10
    1e6c:	0e 94 2e 10 	call	0x205c	; 0x205c <fgetc>
    1e70:	ec 01       	movw	r28, r24
    1e72:	97 fd       	sbrc	r25, 7
    1e74:	11 c0       	rjmp	.+34     	; 0x1e98 <vfscanf+0x1a0>
    1e76:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <isspace>
    1e7a:	89 2b       	or	r24, r25
    1e7c:	29 f0       	breq	.+10     	; 0x1e88 <vfscanf+0x190>
    1e7e:	ce 01       	movw	r24, r28
    1e80:	b5 01       	movw	r22, r10
    1e82:	0e 94 f6 10 	call	0x21ec	; 0x21ec <ungetc>
    1e86:	08 c0       	rjmp	.+16     	; 0x1e98 <vfscanf+0x1a0>
    1e88:	e1 14       	cp	r14, r1
    1e8a:	f1 04       	cpc	r15, r1
    1e8c:	19 f0       	breq	.+6      	; 0x1e94 <vfscanf+0x19c>
    1e8e:	f7 01       	movw	r30, r14
    1e90:	c1 93       	st	Z+, r28
    1e92:	7f 01       	movw	r14, r30
    1e94:	9a 94       	dec	r9
    1e96:	49 f7       	brne	.-46     	; 0x1e6a <vfscanf+0x172>
    1e98:	e1 14       	cp	r14, r1
    1e9a:	f1 04       	cpc	r15, r1
    1e9c:	a9 f0       	breq	.+42     	; 0x1ec8 <vfscanf+0x1d0>
    1e9e:	f7 01       	movw	r30, r14
    1ea0:	10 82       	st	Z, r1
    1ea2:	12 c0       	rjmp	.+36     	; 0x1ec8 <vfscanf+0x1d0>
    1ea4:	00 62       	ori	r16, 0x20	; 32
    1ea6:	03 c0       	rjmp	.+6      	; 0x1eae <vfscanf+0x1b6>
    1ea8:	00 61       	ori	r16, 0x10	; 16
    1eaa:	01 c0       	rjmp	.+2      	; 0x1eae <vfscanf+0x1b6>
    1eac:	00 64       	ori	r16, 0x40	; 64
    1eae:	c5 01       	movw	r24, r10
    1eb0:	69 2d       	mov	r22, r9
    1eb2:	a7 01       	movw	r20, r14
    1eb4:	20 2f       	mov	r18, r16
    1eb6:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <conv_int>
    1eba:	88 23       	and	r24, r24
    1ebc:	29 f4       	brne	.+10     	; 0x1ec8 <vfscanf+0x1d0>
    1ebe:	f5 01       	movw	r30, r10
    1ec0:	83 81       	ldd	r24, Z+3	; 0x03
    1ec2:	80 73       	andi	r24, 0x30	; 48
    1ec4:	79 f4       	brne	.+30     	; 0x1ee4 <vfscanf+0x1ec>
    1ec6:	13 c0       	rjmp	.+38     	; 0x1eee <vfscanf+0x1f6>
    1ec8:	00 ff       	sbrs	r16, 0
    1eca:	83 94       	inc	r8
    1ecc:	f5 01       	movw	r30, r10
    1ece:	f3 80       	ldd	r15, Z+3	; 0x03
    1ed0:	f6 01       	movw	r30, r12
    1ed2:	f3 fc       	sbrc	r15, 3
    1ed4:	15 91       	lpm	r17, Z+
    1ed6:	f3 fe       	sbrs	r15, 3
    1ed8:	11 91       	ld	r17, Z+
    1eda:	6f 01       	movw	r12, r30
    1edc:	11 23       	and	r17, r17
    1ede:	09 f0       	breq	.+2      	; 0x1ee2 <vfscanf+0x1ea>
    1ee0:	19 cf       	rjmp	.-462    	; 0x1d14 <vfscanf+0x1c>
    1ee2:	05 c0       	rjmp	.+10     	; 0x1eee <vfscanf+0x1f6>
    1ee4:	88 20       	and	r8, r8
    1ee6:	19 f4       	brne	.+6      	; 0x1eee <vfscanf+0x1f6>
    1ee8:	2f ef       	ldi	r18, 0xFF	; 255
    1eea:	3f ef       	ldi	r19, 0xFF	; 255
    1eec:	02 c0       	rjmp	.+4      	; 0x1ef2 <vfscanf+0x1fa>
    1eee:	28 2d       	mov	r18, r8
    1ef0:	30 e0       	ldi	r19, 0x00	; 0
    1ef2:	c9 01       	movw	r24, r18
    1ef4:	cd b7       	in	r28, 0x3d	; 61
    1ef6:	de b7       	in	r29, 0x3e	; 62
    1ef8:	ee e0       	ldi	r30, 0x0E	; 14
    1efa:	0c 94 b2 0f 	jmp	0x1f64	; 0x1f64 <__epilogue_restores__+0x8>

00001efe <__divmodhi4>:
    1efe:	97 fb       	bst	r25, 7
    1f00:	09 2e       	mov	r0, r25
    1f02:	07 26       	eor	r0, r23
    1f04:	0a d0       	rcall	.+20     	; 0x1f1a <__divmodhi4_neg1>
    1f06:	77 fd       	sbrc	r23, 7
    1f08:	04 d0       	rcall	.+8      	; 0x1f12 <__divmodhi4_neg2>
    1f0a:	43 d0       	rcall	.+134    	; 0x1f92 <__udivmodhi4>
    1f0c:	06 d0       	rcall	.+12     	; 0x1f1a <__divmodhi4_neg1>
    1f0e:	00 20       	and	r0, r0
    1f10:	1a f4       	brpl	.+6      	; 0x1f18 <__divmodhi4_exit>

00001f12 <__divmodhi4_neg2>:
    1f12:	70 95       	com	r23
    1f14:	61 95       	neg	r22
    1f16:	7f 4f       	sbci	r23, 0xFF	; 255

00001f18 <__divmodhi4_exit>:
    1f18:	08 95       	ret

00001f1a <__divmodhi4_neg1>:
    1f1a:	f6 f7       	brtc	.-4      	; 0x1f18 <__divmodhi4_exit>
    1f1c:	90 95       	com	r25
    1f1e:	81 95       	neg	r24
    1f20:	9f 4f       	sbci	r25, 0xFF	; 255
    1f22:	08 95       	ret

00001f24 <__prologue_saves__>:
    1f24:	2f 92       	push	r2
    1f26:	3f 92       	push	r3
    1f28:	4f 92       	push	r4
    1f2a:	5f 92       	push	r5
    1f2c:	6f 92       	push	r6
    1f2e:	7f 92       	push	r7
    1f30:	8f 92       	push	r8
    1f32:	9f 92       	push	r9
    1f34:	af 92       	push	r10
    1f36:	bf 92       	push	r11
    1f38:	cf 92       	push	r12
    1f3a:	df 92       	push	r13
    1f3c:	ef 92       	push	r14
    1f3e:	ff 92       	push	r15
    1f40:	0f 93       	push	r16
    1f42:	1f 93       	push	r17
    1f44:	cf 93       	push	r28
    1f46:	df 93       	push	r29
    1f48:	cd b7       	in	r28, 0x3d	; 61
    1f4a:	de b7       	in	r29, 0x3e	; 62
    1f4c:	ca 1b       	sub	r28, r26
    1f4e:	db 0b       	sbc	r29, r27
    1f50:	0f b6       	in	r0, 0x3f	; 63
    1f52:	f8 94       	cli
    1f54:	de bf       	out	0x3e, r29	; 62
    1f56:	0f be       	out	0x3f, r0	; 63
    1f58:	cd bf       	out	0x3d, r28	; 61
    1f5a:	09 94       	ijmp

00001f5c <__epilogue_restores__>:
    1f5c:	2a 88       	ldd	r2, Y+18	; 0x12
    1f5e:	39 88       	ldd	r3, Y+17	; 0x11
    1f60:	48 88       	ldd	r4, Y+16	; 0x10
    1f62:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f64:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f66:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f68:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f6a:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f6c:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f6e:	b9 84       	ldd	r11, Y+9	; 0x09
    1f70:	c8 84       	ldd	r12, Y+8	; 0x08
    1f72:	df 80       	ldd	r13, Y+7	; 0x07
    1f74:	ee 80       	ldd	r14, Y+6	; 0x06
    1f76:	fd 80       	ldd	r15, Y+5	; 0x05
    1f78:	0c 81       	ldd	r16, Y+4	; 0x04
    1f7a:	1b 81       	ldd	r17, Y+3	; 0x03
    1f7c:	aa 81       	ldd	r26, Y+2	; 0x02
    1f7e:	b9 81       	ldd	r27, Y+1	; 0x01
    1f80:	ce 0f       	add	r28, r30
    1f82:	d1 1d       	adc	r29, r1
    1f84:	0f b6       	in	r0, 0x3f	; 63
    1f86:	f8 94       	cli
    1f88:	de bf       	out	0x3e, r29	; 62
    1f8a:	0f be       	out	0x3f, r0	; 63
    1f8c:	cd bf       	out	0x3d, r28	; 61
    1f8e:	ed 01       	movw	r28, r26
    1f90:	08 95       	ret

00001f92 <__udivmodhi4>:
    1f92:	aa 1b       	sub	r26, r26
    1f94:	bb 1b       	sub	r27, r27
    1f96:	51 e1       	ldi	r21, 0x11	; 17
    1f98:	07 c0       	rjmp	.+14     	; 0x1fa8 <__udivmodhi4_ep>

00001f9a <__udivmodhi4_loop>:
    1f9a:	aa 1f       	adc	r26, r26
    1f9c:	bb 1f       	adc	r27, r27
    1f9e:	a6 17       	cp	r26, r22
    1fa0:	b7 07       	cpc	r27, r23
    1fa2:	10 f0       	brcs	.+4      	; 0x1fa8 <__udivmodhi4_ep>
    1fa4:	a6 1b       	sub	r26, r22
    1fa6:	b7 0b       	sbc	r27, r23

00001fa8 <__udivmodhi4_ep>:
    1fa8:	88 1f       	adc	r24, r24
    1faa:	99 1f       	adc	r25, r25
    1fac:	5a 95       	dec	r21
    1fae:	a9 f7       	brne	.-22     	; 0x1f9a <__udivmodhi4_loop>
    1fb0:	80 95       	com	r24
    1fb2:	90 95       	com	r25
    1fb4:	bc 01       	movw	r22, r24
    1fb6:	cd 01       	movw	r24, r26
    1fb8:	08 95       	ret

00001fba <isspace>:
    1fba:	91 11       	cpse	r25, r1
    1fbc:	bf c1       	rjmp	.+894    	; 0x233c <__ctype_isfalse>
    1fbe:	80 32       	cpi	r24, 0x20	; 32
    1fc0:	19 f0       	breq	.+6      	; 0x1fc8 <isspace+0xe>
    1fc2:	89 50       	subi	r24, 0x09	; 9
    1fc4:	85 50       	subi	r24, 0x05	; 5
    1fc6:	d0 f7       	brcc	.-12     	; 0x1fbc <isspace+0x2>
    1fc8:	08 95       	ret

00001fca <strchr_P>:
    1fca:	fc 01       	movw	r30, r24
    1fcc:	05 90       	lpm	r0, Z+
    1fce:	06 16       	cp	r0, r22
    1fd0:	21 f0       	breq	.+8      	; 0x1fda <strchr_P+0x10>
    1fd2:	00 20       	and	r0, r0
    1fd4:	d9 f7       	brne	.-10     	; 0x1fcc <strchr_P+0x2>
    1fd6:	c0 01       	movw	r24, r0
    1fd8:	08 95       	ret
    1fda:	31 97       	sbiw	r30, 0x01	; 1
    1fdc:	cf 01       	movw	r24, r30
    1fde:	08 95       	ret

00001fe0 <strcmp_P>:
    1fe0:	fb 01       	movw	r30, r22
    1fe2:	dc 01       	movw	r26, r24
    1fe4:	8d 91       	ld	r24, X+
    1fe6:	05 90       	lpm	r0, Z+
    1fe8:	80 19       	sub	r24, r0
    1fea:	01 10       	cpse	r0, r1
    1fec:	d9 f3       	breq	.-10     	; 0x1fe4 <strcmp_P+0x4>
    1fee:	99 0b       	sbc	r25, r25
    1ff0:	08 95       	ret

00001ff2 <strlen_P>:
    1ff2:	fc 01       	movw	r30, r24
    1ff4:	05 90       	lpm	r0, Z+
    1ff6:	00 20       	and	r0, r0
    1ff8:	e9 f7       	brne	.-6      	; 0x1ff4 <strlen_P+0x2>
    1ffa:	80 95       	com	r24
    1ffc:	90 95       	com	r25
    1ffe:	8e 0f       	add	r24, r30
    2000:	9f 1f       	adc	r25, r31
    2002:	08 95       	ret

00002004 <strtok>:
    2004:	44 e0       	ldi	r20, 0x04	; 4
    2006:	52 e0       	ldi	r21, 0x02	; 2
    2008:	0e 94 07 10 	call	0x200e	; 0x200e <strtok_r>
    200c:	08 95       	ret

0000200e <strtok_r>:
    200e:	fa 01       	movw	r30, r20
    2010:	a1 91       	ld	r26, Z+
    2012:	b0 81       	ld	r27, Z
    2014:	00 97       	sbiw	r24, 0x00	; 0
    2016:	19 f4       	brne	.+6      	; 0x201e <strtok_r+0x10>
    2018:	10 97       	sbiw	r26, 0x00	; 0
    201a:	e1 f0       	breq	.+56     	; 0x2054 <strtok_r+0x46>
    201c:	cd 01       	movw	r24, r26
    201e:	dc 01       	movw	r26, r24
    2020:	cd 01       	movw	r24, r26
    2022:	0d 90       	ld	r0, X+
    2024:	00 20       	and	r0, r0
    2026:	11 f4       	brne	.+4      	; 0x202c <strtok_r+0x1e>
    2028:	c0 01       	movw	r24, r0
    202a:	13 c0       	rjmp	.+38     	; 0x2052 <strtok_r+0x44>
    202c:	fb 01       	movw	r30, r22
    202e:	21 91       	ld	r18, Z+
    2030:	22 23       	and	r18, r18
    2032:	19 f0       	breq	.+6      	; 0x203a <strtok_r+0x2c>
    2034:	20 15       	cp	r18, r0
    2036:	d9 f7       	brne	.-10     	; 0x202e <strtok_r+0x20>
    2038:	f3 cf       	rjmp	.-26     	; 0x2020 <strtok_r+0x12>
    203a:	fb 01       	movw	r30, r22
    203c:	21 91       	ld	r18, Z+
    203e:	20 15       	cp	r18, r0
    2040:	19 f4       	brne	.+6      	; 0x2048 <strtok_r+0x3a>
    2042:	1e 92       	st	-X, r1
    2044:	11 96       	adiw	r26, 0x01	; 1
    2046:	06 c0       	rjmp	.+12     	; 0x2054 <strtok_r+0x46>
    2048:	22 23       	and	r18, r18
    204a:	c1 f7       	brne	.-16     	; 0x203c <strtok_r+0x2e>
    204c:	0d 90       	ld	r0, X+
    204e:	00 20       	and	r0, r0
    2050:	a1 f7       	brne	.-24     	; 0x203a <strtok_r+0x2c>
    2052:	d0 01       	movw	r26, r0
    2054:	fa 01       	movw	r30, r20
    2056:	a1 93       	st	Z+, r26
    2058:	b0 83       	st	Z, r27
    205a:	08 95       	ret

0000205c <fgetc>:
    205c:	cf 93       	push	r28
    205e:	df 93       	push	r29
    2060:	ec 01       	movw	r28, r24
    2062:	4b 81       	ldd	r20, Y+3	; 0x03
    2064:	40 ff       	sbrs	r20, 0
    2066:	1a c0       	rjmp	.+52     	; 0x209c <fgetc+0x40>
    2068:	46 ff       	sbrs	r20, 6
    206a:	0a c0       	rjmp	.+20     	; 0x2080 <fgetc+0x24>
    206c:	4f 7b       	andi	r20, 0xBF	; 191
    206e:	4b 83       	std	Y+3, r20	; 0x03
    2070:	8e 81       	ldd	r24, Y+6	; 0x06
    2072:	9f 81       	ldd	r25, Y+7	; 0x07
    2074:	01 96       	adiw	r24, 0x01	; 1
    2076:	9f 83       	std	Y+7, r25	; 0x07
    2078:	8e 83       	std	Y+6, r24	; 0x06
    207a:	8a 81       	ldd	r24, Y+2	; 0x02
    207c:	28 2f       	mov	r18, r24
    207e:	2b c0       	rjmp	.+86     	; 0x20d6 <fgetc+0x7a>
    2080:	42 ff       	sbrs	r20, 2
    2082:	13 c0       	rjmp	.+38     	; 0x20aa <fgetc+0x4e>
    2084:	e8 81       	ld	r30, Y
    2086:	f9 81       	ldd	r31, Y+1	; 0x01
    2088:	80 81       	ld	r24, Z
    208a:	28 2f       	mov	r18, r24
    208c:	33 27       	eor	r19, r19
    208e:	27 fd       	sbrc	r18, 7
    2090:	30 95       	com	r19
    2092:	21 15       	cp	r18, r1
    2094:	31 05       	cpc	r19, r1
    2096:	29 f4       	brne	.+10     	; 0x20a2 <fgetc+0x46>
    2098:	40 62       	ori	r20, 0x20	; 32
    209a:	4b 83       	std	Y+3, r20	; 0x03
    209c:	2f ef       	ldi	r18, 0xFF	; 255
    209e:	3f ef       	ldi	r19, 0xFF	; 255
    20a0:	1b c0       	rjmp	.+54     	; 0x20d8 <fgetc+0x7c>
    20a2:	31 96       	adiw	r30, 0x01	; 1
    20a4:	f9 83       	std	Y+1, r31	; 0x01
    20a6:	e8 83       	st	Y, r30
    20a8:	11 c0       	rjmp	.+34     	; 0x20cc <fgetc+0x70>
    20aa:	ea 85       	ldd	r30, Y+10	; 0x0a
    20ac:	fb 85       	ldd	r31, Y+11	; 0x0b
    20ae:	ce 01       	movw	r24, r28
    20b0:	09 95       	icall
    20b2:	9c 01       	movw	r18, r24
    20b4:	97 ff       	sbrs	r25, 7
    20b6:	0a c0       	rjmp	.+20     	; 0x20cc <fgetc+0x70>
    20b8:	9b 81       	ldd	r25, Y+3	; 0x03
    20ba:	2f 5f       	subi	r18, 0xFF	; 255
    20bc:	3f 4f       	sbci	r19, 0xFF	; 255
    20be:	11 f0       	breq	.+4      	; 0x20c4 <fgetc+0x68>
    20c0:	80 e2       	ldi	r24, 0x20	; 32
    20c2:	01 c0       	rjmp	.+2      	; 0x20c6 <fgetc+0x6a>
    20c4:	80 e1       	ldi	r24, 0x10	; 16
    20c6:	89 2b       	or	r24, r25
    20c8:	8b 83       	std	Y+3, r24	; 0x03
    20ca:	e8 cf       	rjmp	.-48     	; 0x209c <fgetc+0x40>
    20cc:	8e 81       	ldd	r24, Y+6	; 0x06
    20ce:	9f 81       	ldd	r25, Y+7	; 0x07
    20d0:	01 96       	adiw	r24, 0x01	; 1
    20d2:	9f 83       	std	Y+7, r25	; 0x07
    20d4:	8e 83       	std	Y+6, r24	; 0x06
    20d6:	30 e0       	ldi	r19, 0x00	; 0
    20d8:	c9 01       	movw	r24, r18
    20da:	df 91       	pop	r29
    20dc:	cf 91       	pop	r28
    20de:	08 95       	ret

000020e0 <fputc>:
    20e0:	0f 93       	push	r16
    20e2:	1f 93       	push	r17
    20e4:	cf 93       	push	r28
    20e6:	df 93       	push	r29
    20e8:	8c 01       	movw	r16, r24
    20ea:	eb 01       	movw	r28, r22
    20ec:	8b 81       	ldd	r24, Y+3	; 0x03
    20ee:	81 ff       	sbrs	r24, 1
    20f0:	1b c0       	rjmp	.+54     	; 0x2128 <fputc+0x48>
    20f2:	82 ff       	sbrs	r24, 2
    20f4:	0d c0       	rjmp	.+26     	; 0x2110 <fputc+0x30>
    20f6:	2e 81       	ldd	r18, Y+6	; 0x06
    20f8:	3f 81       	ldd	r19, Y+7	; 0x07
    20fa:	8c 81       	ldd	r24, Y+4	; 0x04
    20fc:	9d 81       	ldd	r25, Y+5	; 0x05
    20fe:	28 17       	cp	r18, r24
    2100:	39 07       	cpc	r19, r25
    2102:	64 f4       	brge	.+24     	; 0x211c <fputc+0x3c>
    2104:	e8 81       	ld	r30, Y
    2106:	f9 81       	ldd	r31, Y+1	; 0x01
    2108:	01 93       	st	Z+, r16
    210a:	f9 83       	std	Y+1, r31	; 0x01
    210c:	e8 83       	st	Y, r30
    210e:	06 c0       	rjmp	.+12     	; 0x211c <fputc+0x3c>
    2110:	e8 85       	ldd	r30, Y+8	; 0x08
    2112:	f9 85       	ldd	r31, Y+9	; 0x09
    2114:	80 2f       	mov	r24, r16
    2116:	09 95       	icall
    2118:	89 2b       	or	r24, r25
    211a:	31 f4       	brne	.+12     	; 0x2128 <fputc+0x48>
    211c:	8e 81       	ldd	r24, Y+6	; 0x06
    211e:	9f 81       	ldd	r25, Y+7	; 0x07
    2120:	01 96       	adiw	r24, 0x01	; 1
    2122:	9f 83       	std	Y+7, r25	; 0x07
    2124:	8e 83       	std	Y+6, r24	; 0x06
    2126:	02 c0       	rjmp	.+4      	; 0x212c <fputc+0x4c>
    2128:	0f ef       	ldi	r16, 0xFF	; 255
    212a:	1f ef       	ldi	r17, 0xFF	; 255
    212c:	c8 01       	movw	r24, r16
    212e:	df 91       	pop	r29
    2130:	cf 91       	pop	r28
    2132:	1f 91       	pop	r17
    2134:	0f 91       	pop	r16
    2136:	08 95       	ret

00002138 <printf_P>:
    2138:	a0 e0       	ldi	r26, 0x00	; 0
    213a:	b0 e0       	ldi	r27, 0x00	; 0
    213c:	e2 ea       	ldi	r30, 0xA2	; 162
    213e:	f0 e1       	ldi	r31, 0x10	; 16
    2140:	0c 94 a2 0f 	jmp	0x1f44	; 0x1f44 <__prologue_saves__+0x20>
    2144:	fe 01       	movw	r30, r28
    2146:	35 96       	adiw	r30, 0x05	; 5
    2148:	61 91       	ld	r22, Z+
    214a:	71 91       	ld	r23, Z+
    214c:	a0 91 5d 03 	lds	r26, 0x035D
    2150:	b0 91 5e 03 	lds	r27, 0x035E
    2154:	13 96       	adiw	r26, 0x03	; 3
    2156:	8c 91       	ld	r24, X
    2158:	13 97       	sbiw	r26, 0x03	; 3
    215a:	88 60       	ori	r24, 0x08	; 8
    215c:	13 96       	adiw	r26, 0x03	; 3
    215e:	8c 93       	st	X, r24
    2160:	80 91 5d 03 	lds	r24, 0x035D
    2164:	90 91 5e 03 	lds	r25, 0x035E
    2168:	af 01       	movw	r20, r30
    216a:	0e 94 82 0c 	call	0x1904	; 0x1904 <vfprintf>
    216e:	e0 91 5d 03 	lds	r30, 0x035D
    2172:	f0 91 5e 03 	lds	r31, 0x035E
    2176:	23 81       	ldd	r18, Z+3	; 0x03
    2178:	27 7f       	andi	r18, 0xF7	; 247
    217a:	23 83       	std	Z+3, r18	; 0x03
    217c:	20 96       	adiw	r28, 0x00	; 0
    217e:	e2 e0       	ldi	r30, 0x02	; 2
    2180:	0c 94 be 0f 	jmp	0x1f7c	; 0x1f7c <__epilogue_restores__+0x20>

00002184 <sscanf>:
    2184:	ae e0       	ldi	r26, 0x0E	; 14
    2186:	b0 e0       	ldi	r27, 0x00	; 0
    2188:	e8 ec       	ldi	r30, 0xC8	; 200
    218a:	f0 e1       	ldi	r31, 0x10	; 16
    218c:	0c 94 a2 0f 	jmp	0x1f44	; 0x1f44 <__prologue_saves__+0x20>
    2190:	85 e0       	ldi	r24, 0x05	; 5
    2192:	8c 83       	std	Y+4, r24	; 0x04
    2194:	8b 89       	ldd	r24, Y+19	; 0x13
    2196:	9c 89       	ldd	r25, Y+20	; 0x14
    2198:	9a 83       	std	Y+2, r25	; 0x02
    219a:	89 83       	std	Y+1, r24	; 0x01
    219c:	9e 01       	movw	r18, r28
    219e:	29 5e       	subi	r18, 0xE9	; 233
    21a0:	3f 4f       	sbci	r19, 0xFF	; 255
    21a2:	ce 01       	movw	r24, r28
    21a4:	01 96       	adiw	r24, 0x01	; 1
    21a6:	6d 89       	ldd	r22, Y+21	; 0x15
    21a8:	7e 89       	ldd	r23, Y+22	; 0x16
    21aa:	a9 01       	movw	r20, r18
    21ac:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <vfscanf>
    21b0:	2e 96       	adiw	r28, 0x0e	; 14
    21b2:	e2 e0       	ldi	r30, 0x02	; 2
    21b4:	0c 94 be 0f 	jmp	0x1f7c	; 0x1f7c <__epilogue_restores__+0x20>

000021b8 <sscanf_P>:
    21b8:	ae e0       	ldi	r26, 0x0E	; 14
    21ba:	b0 e0       	ldi	r27, 0x00	; 0
    21bc:	e2 ee       	ldi	r30, 0xE2	; 226
    21be:	f0 e1       	ldi	r31, 0x10	; 16
    21c0:	0c 94 a2 0f 	jmp	0x1f44	; 0x1f44 <__prologue_saves__+0x20>
    21c4:	8d e0       	ldi	r24, 0x0D	; 13
    21c6:	8c 83       	std	Y+4, r24	; 0x04
    21c8:	8b 89       	ldd	r24, Y+19	; 0x13
    21ca:	9c 89       	ldd	r25, Y+20	; 0x14
    21cc:	9a 83       	std	Y+2, r25	; 0x02
    21ce:	89 83       	std	Y+1, r24	; 0x01
    21d0:	9e 01       	movw	r18, r28
    21d2:	29 5e       	subi	r18, 0xE9	; 233
    21d4:	3f 4f       	sbci	r19, 0xFF	; 255
    21d6:	ce 01       	movw	r24, r28
    21d8:	01 96       	adiw	r24, 0x01	; 1
    21da:	6d 89       	ldd	r22, Y+21	; 0x15
    21dc:	7e 89       	ldd	r23, Y+22	; 0x16
    21de:	a9 01       	movw	r20, r18
    21e0:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <vfscanf>
    21e4:	2e 96       	adiw	r28, 0x0e	; 14
    21e6:	e2 e0       	ldi	r30, 0x02	; 2
    21e8:	0c 94 be 0f 	jmp	0x1f7c	; 0x1f7c <__epilogue_restores__+0x20>

000021ec <ungetc>:
    21ec:	9c 01       	movw	r18, r24
    21ee:	fb 01       	movw	r30, r22
    21f0:	83 81       	ldd	r24, Z+3	; 0x03
    21f2:	80 ff       	sbrs	r24, 0
    21f4:	11 c0       	rjmp	.+34     	; 0x2218 <ungetc+0x2c>
    21f6:	86 fd       	sbrc	r24, 6
    21f8:	0f c0       	rjmp	.+30     	; 0x2218 <ungetc+0x2c>
    21fa:	9f ef       	ldi	r25, 0xFF	; 255
    21fc:	2f 3f       	cpi	r18, 0xFF	; 255
    21fe:	39 07       	cpc	r19, r25
    2200:	59 f0       	breq	.+22     	; 0x2218 <ungetc+0x2c>
    2202:	22 83       	std	Z+2, r18	; 0x02
    2204:	80 64       	ori	r24, 0x40	; 64
    2206:	8f 7d       	andi	r24, 0xDF	; 223
    2208:	83 83       	std	Z+3, r24	; 0x03
    220a:	86 81       	ldd	r24, Z+6	; 0x06
    220c:	97 81       	ldd	r25, Z+7	; 0x07
    220e:	01 97       	sbiw	r24, 0x01	; 1
    2210:	97 83       	std	Z+7, r25	; 0x07
    2212:	86 83       	std	Z+6, r24	; 0x06
    2214:	30 e0       	ldi	r19, 0x00	; 0
    2216:	02 c0       	rjmp	.+4      	; 0x221c <ungetc+0x30>
    2218:	2f ef       	ldi	r18, 0xFF	; 255
    221a:	3f ef       	ldi	r19, 0xFF	; 255
    221c:	c9 01       	movw	r24, r18
    221e:	08 95       	ret

00002220 <__ultoa_invert>:
    2220:	fa 01       	movw	r30, r20
    2222:	aa 27       	eor	r26, r26
    2224:	28 30       	cpi	r18, 0x08	; 8
    2226:	51 f1       	breq	.+84     	; 0x227c <__ultoa_invert+0x5c>
    2228:	20 31       	cpi	r18, 0x10	; 16
    222a:	81 f1       	breq	.+96     	; 0x228c <__ultoa_invert+0x6c>
    222c:	e8 94       	clt
    222e:	6f 93       	push	r22
    2230:	6e 7f       	andi	r22, 0xFE	; 254
    2232:	6e 5f       	subi	r22, 0xFE	; 254
    2234:	7f 4f       	sbci	r23, 0xFF	; 255
    2236:	8f 4f       	sbci	r24, 0xFF	; 255
    2238:	9f 4f       	sbci	r25, 0xFF	; 255
    223a:	af 4f       	sbci	r26, 0xFF	; 255
    223c:	b1 e0       	ldi	r27, 0x01	; 1
    223e:	3e d0       	rcall	.+124    	; 0x22bc <__ultoa_invert+0x9c>
    2240:	b4 e0       	ldi	r27, 0x04	; 4
    2242:	3c d0       	rcall	.+120    	; 0x22bc <__ultoa_invert+0x9c>
    2244:	67 0f       	add	r22, r23
    2246:	78 1f       	adc	r23, r24
    2248:	89 1f       	adc	r24, r25
    224a:	9a 1f       	adc	r25, r26
    224c:	a1 1d       	adc	r26, r1
    224e:	68 0f       	add	r22, r24
    2250:	79 1f       	adc	r23, r25
    2252:	8a 1f       	adc	r24, r26
    2254:	91 1d       	adc	r25, r1
    2256:	a1 1d       	adc	r26, r1
    2258:	6a 0f       	add	r22, r26
    225a:	71 1d       	adc	r23, r1
    225c:	81 1d       	adc	r24, r1
    225e:	91 1d       	adc	r25, r1
    2260:	a1 1d       	adc	r26, r1
    2262:	20 d0       	rcall	.+64     	; 0x22a4 <__ultoa_invert+0x84>
    2264:	09 f4       	brne	.+2      	; 0x2268 <__ultoa_invert+0x48>
    2266:	68 94       	set
    2268:	3f 91       	pop	r19
    226a:	2a e0       	ldi	r18, 0x0A	; 10
    226c:	26 9f       	mul	r18, r22
    226e:	11 24       	eor	r1, r1
    2270:	30 19       	sub	r19, r0
    2272:	30 5d       	subi	r19, 0xD0	; 208
    2274:	31 93       	st	Z+, r19
    2276:	de f6       	brtc	.-74     	; 0x222e <__ultoa_invert+0xe>
    2278:	cf 01       	movw	r24, r30
    227a:	08 95       	ret
    227c:	46 2f       	mov	r20, r22
    227e:	47 70       	andi	r20, 0x07	; 7
    2280:	40 5d       	subi	r20, 0xD0	; 208
    2282:	41 93       	st	Z+, r20
    2284:	b3 e0       	ldi	r27, 0x03	; 3
    2286:	0f d0       	rcall	.+30     	; 0x22a6 <__ultoa_invert+0x86>
    2288:	c9 f7       	brne	.-14     	; 0x227c <__ultoa_invert+0x5c>
    228a:	f6 cf       	rjmp	.-20     	; 0x2278 <__ultoa_invert+0x58>
    228c:	46 2f       	mov	r20, r22
    228e:	4f 70       	andi	r20, 0x0F	; 15
    2290:	40 5d       	subi	r20, 0xD0	; 208
    2292:	4a 33       	cpi	r20, 0x3A	; 58
    2294:	18 f0       	brcs	.+6      	; 0x229c <__ultoa_invert+0x7c>
    2296:	49 5d       	subi	r20, 0xD9	; 217
    2298:	31 fd       	sbrc	r19, 1
    229a:	40 52       	subi	r20, 0x20	; 32
    229c:	41 93       	st	Z+, r20
    229e:	02 d0       	rcall	.+4      	; 0x22a4 <__ultoa_invert+0x84>
    22a0:	a9 f7       	brne	.-22     	; 0x228c <__ultoa_invert+0x6c>
    22a2:	ea cf       	rjmp	.-44     	; 0x2278 <__ultoa_invert+0x58>
    22a4:	b4 e0       	ldi	r27, 0x04	; 4
    22a6:	a6 95       	lsr	r26
    22a8:	97 95       	ror	r25
    22aa:	87 95       	ror	r24
    22ac:	77 95       	ror	r23
    22ae:	67 95       	ror	r22
    22b0:	ba 95       	dec	r27
    22b2:	c9 f7       	brne	.-14     	; 0x22a6 <__ultoa_invert+0x86>
    22b4:	00 97       	sbiw	r24, 0x00	; 0
    22b6:	61 05       	cpc	r22, r1
    22b8:	71 05       	cpc	r23, r1
    22ba:	08 95       	ret
    22bc:	9b 01       	movw	r18, r22
    22be:	ac 01       	movw	r20, r24
    22c0:	0a 2e       	mov	r0, r26
    22c2:	06 94       	lsr	r0
    22c4:	57 95       	ror	r21
    22c6:	47 95       	ror	r20
    22c8:	37 95       	ror	r19
    22ca:	27 95       	ror	r18
    22cc:	ba 95       	dec	r27
    22ce:	c9 f7       	brne	.-14     	; 0x22c2 <__ultoa_invert+0xa2>
    22d0:	62 0f       	add	r22, r18
    22d2:	73 1f       	adc	r23, r19
    22d4:	84 1f       	adc	r24, r20
    22d6:	95 1f       	adc	r25, r21
    22d8:	a0 1d       	adc	r26, r0
    22da:	08 95       	ret

000022dc <__eerd_block_m168>:
    22dc:	dc 01       	movw	r26, r24
    22de:	cb 01       	movw	r24, r22

000022e0 <__eerd_blraw_m168>:
    22e0:	fc 01       	movw	r30, r24
    22e2:	f9 99       	sbic	0x1f, 1	; 31
    22e4:	fe cf       	rjmp	.-4      	; 0x22e2 <__eerd_blraw_m168+0x2>
    22e6:	06 c0       	rjmp	.+12     	; 0x22f4 <__eerd_blraw_m168+0x14>
    22e8:	f2 bd       	out	0x22, r31	; 34
    22ea:	e1 bd       	out	0x21, r30	; 33
    22ec:	f8 9a       	sbi	0x1f, 0	; 31
    22ee:	31 96       	adiw	r30, 0x01	; 1
    22f0:	00 b4       	in	r0, 0x20	; 32
    22f2:	0d 92       	st	X+, r0
    22f4:	41 50       	subi	r20, 0x01	; 1
    22f6:	50 40       	sbci	r21, 0x00	; 0
    22f8:	b8 f7       	brcc	.-18     	; 0x22e8 <__eerd_blraw_m168+0x8>
    22fa:	08 95       	ret

000022fc <__eerd_byte_m168>:
    22fc:	f9 99       	sbic	0x1f, 1	; 31
    22fe:	fe cf       	rjmp	.-4      	; 0x22fc <__eerd_byte_m168>
    2300:	92 bd       	out	0x22, r25	; 34
    2302:	81 bd       	out	0x21, r24	; 33
    2304:	f8 9a       	sbi	0x1f, 0	; 31
    2306:	99 27       	eor	r25, r25
    2308:	80 b5       	in	r24, 0x20	; 32
    230a:	08 95       	ret

0000230c <__eewr_block_m168>:
    230c:	dc 01       	movw	r26, r24
    230e:	cb 01       	movw	r24, r22
    2310:	03 c0       	rjmp	.+6      	; 0x2318 <__eewr_block_m168+0xc>
    2312:	2d 91       	ld	r18, X+
    2314:	0e 94 91 11 	call	0x2322	; 0x2322 <__eewr_r18_m168>
    2318:	41 50       	subi	r20, 0x01	; 1
    231a:	50 40       	sbci	r21, 0x00	; 0
    231c:	d0 f7       	brcc	.-12     	; 0x2312 <__eewr_block_m168+0x6>
    231e:	08 95       	ret

00002320 <__eewr_byte_m168>:
    2320:	26 2f       	mov	r18, r22

00002322 <__eewr_r18_m168>:
    2322:	f9 99       	sbic	0x1f, 1	; 31
    2324:	fe cf       	rjmp	.-4      	; 0x2322 <__eewr_r18_m168>
    2326:	1f ba       	out	0x1f, r1	; 31
    2328:	92 bd       	out	0x22, r25	; 34
    232a:	81 bd       	out	0x21, r24	; 33
    232c:	20 bd       	out	0x20, r18	; 32
    232e:	0f b6       	in	r0, 0x3f	; 63
    2330:	f8 94       	cli
    2332:	fa 9a       	sbi	0x1f, 2	; 31
    2334:	f9 9a       	sbi	0x1f, 1	; 31
    2336:	0f be       	out	0x3f, r0	; 63
    2338:	01 96       	adiw	r24, 0x01	; 1
    233a:	08 95       	ret

0000233c <__ctype_isfalse>:
    233c:	99 27       	eor	r25, r25
    233e:	88 27       	eor	r24, r24

00002340 <__ctype_istrue>:
    2340:	08 95       	ret

00002342 <_exit>:
    2342:	f8 94       	cli

00002344 <__stop_program>:
    2344:	ff cf       	rjmp	.-2      	; 0x2344 <__stop_program>
